Debugging log of Inform 7
NI called as: C:\Program Files\Inform 7\Compilers\ni -rules C:\Program Files\Inform 7\Inform7\Extensions -package C:\Users\Stever\Documents\Inform\Projects\Castalia.inform -extension=z5 


-----------------------------------------------------
Phase I ... Lexical analysis
-----------------------------------------------------

I've now read your source text, which is 322 words long.
Created object: O0


-----------------------------------------------------
Phase II ... Semantic analysis I
-----------------------------------------------------

New extension file: standard rules by graham nelson
I've also read Standard Rules by Graham Nelson, which is 34203 words long.
Checking standard rules against standard rules by graham nelson
Subject document actions, object doc96
Subject document activities, object doc273
Subject document arsummary, object doc182
Subject document extactivities, object doc277
Subject document headings, object doc15
Subject document kinds, object doc31
Subject document kindsvalue, object doc61
Subject document lcards, object doc368
Subject document newrulebooks, object doc318
Subject document phrases, object doc160
Subject document roomplaybegins, object doc134
Subject document scenesintro, object doc150
Subject document act_all, object doc306
Subject document act_amuse, object doc309
Subject document act_banner, object doc307
Subject document act_clarify, object doc300
Subject document act_cnlo, object doc297
Subject document act_con, object doc281
Subject document act_csl, object doc293
Subject document act_darkdesc, object doc292
Subject document act_darkname, object doc291
Subject document act_details, object doc287
Subject document act_ds, object doc299
Subject document act_gt, object doc286
Subject document act_implicitly, object doc304
Subject document act_lc, object doc285
Subject document act_lni, object doc295
Subject document act_nowdark, object doc289
Subject document act_nowlight, object doc290
Subject document act_obit, object doc308
Subject document act_pan, object doc284
Subject document act_parsererror, object doc305
Subject document act_pld, object doc296
Subject document act_plp, object doc298
Subject document act_pn, object doc282
Subject document act_ppn, object doc283
Subject document act_reading, object doc303
Subject document act_smn, object doc302
Subject document act_startvm, object doc310
Subject document act_toodark, object doc288
Subject document act_which, object doc301
Subject document act_wpa, object doc294
Subject document kind_backdrop, object doc35
Subject document kind_device, object doc40
Subject document kind_door, object doc38
Subject document kind_person, object doc43
Subject document kind_player's, object doc47
Subject document kind_time, object doc139
Subject document kind_vehicle, object doc42
Subject document ph_abide, object doc326
Subject document ph_addlist, object doc344
Subject document ph_allow, object doc196
Subject document ph_awardp, object doc135
Subject document ph_beginact, object doc279
Subject document ph_bestroute, object doc92
Subject document ph_blankout, object doc242
Subject document ph_boxed, object doc80
Subject document ph_break, object doc170
Subject document ph_carryout, object doc277
Subject document ph_casing, object doc334
Subject document ph_change, object doc115
Subject document ph_changep, object doc123
Subject document ph_changev, object doc119
Subject document ph_changex, object doc119
Subject document ph_chooserow, object doc237
Subject document ph_consents, object doc163
Subject document ph_consider, object doc326
Subject document ph_curract, object doc200
Subject document ph_displayf, object doc356
Subject document ph_durations, object doc141
Subject document ph_end, object doc137
Subject document ph_exactm, object doc335
Subject document ph_extcr, object doc403
Subject document ph_filetables, object doc362
Subject document ph_follow, object doc318
Subject document ph_frontside, object doc38
Subject document ph_future, object doc144
Subject document ph_goingon, object doc274
Subject document ph_group, object doc285
Subject document ph_happening, object doc153
Subject document ph_holder, object doc130
Subject document ph_if, object doc164
Subject document ph_ignore, object doc325
Subject document ph_increase, object doc218
Subject document ph_indarkness, object doc163
Subject document ph_involves, object doc200
Subject document ph_islistedin, object doc343
Subject document ph_lbreak, object doc74
Subject document ph_let, object doc174
Subject document ph_list, object doc173
Subject document ph_listd, object doc345
Subject document ph_locof, object doc51
Subject document ph_minspart, object doc143
Subject document ph_mobjl, object doc345
Subject document ph_move, object doc121
Subject document ph_movebd, object doc122
Subject document ph_nearest, object doc141
Subject document ph_next, object doc170
Subject document ph_nextstep, object doc212
Subject document ph_nothing, object doc161
Subject document ph_now, object doc125
Subject document ph_numblank, object doc242
Subject document ph_numel, object doc348
Subject document ph_numof, object doc82
Subject document ph_numofc, object doc333
Subject document ph_numrows, object doc234
Subject document ph_omit, object doc282
Subject document ph_otherwise, object doc167
Subject document ph_outcomer, object doc322
Subject document ph_playsf, object doc358
Subject document ph_plus, object doc218
Subject document ph_randobj, object doc132
Subject document ph_random, object doc131
Subject document ph_readytr, object doc364
Subject document ph_regexp, object doc336
Subject document ph_remlist, object doc344
Subject document ph_remove, object doc124
Subject document ph_repeat, object doc168
Subject document ph_replace, object doc338
Subject document ph_requires, object doc187
Subject document ph_result, object doc175
Subject document ph_resultr, object doc323
Subject document ph_revl, object doc347
Subject document ph_roomdirof, object doc92
Subject document ph_rotl, object doc347
Subject document ph_runthrough, object doc169
Subject document ph_say, object doc76
Subject document ph_saya, object doc69
Subject document ph_sayif, object doc72
Subject document ph_saylv, object doc342
Subject document ph_sayn, object doc70
Subject document ph_sayoneof, object doc73
Subject document ph_scope, object doc299
Subject document ph_sort, object doc243
Subject document ph_sortl, object doc347
Subject document ph_stop, object doc171
Subject document ph_stopac, object doc98
Subject document ph_succeeds, object doc321
Subject document ph_surrounds, object doc117
Subject document ph_tabrepeat, object doc238
Subject document ph_testuo, object doc417
Subject document ph_thereis, object doc239
Subject document ph_timeshift, object doc142
Subject document ph_total, object doc230
Subject document ph_truncate, object doc349
Subject document ph_try, object doc99
Subject document ph_tsince, object doc152
Subject document ph_types, object doc75
Subject document ph_updatebp, object doc122
Subject document ph_while, object doc165
Subject document ph_wornot, object doc163
Subject document ph_writef, object doc363
Subject document ph_yes, object doc175
Subject document rules_after, object doc100
Subject document rules_before, object doc98
Subject document rules_dtpm, object doc269
Subject document rules_et, object doc138
Subject document rules_fail, object doc185
Subject document rules_instead, object doc97
Subject document rules_internal, object doc328
Subject document rules_per, object doc184
Subject document rules_proc, object doc324
Subject document rules_ri, object doc196
Subject document rules_wpb, object doc134
Subject document rules_wpe, object doc137
Subject document var_command, object doc303
Subject document var_location, object doc64
Subject document var_noun, object doc105
Subject document var_particular, object doc281
Subject document var_person_asked, object doc183
Subject document var_person_reaching, object doc198
Subject document var_prompt, object doc116
Subject document var_reason, object doc185
Subject document var_score, object doc135
Subject document var_sl, object doc117
Subject document var_time, object doc139
Subject document var_understood, object doc260
Subject document visibility, object doc199
Subject use dynamic memory allocation of at least 8192, object (-  Constant DynamicMemoryAllocation = {N}; 
Subject use maximum indexed text length of at least 1024, object (-  Constant IT_MemoryBufferSize = {N}+3; 
Subject use american dialect, object (-  Constant DIALECT_US; 
Subject use the serial comma, object (-  Constant SERIAL_COMMA; 
Subject use full-length room descriptions, object (-  Constant I7_LOOKMODE = 2; 
Subject use abbreviated room descriptions, object (-  Constant I7_LOOKMODE = 3; 
Subject use memory economy, object (-  Constant MEMORY_ECONOMY; 
Subject use authorial modesty, object (-  Constant AUTHORIAL_MODESTY; 
Subject use no scoring, object (-  Constant NO_SCORING; 
Subject use command line echoing, object (-  Constant ECHO_COMMANDS; 
Subject use undo prevention, object (-  Constant PREVENT_UNDO; 
Subject use predictable randomisation, object (-  Constant FIX_RNG; 
Subject use fast route-finding, object (-  Constant FAST_ROUTE_FINDING; 
Subject use slow route-finding, object (-  Constant SLOW_ROUTE_FINDING; 
Subject the verb to be in, object the reversed containment relation
Subject the verb to be inside, object the reversed containment relation
Subject the verb to be within, object the reversed containment relation
Subject the verb to be held in, object the reversed containment relation
Subject the verb to be held inside, object the reversed containment relation
Subject the verb to contain ( he contains , they contain , he contained , it is contained , he is containing ), object the containment relation
Subject the verb to be contained in, object the reversed containment relation
Subject the verb to be on, object the reversed support relation
Subject the verb to be on top of, object the reversed support relation
Subject the verb to support ( he supports , they support , he supported , it is supported , he is supporting ), object the support relation
Subject the verb to be supported on, object the reversed support relation
Subject the verb to incorporate ( he incorporates , they incorporate , he incorporated , it is incorporated , he is incorporating ), object the incorporation relation
Subject the verb to be part of, object the reversed incorporation relation
Subject the verb to be a part of, object the reversed incorporation relation
Subject the verb to be parts of, object the reversed incorporation relation
Subject the verb to enclose ( he encloses , they enclose , he enclosed , it is enclosed , he is enclosing ), object the enclosure relation
Subject the verb to carry ( he carries , they carry , he carried , it is carried ( adjectival ) , he is carrying ), object the carrying relation
Subject the verb to hold ( he holds , they hold , he held , it is held ( adjectival ) , he is holding ), object the holding relation
Subject the verb to wear ( he wears , they wear , he wore , it is worn ( adjectival ) , he is wearing ), object the wearing relation
Subject the verb to be able to see ( he is seen ), object the visibility relation
Subject the verb to be able to touch ( he is touched ), object the touchability relation
Subject the verb to conceal ( he conceals , they conceal , he concealed , it is concealed , he is concealing ), object the concealment relation
Subject the verb to be greater than, object the numerically-greater-than relation
Subject the verb to be less than, object the numerically-less-than relation
Subject the verb to be at least, object the numerically-greater-than-or-equal-to relation
Subject the verb to be at most, object the numerically-less-than-or-equal-to relation
Subject a room, object a kind
Subject a thing, object a kind
Subject a direction, object a kind
Subject a door, object a kind of thing
Subject a container, object a kind of thing
Subject a supporter, object a kind of thing
Subject a backdrop, object a kind of thing
Subject the plural of person, object people
Subject the plural of person, object persons
Subject a person, object a kind of thing
Subject a region, object a kind
Subject the specification of room, object "Represents geographical locations, both indoor
and outdoor, which are not necessarily areas in a building. A player in one
room is mostly unable to sense, or interact with, anything in a different room.
Rooms are arranged in a map."
Subject a room, object privately-named or publically-named
Subject a room, object usually publically-named
Subject a room, object lighted or dark
Subject a room, object usually lighted
Subject a room, object visited or unvisited
Subject a room, object usually unvisited
Subject a room, object a text called description
Subject a room, object a text called printed name
Subject a room, object an object called map region
Subject the map region of a room, object usually nothing
Subject the verb to be adjacent to, object the reversed adjacency relation
Subject the verb to be regionally in, object the reversed regional-containment relation
Subject the specification of thing, object "Represents anything interactive in the model
world that is not a room. People, pieces of scenery, furniture, doors and
mislaid umbrellas might all be examples, and so might more surprising things
like the sound of birdsong or a shaft of sunlight."
Subject a thing, object lit or unlit
Subject a thing, object usually unlit
Subject a thing, object edible or inedible
Subject a thing, object usually inedible
Subject a thing, object fixed in place or portable
Subject a thing, object usually portable
Subject a thing, object scenery
Subject a thing, object wearable
Subject a thing, object pushable between rooms
Subject a thing, object handled
Subject a thing, object initially carried
Subject a thing, object privately-named or publically-named
Subject a thing, object usually publically-named
Subject a thing, object plural-named or singular-named
Subject a thing, object usually singular-named
Subject a thing, object proper-named or improper-named
Subject a thing, object usually improper-named
Subject a thing, object described or undescribed
Subject a thing, object usually described
Subject a thing, object marked for listing or unmarked for listing
Subject a thing, object usually unmarked for listing
Subject a thing, object mentioned or unmentioned
Subject a thing, object usually mentioned
Subject a thing, object a text called an indefinite article
Subject a thing, object a text called a description
Subject a thing, object a text called an initial appearance
Subject a thing, object a text called printed name
Subject a thing, object a text called a printed plural name
Subject scenery, object usually fixed in place
Subject the specification of direction, object "Represents a direction of movement, such
as northeast or down."
Subject a direction, object privately-named or publically-named
Subject a direction, object usually publically-named
Subject a direction, object marked for listing or unmarked for listing
Subject a direction, object usually unmarked for listing
Subject a direction, object a direction called an opposite
Subject the north, object a direction
Rel name is <mapping-north>
Subject the northeast, object a direction
Rel name is <mapping-northeast>
Subject the northwest, object a direction
Rel name is <mapping-northwest>
Subject the south, object a direction
Rel name is <mapping-south>
Subject the southeast, object a direction
Rel name is <mapping-southeast>
Subject the southwest, object a direction
Rel name is <mapping-southwest>
Subject the east, object a direction
Rel name is <mapping-east>
Subject the west, object a direction
Rel name is <mapping-west>
Subject the up, object a direction
Rel name is <mapping-up>
Subject the down, object a direction
Rel name is <mapping-down>
Subject the inside, object a direction
Rel name is <mapping-inside>
Subject the outside, object a direction
Rel name is <mapping-outside>
Subject the north, object opposite south
Subject understand "n", object north
Subject the northeast, object opposite southwest
Subject understand "ne", object northeast
Subject the northwest, object opposite southeast
Subject understand "nw", object northwest
Subject the south, object opposite north
Subject understand "s", object south
Subject the southeast, object opposite northwest
Subject understand "se", object southeast
Subject the southwest, object opposite northeast
Subject understand "sw", object southwest
Subject the east, object opposite west
Subject understand "e", object east
Subject the west, object opposite east
Subject understand "w", object west
Subject up, object opposite down
Subject understand "u", object up
Subject down, object opposite up
Subject understand "d", object down
Subject inside, object opposite outside
Subject understand "in", object inside
Subject outside, object opposite inside
Subject understand "out", object outside
Subject the inside object, object as "in_obj"
Subject the outside object, object as "out_obj"
Subject the verb to be above, object the mapping-up relation
Subject the verb to be mapped above, object the mapping-up relation
Subject the verb to be below, object the mapping-down relation
Subject the verb to be mapped below, object the mapping-down relation
Subject the specification of door, object "Represents a conduit joining two rooms, most
often a door or gate but sometimes a plank bridge, a slide or a hatchway.
Usually visible and operable from both sides (for instance if you write
'The blue door is east of the Ballroom and west of the Garden.'), but
sometimes only one-way (for instance if you write 'East of the Ballroom is
the long slide. Through the long slide is the cellar.')."
Subject a door, object always fixed in place
Subject a door, object never pushable between rooms
Subject a door, object an object called an other side
Subject leading-through relates one room ( called the other side ), object various doors
Subject the verb to be through, object the leading-through relation
Subject the specification of container, object "Represents something into which portable
things can be put, such as a teachest or a handbag. Something with a really
large immobile interior, such as the Albert Hall, had better be a room
instead."
Subject a container, object enterable
Subject a container, object opaque or transparent
Subject a container, object usually opaque
Subject a container, object a number called carrying capacity
Subject the carrying capacity of a container, object usually 100
Subject the specification of supporter, object "Represents a surface on which things can be
placed, such as a table."
Subject a supporter, object enterable
Subject a supporter, object a number called carrying capacity
Subject the carrying capacity of a supporter, object usually 100
Subject a supporter, object usually fixed in place
Subject a door, object open or closed
Subject a door, object usually closed
Subject a door, object openable or unopenable
Subject a door, object usually openable
Subject a container, object open or closed
Subject a container, object usually open
Subject a container, object openable or unopenable
Subject a container, object usually unopenable
Subject a door, object lockable
Subject a door, object usually not lockable
Subject a door, object locked or unlocked
Subject a door, object usually unlocked
Subject a door, object an object called a matching key
Subject a locked door, object usually lockable
Subject a locked door, object usually closed
Subject a lockable door, object usually openable
Subject a container, object lockable
Subject a container, object usually not lockable
Subject a container, object locked or unlocked
Subject a container, object usually unlocked
Subject a container, object an object called a matching key
Subject a locked container, object usually lockable
Subject a locked container, object usually closed
Subject a lockable container, object usually openable
Subject lock-fitting relates one thing ( called the matching key ), object various things
Subject the verb to unlock ( it unlocks , they unlock , it unlocked , it is unlocked ), object the lock-fitting relation
Subject the specification of backdrop, object "Represents an aspect of the landscape
or architecture which extends across more than one room: for instance,
a stream, the sky or a long carpet."
Subject a backdrop, object usually scenery
Subject a backdrop, object always fixed in place
Subject a backdrop, object never pushable between rooms
Subject the specification of person, object "Despite the name, not necessarily
a human being, but anything animate enough to envisage having a
conversation with, or bartering with."
Subject a person, object female or male
Subject a person, object usually male
Subject a person, object neuter
Subject a person, object usually not neuter
Subject a person, object a number called carrying capacity
Subject the carrying capacity of a person, object usually 100
Subject the yourself, object an undescribed person
Subject the yourself, object proper-named
Subject the description of yourself, object usually "As good-looking as ever."
Subject the yourself object, object as "selfobj"
Subject the plural of man, object men
Subject the plural of woman, object women
Subject a man, object a kind of person
Subject the specification of man, object "Represents a man or boy."
Subject a man, object always male
Subject a man, object never neuter
Subject a woman, object a kind of person
Subject the specification of woman, object "Represents a woman or girl."
Subject a woman, object always female
Subject a woman, object never neuter
Subject an animal, object a kind of person
Subject the specification of animal, object "Represents an animal, or at any rate a
non-human living creature reasonably large and possible to interact with: a
giant Venus fly-trap might qualify, but not a patch of lichen."
Subject a device, object a kind of thing
Subject a device, object switched on or switched off
Subject a device, object usually switched off
Subject the specification of device, object "Represents a machine or contrivance of some
kind which can be switched on or off."
Subject a vehicle, object a kind of container
Subject the specification of vehicle, object "Represents a container large enough for
a person to enter, and which can then move between rooms at the driver's
instruction. (If a supporter is needed instead, try the extension
Rideable Vehicles by Graham Nelson.)"
Subject a vehicle, object always enterable
Subject a vehicle, object usually not portable
Subject a player's holdall, object a kind of container
Subject the specification of player's holdall, object "Represents a container which the
player can carry around as a sort of rucksack, into which spare items are
automatically stowed away."
Subject a player's holdall, object always portable
Subject a player's holdall, object usually openable
Subject the wearable property, object as "clothing"
Subject the undescribed property, object as "concealed"
Subject the edible property, object as "edible"
Subject the enterable property, object as "enterable"
Subject the female property, object as "female"
Subject the initially carried property, object as "initially_carried"
Subject the mentioned property, object as "mentioned"
Subject the lit property, object as "light"
Subject the lighted property, object as "light"
Subject the lockable property, object as "lockable"
Subject the locked property, object as "locked"
Subject the handled property, object as "moved"
Subject the neuter property, object as "neuter"
Subject the switched on property, object as "on"
Subject the open property, object as "open"
Subject the openable property, object as "openable"
Subject the privately-named property, object as "privately_named"
Subject the plural-named property, object as "pluralname"
Subject the proper-named property, object as "proper"
Subject the pushable between rooms property, object as "pushable"
Subject the scenery property, object as "scenery"
Subject the fixed in place property, object as "static"
Subject the transparent property, object as "transparent"
Subject the visited property, object as "visited"
Subject the marked for listing property, object as "workflag"
Subject the indefinite article property, object as "article"
Subject the carrying capacity property, object as "capacity"
Subject the description property, object as "description"
Subject the other side property, object as "door_to"
Subject the initial appearance property, object as "initial"
Subject the map region property, object as "map_region"
Subject the printed plural name property, object as "plural"
Subject the printed name property, object as "short_name"
Subject the matching key property, object as "with_key"
Subject the player, object a person that varies
Subject the player variable, object as "player"
Subject the location -- documented at var_location --, object an object that varies
Subject the score -- documented at var_score --, object a number that varies
Subject the last notified score, object a number that varies
Subject the maximum score, object a number that varies
Subject the turn count, object a number that varies
Subject the time of day -- documented at var_time --, object a time that varies
Subject the darkness witnessed, object a truth state that varies
Subject the location variable, object as "real_location"
Subject the score variable, object as "score"
Subject the last notified score variable, object as "last_score"
Subject the maximum score variable, object as "MAX_SCORE"
Subject the turn count variable, object as "turns"
Subject the time of day variable, object as "the_time"
Subject the noun -- documented at var_noun --, object an object that varies
Subject the second noun, object an object that varies
Subject the person asked -- documented at var_person_asked --, object an object that varies
Subject the reason the action failed -- documented at var_reason --, object a rule that varies
Subject the item described, object an object that varies
Subject the noun variable, object as "noun"
Subject the second noun variable, object as "second"
Subject the person asked variable, object as "actor"
Subject the reason the action failed variable, object as "reason_the_action_failed"
Subject the item described variable, object as "self"
Subject the person reaching -- documented at var_person_reaching --, object an object that varies
Subject the container in question, object an object that varies
Subject the supporter in question, object an object that varies
Subject the particular possession -- documented at var_particular --, object a thing that varies
Subject the person reaching variable, object as "actor"
Subject the container in question variable, object as "parameter_object"
Subject the supporter in question variable, object as "parameter_object"
Subject the particular possession variable, object as "particular_possession"
Subject the player's command -- documented at var_command --, object a snippet that varies
Subject the matched text, object a snippet that varies
Subject the number understood -- documented at var_understood --, object a number that varies
Subject the time understood, object a time that varies
Subject the topic understood, object a snippet that varies
Subject the truth state understood, object a truth state that varies
Subject the current item from the multiple object list, object an object that varies
Subject the player's command variable, object as "players_command"
Subject the matched text variable, object as "matched_text"
Subject the topic understood variable, object as "parsed_number"
Subject the truth state understood variable, object as "parsed_number"
Subject the current item from the multiple object list variable, object as "multiple_object_item"
Subject the command prompt -- documented at var_prompt --, object a text that varies
Subject the command prompt, object ">"
Subject the left hand status line -- documented at var_sl --, object a text that varies
Subject the right hand status line, object a text that varies
Subject the left hand status line variable, object as "left_hand_status_line"
Subject the right hand status line variable, object as "right_hand_status_line"
Subject the listing group size, object a number that varies
Subject the listing group size variable, object as "listing_size"
Subject the story title , the story author , the story headline , the story genre and the story description, object text variables
Subject the release number and the story creation year, object number variables
Subject figure of cover, object of cover art
Subject the story title variable, object as "Story"
Subject the substitution-variable, object an object that varies
Subject the substitution-variable variable, object as "subst__v"
Subject the i6-nothing-constant, object an object that varies
Subject the i6-nothing-constant variable, object as "nothing"
Subject the i6-varying-global, object an object that varies
Subject the i6-varying-global variable, object as "nothing"
Subject the item-pushed-between-rooms, object an object that varies
Subject the item-pushed-between-rooms variable, object as "move_pushing"
Subject the actor-location, object an object that varies
Subject the actor-location variable, object as "actor_location"
Subject the parameter-object, object an object that varies
Subject the parameter-object variable, object as "parameter_object"
Subject procedural rules, object a rulebook
Subject startup rules, object a rulebook
Subject turn sequence rules, object a rulebook
Subject shutdown rules, object a rulebook
Subject scene changing rules, object a rulebook
Subject when play begins, object a rulebook
Subject when play ends, object a rulebook
Subject every turn rules, object a rulebook
Subject action-processing rules, object a rulebook
Subject the action-processing rulebook, object a person called the actor
Subject setting action variables, object a rulebook
Subject the specific action-processing rules, object a rulebook
Subject the specific action-processing rulebook, object a truth state called action in world
Subject the specific action-processing rulebook, object a truth state called action keeping silent
Subject the specific action-processing rulebook, object a rulebook called specific check rulebook
Subject the specific action-processing rulebook, object a rulebook called specific carry out rulebook
Subject the specific action-processing rulebook, object a rulebook called specific report rulebook
Subject the specific action-processing rulebook, object a truth state called within the player's sight
Subject the player's action awareness rules, object a rulebook
Subject accessibility rules, object a rulebook
Subject reaching inside rules, object an object-based rulebook
Subject reaching inside rules, object outcomes allow access ( success ) and deny access ( failure )
Subject reaching outside rules, object an object-based rulebook
Subject reaching outside rules, object outcomes allow access ( success ) and deny access ( failure )
Subject visibility rules, object a rulebook
Subject visibility rules, object outcomes there is sufficient light ( failure ) and there is insufficient light ( success )
Subject persuasion rules, object a rulebook
Subject persuasion rules, object outcomes persuasion succeeds ( success ) and persuasion fails ( failure )
Subject unsuccessful attempt by, object a rulebook
Subject before rules, object a rulebook
Subject instead rules, object a rulebook
Subject check rules, object a rulebook
Subject carry out rules, object a rulebook
Subject after rules, object a rulebook
Subject report rules, object a rulebook
Subject the does the player mean rules, object a rulebook
Subject the does the player mean rules, object outcomes it is very likely , it is likely , it is possible , it is unlikely and it is very unlikely
Subject the little-used do nothing rule, object as "LITTLE_USED_DO_NOTHING_R"
Subject the start in the correct scenes rule, object first in the startup rulebook
Subject the position player in model world rule, object first in the startup rulebook
Subject the update chronological records rule, object first in the startup rulebook
Subject the seed random number generator rule, object first in the startup rulebook
Subject the initialise memory rule, object first in the startup rulebook
Subject the virtual machine startup rule, object first in the startup rulebook
Subject the virtual machine startup rule, object as "VIRTUAL_MACHINE_STARTUP_R"
Subject the initialise memory rule, object as "INITIALISE_MEMORY_R"
Subject the seed random number generator rule, object as "SEED_RANDOM_NUMBER_GENERATOR_R"
Subject the update chronological records rule, object as "UPDATE_CHRONOLOGICAL_RECORDS_R"
Subject the position player in model world rule, object as "POSITION_PLAYER_IN_MODEL_R"
Subject the when play begins stage rule, object in the startup rulebook
Subject the fix baseline scoring rule, object in the startup rulebook
Subject the display banner rule, object in the startup rulebook
Subject the initial room description rule, object in the startup rulebook
Subject the generate action rule, object first in the turn sequence rulebook
Subject the parse command rule, object first in the turn sequence rulebook
Subject the timed events rule, object in the turn sequence rulebook
Subject the advance time rule, object in the turn sequence rulebook
Subject the update chronological records rule, object in the turn sequence rulebook
Subject the adjust light rule, object last in the turn sequence rulebook
Subject the note object acquisitions rule, object last in the turn sequence rulebook
Subject the notify score changes rule, object last in the turn sequence rulebook
Subject the adjust light rule, object as "ADJUST_LIGHT_R"
Subject the advance time rule, object as "ADVANCE_TIME_R"
Subject the generate action rule, object as "GENERATE_ACTION_R"
Subject the note object acquisitions rule, object as "NOTE_OBJECT_ACQUISITIONS_R"
Subject the parse command rule, object as "PARSE_COMMAND_R"
Subject the timed events rule, object as "TIMED_EVENTS_R"
Subject the when play ends stage rule, object first in the shutdown rulebook
Subject the resurrect player if asked rule, object last in the shutdown rulebook
Subject the print player's obituary rule, object last in the shutdown rulebook
Subject the ask the final question rule, object last in the shutdown rulebook
Subject the resurrect player if asked rule, object as "RESURRECT_PLAYER_IF_ASKED_R"
Subject the ask the final question rule, object as "ASK_FINAL_QUESTION_R"
Subject the scene change machinery rule, object last in the scene changing rulebook
Subject the scene change machinery rule, object as "DetectSceneChange"
Subject the entire game, object a scene
Subject the entire game, object the game is in progress
Subject the entire game, object the game is over
Subject the before stage rule, object first in the action-processing rules
Subject the set pronouns from items from multiple object lists rule, object first in the action-processing rules
Subject the announce items from multiple object lists rule, object first in the action-processing rules
Subject the basic visibility rule, object in the action-processing rules
Subject the basic accessibility rule, object in the action-processing rules
Subject the carrying requirements rule, object in the action-processing rules
Subject the instead stage rule, object last in the action-processing rules
Subject the requested actions require persuasion rule, object last in the action-processing rules
Subject the carry out requested actions rule, object last in the action-processing rules
Subject the descend to specific action-processing rule, object last in the action-processing rules
Subject the end action-processing in success rule, object last in the action-processing rules
Subject the basic accessibility rule, object as "BASIC_ACCESSIBILITY_R"
Subject the basic visibility rule, object as "BASIC_VISIBILITY_R"
Subject the carrying requirements rule, object as "CARRYING_REQUIREMENTS_R"
Subject the requested actions require persuasion rule, object as "REQUESTED_ACTIONS_REQUIRE_R"
Subject the carry out requested actions rule, object as "CARRY_OUT_REQUESTED_ACTIONS_R"
Subject the descend to specific action-processing rule, object as "DESCEND_TO_SPECIFIC_ACTION_R"
Subject the work out details of specific action rule, object first in the specific action-processing rules
Subject the work out details of specific action rule, object as "WORK_OUT_DETAILS_OF_SPECIFIC_R"
Subject the access through barriers rule, object last in the accessibility rules
Subject the access through barriers rule, object as "ACCESS_THROUGH_BARRIERS_R"
Subject the can't reach inside rooms rule, object last in the reaching inside rules
Subject the can't reach inside closed containers rule, object last in the reaching inside rules
Subject the can't reach inside closed containers rule, object as "CANT_REACH_INSIDE_CLOSED_R"
Subject the can't reach inside rooms rule, object as "CANT_REACH_INSIDE_ROOMS_R"
Subject the can't reach outside closed containers rule, object last in the reaching outside rules
Subject the can't reach outside closed containers rule, object as "CANT_REACH_OUTSIDE_CLOSED_R"
Subject the can't act in the dark rule, object last in the visibility rules
Subject a scene, object recurring or non-recurring
Subject a scene, object usually non-recurring
Subject printing the name of something ( documented at act_pn ), object activity
Subject the standard name printing rule, object last in the for printing the name rulebook
Subject the standard name printing rule, object as "STANDARD_NAME_PRINTING_R"
Subject printing the plural name of something ( documented at act_ppn ), object activity
Subject the standard printing the plural name rule, object last in the for printing the plural name rulebook
Subject printing a number of something ( documented at act_pan ), object activity
Subject the standard printing a number of something rule, object last in the for printing a number rulebook
Subject printing room description details of something ( documented at act_details ), object activity
Subject listing contents of something ( documented at act_lc ), object activity
Subject the standard contents listing rule, object last in the for listing contents rulebook
Subject the standard contents listing rule, object as "STANDARD_CONTENTS_LISTING_R"
Subject grouping together something ( documented at act_gt ), object activity
Subject writing a paragraph about something ( documented at act_wpa ), object activity
Subject listing nondescript items of something ( documented at act_lni ), object activity
Subject printing the name of a dark room ( documented at act_darkname ), object activity
Subject printing the description of a dark room ( documented at act_darkdesc ), object activity
Subject printing the announcement of darkness ( documented at act_nowdark ), object activity
Subject printing the announcement of light ( documented at act_nowlight ), object activity
Subject printing a refusal to act in the dark ( documented at act_toodark ), object activity
Subject the look around once light available rule, object last in for printing the announcement of light
Subject constructing the status line ( documented at act_csl ), object activity
Subject printing the banner text ( documented at act_banner ), object activity
Subject reading a command ( documented at act_reading ), object activity
Subject deciding the scope of something ( future action ) ( documented at act_ds ), object activity
Subject deciding the concealed possessions of something ( documented at act_con ), object activity
Subject deciding whether all includes something ( future action ) ( documented at act_all ), object activity
Subject the for deciding whether all includes rules, object outcomes it does not ( failure ) and it does ( success )
Subject clarifying the parser's choice of something ( future action ) ( documented at act_clarify ), object activity
Subject asking which do you mean ( future action ) ( documented at act_which ), object activity
Subject printing a parser error ( documented at act_parsererror ), object activity
Subject supplying a missing noun ( documented at act_smn ), object activity
Subject supplying a missing second noun ( documented at act_smn ), object activity
Subject implicitly taking something ( documented at act_implicitly ), object activity
Subject starting the virtual machine ( documented at act_startvm ), object activity
Subject amusing a victorious player ( documented at act_amuse ), object activity
Subject printing the player's obituary ( documented at act_obit ), object activity
Subject the print obituary headline rule, object last in for printing the player's obituary
Subject the print final score rule, object last in for printing the player's obituary
Subject the display final status line rule, object last in for printing the player's obituary
Subject the print obituary headline rule, object as "PRINT_OBITUARY_HEADLINE_R"
Subject the print final score rule, object as "PRINT_FINAL_SCORE_R"
Subject the display final status line rule, object as "DISPLAY_FINAL_STATUS_LINE_R"
Subject handling the final question, object activity
Subject the immediately restart the vm rule, object as "IMMEDIATELY_RESTART_VM_R"
Subject the immediately restore saved game rule, object as "IMMEDIATELY_RESTORE_SAVED_R"
Subject the immediately quit rule, object as "IMMEDIATELY_QUIT_R"
Subject the immediately undo rule, object as "IMMEDIATELY_UNDO_R"
Subject the print the final question rule, object in before handling the final question
Subject the print the final prompt rule, object in before handling the final question
Subject the read the final answer rule, object last in before handling the final question
Subject the standard respond to final question rule, object last in for handling the final question
Subject the read the final answer rule, object as "READ_FINAL_ANSWER_R"
Subject printing the locale description of something ( documented at act_pld ), object activity
Subject the locale paragraph count, object a number that varies
Subject choosing notable locale objects of something ( documented at act_cnlo ), object activity
Subject printing a locale paragraph about something ( documented at act_plp ), object activity
Subject taking inventory, object with past participle taken , applying to nothing
Subject the taking inventory action, object as "Inv"
Subject the specification of the taking inventory action, object "Taking an inventory of
one's immediate possessions: the things being carried, either directly or in
any containers being carried. When the player performs this action, either
the inventory listing, or else a special message if nothing is being carried
or worn, is printed during the carry out rules: nothing happens at the report
stage. The opposite happens for other people performing the action: nothing
happens during carry out, but a report such as 'Mr X looks through his
possessions.' is produced (provided Mr X is visible).The exotic 'use inventory to set pronouns rule' allows the inventory
listing to change the current meanings of IT, HIM, HER, and so on for the
player's future commands. Thus if the player is carrying a certain female
cat, say, taking inventory might print up the name 'Missee Lee', and this
would set HER to refer to Missee Lee. Some IF authors dislike this
convention: it can be abolished by writing 'The use inventory to set
pronouns rule is not listed in any rulebook.'"
Subject taking, object with past participle taken , applying to one thing
Subject the taking action, object as "Take"
Subject the specification of the taking action, object "The taking action is the only way
an action in the Standard Rules can cause something to be carried by an actor.
It is very simple in operation (the entire carry out stage consists only of
'now the actor carries the noun') but many checks must be performed before it
can be allowed to happen."
Subject removing it from, object applying to two things
Subject the removing it from action, object as "Remove"
Subject the specification of the removing it from action, object "Removing is not really
an action in its own right. Whereas there are many ways to put something down
(on the floor, on top of something, inside something else, giving it to
somebody else, and so on), Inform has only one way to take something: the
taking action. Removing exists only to provide some nicely worded replies
to impossible requests, and in all sensible cases is converted into taking.
Because of this, it's usually a bad idea to write rules about removing:
if you write a rule such as 'Instead of removing the key, ...' then it
won't apply if the player simply types TAKE KEY instead. The safe way to
do this is to write a rule about taking, which covers all possibilities."
Subject the can't take component parts rule, object before the can't remove what's not inside rule in the check removing it from rules
Subject dropping, object applying to one thing
Subject the dropping action, object as "Drop"
Subject the specification of the dropping action, object "Dropping is one of five actions
by which an actor can get rid of something carried: the others are inserting
(into a container), putting (onto a supporter), giving (to someone else) and
eating. Dropping means dropping onto the actor's current floor, which is
usually the floor of a room - but might be the inside of a box if the actor
is also inside that box, and so on.The can't drop clothes being worn rule silently tries the taking off action
on any clothing being dropped: unlisting this rule removes both this behaviour
and also the requirement that clothes cannot simply be dropped."
Subject putting it on, object with past participle put , applying to two things
Subject the putting it on action, object as "PutOn"
Subject the specification of the putting it on action, object "By this action, an actor puts
something he is holding on top of a supporter: for instance, putting an apple
on a table."
Subject inserting it into, object applying to two things
Subject the inserting it into action, object as "Insert"
Subject the specification of the inserting it into action, object "By this action, an actor puts
something he is holding into a container: for instance, putting a coin into a
collection box."
Subject eating, object with past participle eaten , applying to one carried thing
Subject the eating action, object as "Eat"
Subject the specification of the eating action, object "Eating is the only one of the
built-in actions which can, in effect, destroy something: the carry out
rule removes what's being eaten from play, and nothing in the Standard
Rules can then get at it again.Note that, uncontroversially, one can only eat things with the 'edible'
either/or property, and also that, more controversially, one can only
eat things currently being held. This means that a player standing next
to a bush with berries who types EAT BERRIES will force a '(first taking
the berries)' action."
Subject going, object with past participle gone , applying to one visible thing
Subject the going action, object as "Go"
Subject the specification of the going action, object "This is the action which allows people
to move from one room to another, using whatever map connections and doors are
to hand. The Standard Rules are written so that the noun can be either a
direction or a door in the location of the actor: while the player's commands
only lead to going actions with directions as nouns, going actions can also
happen as a result of entering actions, and then the noun can indeed be
a door."
Subject the going action, object a room called the room gone from ( matched as "from" )
Subject the going action, object an object called the room gone to ( matched as "to" )
Subject the going action, object an object called the door gone through ( matched as "through" )
Subject the going action, object an object called the vehicle gone by ( matched as "by" )
Subject the going action, object an object called the thing gone with ( matched as "with" )
Subject entering, object applying to one thing
Subject the entering action, object as "Enter"
Subject the specification of the entering action, object "Whereas the going action allows
people to move from one location to another in the model world, the entering
action is for movement inside a location: for instance, climbing into a cage
or sitting on a couch. (Entering is not allowed to change location, so any
attempt to enter a door is converted into a going action.) What makes
entering trickier than it looks is that the player may try to enter an
object which is itself inside, or part of, something else, which might in
turn be... and so on. To preserve realism, the implicitly pass through other
barriers rule automatically generates entering and exiting actions needed
to pass between anything which might be in the way: for instance, in a
room with two open cages, an actor in cage A who tries entering cage B first
has to perform an exiting action."
Subject exiting, object applying to nothing
Subject the exiting action, object as "Exit"
Subject the exiting action, object an object called the container exited from
Subject the specification of the exiting action, object "Whereas the going action allows
people to move from one location to another in the model world, and the
entering action is for movement deeper inside the objects in a location,
the exiting action is for movement back out towards the main floor area.
Climbing out of a cupboard, for instance, is an exiting action. Exiting
when already in the main floor area of a room with a map connection to
the outside is converted to a going action. Finally, note that whereas
entering works for either containers or supporters, exiting is purely for
getting oneself out of containers: if the actor is on top of a supporter
instead, an exiting action is converted to the getting off action."
Subject getting off, object with past participle got , applying to one thing
Subject the getting off action, object as "GetOff"
Subject the specification of the getting off action, object "The getting off action is for
actors who are currently on top of a supporter: perhaps standing on a platform,
but maybe only sitting on a chair or even lying down in bed. Unlike the similar
exiting action, getting off takes a noun: the platform, chair, bed or what
have you."
Subject looking, object applying to nothing
Subject the looking action, object as "Look"
Subject the specification of the looking action, object "The looking action describes the
player's current room and any visible items, but is made more complicated
by the problem of visibility. Inform calculates this by dividing the room
into visibility levels. For an actor on the floor of a room, there is only
one such level: the room itself. But an actor sitting on a chair inside
a packing case which is itself on a gantry would have four visibility levels:
chair, case, gantry, room. The looking rules use a special phrase, 'the
visibility-holder of X', to go up from one level to the next: thus the
visibility-holder of the case is the gantry.The 'visibility level count' is the number of levels which the player can
actually see, and the 'visibility ceiling' is the uppermost visible level.
For a player standing on the floor of a lighted room, this will be a count
of 1 with the ceiling set to the room. But a player sitting on a chair in
a closed opaque packing case would have visibility level count 2, and
visibility ceiling equal to the case. Moreover, light has to be available
in order to see anything at all: if the player is in darkness, the level
count is 0 and the ceiling is nothing.Finally, note that several actions other than looking also produce room
descriptions in some cases. The most familiar is going, but exiting a
container or getting off a supporter will also generate a room description.
(The phrase used by the relevant rules is 'produce a room description with
going spacing conventions' and carry out or report rules for newly written
actions are welcome to use this too if they would like to. The spacing
conventions affect paragraph division, and note that the main description
paragraph may be omitted for a place not newly visited, depending on the
VERBOSE settings.) Room descriptions like this are produced by running the
check, carry out and report rules for looking, but are not subject to
before, instead or after rules: so they do not count as a new action. The
looking variable 'room-describing action' holds the action name of the
reason a room description is currently being made: if the player typed
LOOK, this will indeed be set to the looking action, but if we're
describing a room just reached by GO EAST, say, it will be set to the going
action. This can be used to customise carry out looking rules so that
different forms of description are used on going to a room as compared with
looking around while already there."
Subject the looking action, object an action-name called the room-describing action
Subject the looking action, object a truth state called abbreviated form allowed
Subject the looking action, object a number called the visibility level count
Subject the looking action, object an object called the visibility ceiling
Subject examining, object applying to one visible thing and requiring light
Subject the examining action, object as "Examine"
Subject the specification of the examining action, object "The act of looking closely at
something. Note that the noun could be either a direction or a thing, which
is why the Standard Rules include the 'examine directions rule' to deal with
directions: it simply says 'You see nothing unexpected in that direction.'
and stops the action. (If you would like to handle directions differently,
list another rule instead of this one in the carry out examining rules.)For arcane reasons to do with the Inform 6 library underlying what Inform
does, these rules test to see 'if the noun goes undescribed by source
text' (rather than more simply testing whether the description property
of the noun is blank). If so, we search (i.e., look inside) a container,
and show the status (switched on or off) of a device, but otherwise
give up with a bland response. For traditional reasons, we also show
the status of a device as a second paragraph even after any description
property has been printed: this is done by the examine described devices
rule."
Subject looking under, object applying to one visible thing and requiring light
Subject the looking under action, object as "LookUnder"
Subject the specification of the looking under action, object "The standard Inform world
model does not have a concept of things being under other things, so this
action is only minimally provided by the Standard Rules, but it exists here
for traditional reasons (and because, after all, LOOK UNDER TABLE is the
sort of command which ought to be recognised even if it does nothing useful).
The action ordinarily either tells the player he finds nothing of interest,
or reports that somebody else has looked under something.The usual way to make this action do something useful is to write a rule
like 'Instead of looking under the cabinet for the first time: now the
player has the silver key; say ...' and so on."
Subject searching, object applying to one thing and requiring light
Subject the searching action, object as "Search"
Subject the specification of the searching action, object "Searching looks at the contents
of an open or transparent container, or at the items on top of a supporter.
These are often mentioned in room descriptions already, and then the action
is unnecessary, but that wouldn't be true for something like a kitchen
cupboard which is scenery - mentioned in passing in a room description, but
not made a fuss of. Searching such a cupboard would then, by listing its
contents, give the player more information than the ordinary room description
shows.The usual check rules restrict searching to containers and supporters: so
the Standard Rules do not allow the searching of people, for instance. But
it is easy to add instead rules ('Instead of searching Dr Watson: ...') or
even a new carry out rule ('Check searching someone (called the suspect): ...')
to extend the way searching normally works."
Subject consulting it about, object applying to one thing and one topic
Subject the consulting it about action, object as "Consult"
Subject the specification of the consulting it about action, object "Consulting is a very
flexible and potentially powerful action, but only because it leaves almost
all of the work to the author to deal with directly. The idea is for it to
respond to commands such as LOOK UP HENRY FITZROY IN HISTORY BOOK, where
the topic would be the snippet of command HENRY FITZROY and the thing would
be the book.The Standard Rules simply parry such requests by saying that the player finds
nothing of interest. All interesting responses must be provided by the author,
using rules like 'Instead of consulting the history book about...'"
Subject locking it with, object applying to one thing and one carried thing
Subject the locking it with action, object as "Lock"
Subject the specification of the locking it with action, object "Locking is the act of
using an object such as a key to ensure that something such as a door or
container cannot be opened unless first unlocked. (Only closed things can be
locked.)Locking can be performed on any kind of thing which provides the either/or
properties lockable, locked, openable and open. The 'can't lock without a lock
rule' tests to see if the noun both provides the lockable property, and if
it is in fact lockable: it is then assumed that the other properties can
safely be checked. In the Standard Rules, the container and door kinds both
satisfy these requirements.We can create a new kind on which opening, closing, locking and unlocking
will work thus: 'A briefcase is a kind of thing. A briefcase can be openable.
A briefcase can be open. A briefcase can be lockable. A briefcase can be
locked. A briefcase is usually openable, lockable, open and unlocked.'Inform checks whether the key fits using the 'can't lock without the correct
key rule'. To satisfy this, the actor must be directly holding the second
noun, and it must be the current value of the 'matching key' property for
the noun. (This property is seldom referred to directly because it is
automatically set by assertions like 'The silver key unlocks the wicket
gate.')The Standard Rules provide locking and unlocking actions at a fairly basic
level: they can be much enhanced using the extension Locksmith by Emily
Short, which is included with all distributions of Inform."
Subject unlocking it with, object applying to one thing and one carried thing
Subject the unlocking it with action, object as "Unlock"
Subject the specification of the unlocking it with action, object "Unlocking undoes the
effect of locking, and renders the noun openable again provided that the
actor is carrying the right key (which must be the second noun).Unlocking can be performed on any kind of thing which provides the either/or
properties lockable, locked, openable and open. The 'can't unlock without a lock
rule' tests to see if the noun both provides the lockable property, and if
it is in fact lockable: it is then assumed that the other properties can
safely be checked. In the Standard Rules, the container and door kinds both
satisfy these requirements.We can create a new kind on which opening, closing, locking and unlocking
will work thus: 'A briefcase is a kind of thing. A briefcase can be openable.
A briefcase can be open. A briefcase can be lockable. A briefcase can be
locked. A briefcase is usually openable, lockable, open and unlocked.'Inform checks whether the key fits using the 'can't unlock without the correct
key rule'. To satisfy this, the actor must be directly holding the second
noun, and it must be the current value of the 'matching key' property for
the noun. (This property is seldom referred to directly because it is
automatically set by assertions like 'The silver key unlocks the wicket
gate.')The Standard Rules provide locking and unlocking actions at a fairly basic
level: they can be much enhanced using the extension Locksmith by Emily
Short, which is included with all distributions of Inform."
Subject switching on, object applying to one thing
Subject the switching on action, object as "SwitchOn"
Subject the specification of the switching on action, object "The switching on and switching
off actions are for the simplest kind of machinery operation: they are for
objects representing machines (or more likely parts of machines), which are
considered to be either off or on at any given time.The actions are intended to be used where the noun is a device, but in fact
they could work just as well with any kind which can be 'switched on' or
'switched off'."
Subject switching off, object applying to one thing
Subject the switching off action, object as "SwitchOff"
Subject the specification of the switching off action, object "The switching off and switching
on actions are for the simplest kind of machinery operation: they are for
objects representing machines (or more likely parts of machines), which are
considered to be either off or on at any given time.The actions are intended to be used where the noun is a device, but in fact
they could work just as well with any kind which can be 'switched on' or
'switched off'."
Subject opening, object applying to one thing
Subject the opening action, object as "Open"
Subject the specification of the opening action, object "Opening makes something no longer
a physical barrier. The action can be performed on any kind of thing which
provides the either/or properties openable and open. The 'can't open unless
openable rule' tests to see if the noun both can be and actually is openable.
(It is assumed that anything which can be openable can also be open.)
In the Standard Rules, the container and door kinds both satisfy these
requirements.In the event that the thing to be opened is also lockable, we are forbidden
to open it when it is locked. Both containers and doors can be lockable,
but the opening and closing actions would also work fine with kinds which
cannot be.We can create a new kind on which opening and closing will work thus:
'A case file is a kind of thing. A case file can be openable.
A case file can be open. A case file is usually openable and closed.'The meaning of open and closed is different for different kinds of thing.
When a container is closed, that means people outside cannot reach in,
and vice versa; when a door is closed, people cannot use the 'going' action
to pass through it. If we were to create a new kind such as 'case file',
we would also need to write rules to make the open and closed properties
interesting for this kind."
Subject closing, object applying to one thing
Subject the closing action, object as "Close"
Subject the specification of the closing action, object "Closing makes something into
a physical barrier. The action can be performed on any kind of thing which
provides the either/or properties openable and open. The 'can't close unless
openable rule' tests to see if the noun both can be and actually is openable.
(It is assumed that anything which can be openable can also be open, and
hence can also be closed.) In the Standard Rules, the container and door
kinds both satisfy these requirements.We can create a new kind on which opening and closing will work thus:
'A case file is a kind of thing. A case file can be openable.
A case file can be open. A case file is usually openable and closed.'The meaning of open and closed is different for different kinds of thing.
When a container is closed, that means people outside cannot reach in,
and vice versa; when a door is closed, people cannot use the 'going' action
to pass through it. If we were to create a new kind such as 'case file',
we would also need to write rules to make the open and closed properties
interesting for this kind."
Subject wearing, object with past participle worn , applying to one carried thing
Subject the wearing action, object as "Wear"
Subject the specification of the wearing action, object "The Standard Rules give Inform
only a simple model of clothing. A thing can be worn only if it has the
either/or property of being 'wearable'. (Typing a sentence like 'Mr Jones
wears the Homburg hat.' automatically implies that the hat is wearable,
which is why we only seldom need to use the word 'wearable' directly.)
There is no checking of how much or how little any actor is wearing, or
how incongruous this may appear: nor any distinction between under or
over-clothes.To put on an article of clothing, the actor must be directly carrying it,
as enforced by the 'can't wear what's not held rule'."
Subject taking off, object with past participle taken , applying to one carried thing
Subject the taking off action, object as "Disrobe"
Subject the specification of the taking off action, object "The Standard Rules give Inform
only a simple model of clothing. A thing can be worn only if it has the
either/or property of being 'wearable'. (Typing a sentence like 'Mr Jones
wears the Homburg hat.' automatically implies that the hat is wearable,
which is why we only seldom need to use the word 'wearable' directly.)
There is no checking of how much or how little any actor is wearing, or
how incongruous this may appear: nor any distinction between under or
over-clothes.When an article of clothing is taken off, it becomes a thing directly
carried by its former wearer, rather than being (say) dropped onto the floor."
Subject giving it to, object with past participle given , applying to one carried thing and one thing
Subject the giving it to action, object as "Give"
Subject the specification of the giving it to action, object "This action is indexed by
Inform under 'Actions concerning other people', but it could just as easily
have gone under 'Actions concerning the actor's possessions' because -
like dropping, putting it on or inserting it into - this is an action
which gets rid of something being carried.The Standard Rules implement this action fully - if it reaches the carry
out and report rulebooks, then the item is indeed transferred to the
recipient, and this is properly reported. But giving something to
somebody is not like putting something on a shelf: the recipient has
to agree. The final check rule, the 'block giving rule', assumes that
the recipient does not consent - so the gift fails to happen. The way
to make the giving action use its abilities fully is to replace the
block giving rule with a rule which makes a more sophisticated decision
about who will accept what from whom, and only blocks some attempts,
letting others run on into the carry out and report rules."
Subject showing it to, object with past participle shown , applying to one carried thing and one visible thing
Subject the showing it to action, object as "Show"
Subject the specification of the showing it to action, object "Anyone can show anyone
else something which they are carrying, but not some nearby piece of
scenery, say - so this action is suitable for showing the emerald locket
to Katarina, but not showing the Orange River Rock Room to Mr Douglas.The Standard Rules implement this action in only a minimal way, checking
that it makes sense but then blocking all such attempts with a message
such as 'Katarina is not interested.' - this is the task of the 'block
showing rule'. As a result, there are no carry out or report rules. To
make it into a systematic and interesting action, we would need to
unlist the block showing rule and then to write carry out and report
rules: but usually for IF purposes we only need to make a handful of
special cases of showing work properly, and for those we can simply
write Instead rules to handle them."
Subject waking, object with past participle woken , applying to one thing
Subject the waking action, object as "WakeOther"
Subject the specification of the waking action, object "This is the act of jostling
a sleeping person to wake him or her up, and it finds its way into the
Standard Rules only for historical reasons. Inform does not by default
provide any model for people being asleep or awake, so this action does
not do anything in the standard implementation: instead, it is always
stopped by the block waking rule."
Subject throwing it at, object with past participle thrown , applying to one carried thing and one visible thing
Subject the throwing it at action, object as "ThrowAt"
Subject the specification of the throwing it at action, object "Throwing something at
someone or something is difficult for Inform to model. So many considerations
apply: just because the actor can see the target, does it follow that the
target can accurately hit it? What if the projectile is heavy, like an
anvil, or something not easily aimable, like a feather? What if there
is a barrier in the way, like a cage with bars spaced so that only items
of a certain size get through? And then: what should happen as a result?
Will the projectile break, or do damage, or fall to the floor, or into
a container or onto a supporter? And so on.Because it seems hopeless to try to model this in any general way,
Inform instead provides the action for the user to attach specific rules to.
The check rules in the Standard Rules simply require that the projectile
is not an item of clothing still worn (this will be relevant for women
attending a Tom Jones concert) but then, in either the 'futile to throw
things at inanimate objects rule' or the 'block throwing at rule', will
refuse to carry out the action with a bland message.To make throwing do something, then, we must either write Instead rules
for special circumstances, or else unlist these check rules and write
suitable carry out and report rules to pick up the thread."
Subject attacking, object applying to one thing
Subject the attacking action, object as "Attack"
Subject the specification of the attacking action, object "Violence is seldom the answer,
and attempts to attack another person are normally blocked as being unrealistic
or not seriously meant. (I might find a shop assistant annoying, but IF is
not Grand Theft Auto, and responding by killing him is not really one of
my options.) So the Standard Rules simply block attempts to fight people,
but the action exists for rules to make exceptions."
Subject kissing, object applying to one thing
Subject the kissing action, object as "Kiss"
Subject the specification of the kissing action, object "Possibly because Inform was
originally written by an Englishman, attempts at kissing another person are
normally blocked as being unrealistic or not seriously meant. So the
Standard Rules simply block attempts to kiss people, but the action exists
for rules to make exceptions."
Subject answering it that, object applying to one thing and one topic
Subject the answering it that action, object as "Answer"
Subject the specification of the answering it that action, object "The Standard Rules do
not include any systematic way to handle conversation: instead, Inform is
set up so that it is as easy as we can make it to write specific rules
handling speech in particular games, and so that if no such rules are
written then all attempts to communicate are gracefully if not very
interestingly rejected.The topic here can be any double-quoted text, which can itself contain
tokens in square brackets: see the documentation on Understanding.Answering is an action existing so that the player can say something free-form
to somebody else. A convention of IF is that a command such as DAPHNE, TAKE
MASK is a request to Daphne to perform an action: if the persuasion rules in
force mean that she consents, the action 'Daphne taking the mask' does
indeed then result. But if the player types DAPHNE, 12375 or DAPHNE, GREAT
HEAVENS - or anything else not making sense as a command - the action
'answering Daphne that ...' will be generated.The name of the action arises because it is also caused by typing, say,
ANSWER 12375 when Daphne (say) has asked a question."
Subject telling it about, object with past participle told , applying to one thing and one topic
Subject the telling it about action, object as "Tell"
Subject the specification of the telling it about action, object "The Standard Rules do
not include any systematic way to handle conversation: instead, Inform is
set up so that it is as easy as we can make it to write specific rules
handling speech in particular games, and so that if no such rules are
written then all attempts to communicate are gracefully if not very
interestingly rejected.The topic here can be any double-quoted text, which can itself contain
tokens in square brackets: see the documentation on Understanding.Telling is an action existing only to catch commands like TELL ALEX ABOUT
GUITAR. Customarily in IF, such a command is shorthand which the player
accepts as a conventional form: it means 'tell Alex what I now know about
the guitar' and would make sense if the player had himself recently
discovered something significant about the guitar which might interest
Alex."
Subject asking it about, object applying to one thing and one topic
Subject the asking it about action, object as "Ask"
Subject the specification of the asking it about action, object "The Standard Rules do
not include any systematic way to handle conversation: instead, Inform is
set up so that it is as easy as we can make it to write specific rules
handling speech in particular games, and so that if no such rules are
written then all attempts to communicate are gracefully if not very
interestingly rejected.The topic here can be any double-quoted text, which can itself contain
tokens in square brackets: see the documentation on Understanding.Asking is an action existing only to catch commands like ASK STEPHEN ABOUT
PENELOPE. Customarily in IF, such a command is shorthand which the player
accepts as a conventional form: it means 'engage Mary in conversation and
try to find out what she might know about'. It's understood as a convention
of the genre that Mary should not be expected to respond in cases where
there is no reason to suppose that she has anything relevant to pass on -
ASK JANE ABOUT RICE PUDDING, for instance, need not conjure up a recipe
even if Jane is a 19th-century servant and therefore almost certainly
knows one."
Subject asking it for, object applying to two things
Subject the asking it for action, object as "AskFor"
Subject the specification of the asking it for action, object "The Standard Rules do
not include any systematic way to handle conversation, but this is
action is not quite conversation: it doesn't involve any spoken text as
such. It exists to catch commands like ASK SALLY FOR THE EGG WHISK,
where the whisk is something which Sally has and the player can see.Slightly oddly, but for historical reasons, an actor asking himself for
something is treated to an inventory listing instead. All other cases
are converted to the giving action: that is, ASK SALLY FOR THE EGG WHISK
is treated as if it were SALLY, GIVE ME THE EGG WHISK - an action for
Sally to perform and which then follows rules for giving.To ask for information or something intangible, see the asking it about
action."
Subject waiting, object applying to nothing
Subject the waiting action, object as "Wait"
Subject the specification of the waiting action, object "The inaction action: where would
we be without waiting? Waiting does not cause time to pass by - that happens
anyway - but represents a positive choice by the actor not to fill that time.
It is an action so that rules can be attached to it: for instance, we could
imagine that a player who consciously decides to sit and wait might notice
something which a busy player does not, and we could write a rule accordingly.Note the absence of check or carry out rules - anyone can wait, at any time,
and it makes nothing happen."
Subject touching, object applying to one thing
Subject the touching action, object as "Touch"
Subject the specification of the touching action, object "Touching is just that, touching
something without applying pressure: a touch-sensitive screen or a living
creature might react, but a standard push-button or lever will probably not.In the Standard Rules there are no check touching rules, since touchability
is already a requirement of the noun for the action anyway, and no carry out
rules because nothing in the standard Inform world model reacts to
a mere touch - though report rules do mean that attempts to touch other
people provoke a special reply."
Subject waving, object applying to one thing
Subject the waving action, object as "Wave"
Subject the specification of the waving action, object "Waving in this sense is like
waving a sceptre: the item to be waved must be directly held (or worn)
by the actor.In the Standard Rules there are no carry out rules for this action because
nothing in the standard Inform world model which reacts to it. The action
is provided for authors to hang more interesting behaviour onto for special
cases: say, waving a particular rusty iron rod with a star on the end."
Subject pulling, object applying to one thing
Subject the pulling action, object as "Pull"
Subject the specification of the pulling action, object "Pulling is the act of pulling
something not grossly larger than the actor by an amount which would not
substantially move it.In the Standard Rules there are no carry out rules for this action because
nothing in the standard Inform world model which reacts to it. The action
is provided for authors to hang more interesting behaviour onto for special
cases: say, pulling a lever. ('The big red lever is a fixed in place device.
Instead of pulling the big red lever, try switching on the lever. Instead
of pushing the big red lever, try switching off the lever.')"
Subject pushing, object applying to one thing
Subject the pushing action, object as "Push"
Subject the specification of the pushing action, object "Pushing is the act of pushing
something not grossly larger than the actor by an amount which would not
substantially move it. (See also the pushing it to action, which involves
a longer-distance push between rooms.)In the Standard Rules there are no carry out rules for this action because
nothing in the standard Inform world model which reacts to it. The action
is provided for authors to hang more interesting behaviour onto for special
cases: say, pulling a lever. ('The big red lever is a fixed in place device.
Instead of pulling the big red lever, try switching on the lever. Instead
of pushing the big red lever, try switching off the lever.')"
Subject turning, object applying to one thing
Subject the turning action, object as "Turn"
Subject the specification of the turning action, object "Turning is the act of rotating
something - say, a dial.In the Standard Rules there are no carry out rules for this action because
nothing in the standard Inform world model which reacts to it. The action
is provided for authors to hang more interesting behaviour onto for special
cases: say, turning a capstan."
Subject pushing it to, object applying to one thing and one visible thing
Subject the pushing it to action, object as "PushDir"
Subject the specification of the pushing it to action, object "This action covers pushing
a large object, not being carried, so that the actor pushes it from one room
to another: for instance, pushing a bale of hay to the east.This is rapidly converted into a special form of the going action. If the
noun object has the either/or property 'pushable between rooms', then the
action is converted to going by the 'standard pushing in directions rule'.
If that going action succeeds, then the original pushing it to action
stops; it's only if that fails that we run on into the 'block pushing in
directions rule', which then puts an end to the matter."
Subject squeezing, object applying to one thing
Subject the squeezing action, object as "Squeeze"
Subject the specification of the squeezing action, object "Squeezing is an action which
can conveniently vary from squeezing something hand-held, like a washing-up
liquid bottle, right up to squeezing a pillar in a bear hug.In the Standard Rules there are no carry out rules for this action because
nothing in the standard Inform world model which reacts to it. The action
is provided for authors to hang more interesting behaviour onto for special
cases. A mildly fruity message is produced to players who attempt to
squeeze people, which is blocked by a check squeezing rule."
Subject saying yes, object with past participle said and applying to nothing
Subject the saying yes action, object as "Yes"
Subject the specification of the saying yes action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject saying no, object with past participle said and applying to nothing
Subject the saying no action, object as "No"
Subject the specification of the saying no action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject burning, object applying to one thing
Subject the burning action, object as "Burn"
Subject the specification of the burning action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject waking up, object with past participle woken and applying to nothing
Subject the waking up action, object as "Wake"
Subject the specification of the waking up action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject thinking, object past participle thought and applying to nothing
Subject the thinking action, object as "Think"
Subject the specification of the thinking action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject smelling, object applying to one thing
Subject the smelling action, object as "Smell"
Subject the specification of the smelling action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject listening to, object applying to one thing
Subject the listening to action, object as "Listen"
Subject the specification of the listening to action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject tasting, object applying to one thing
Subject the tasting action, object as "Taste"
Subject the specification of the tasting action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject cutting, object with past participle cut and applying to one thing
Subject the cutting action, object as "Cut"
Subject the specification of the cutting action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject jumping, object applying to nothing
Subject the jumping action, object as "Jump"
Subject the specification of the jumping action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject tying it to, object with past participle tied , and applying to two things
Subject the tying it to action, object as "Tie"
Subject the specification of the tying it to action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject drinking, object with past participle drunk , and applying to one thing
Subject the drinking action, object as "Drink"
Subject the specification of the drinking action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject saying sorry, object with past participle said and applying to nothing
Subject the saying sorry action, object as "Sorry"
Subject the specification of the saying sorry action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject swearing obscenely, object censored , with past participle sworn , and applying to nothing
Subject the swearing obscenely action, object as "Strong"
Subject the specification of the swearing obscenely action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject swearing mildly, object censored , with past participle sworn , and applying to nothing
Subject the swearing mildly action, object as "Mild"
Subject the specification of the swearing mildly action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject swinging, object past participle swung and applying to one thing
Subject the swinging action, object as "Swing"
Subject the specification of the swinging action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject rubbing, object applying to one thing
Subject the rubbing action, object as "Rub"
Subject the specification of the rubbing action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject setting it to, object with past participle set , applying to one thing and one topic
Subject the setting it to action, object as "SetTo"
Subject the specification of the setting it to action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject waving hands, object applying to nothing
Subject the waving hands action, object as "WaveHands"
Subject the specification of the waving hands action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject buying, object with past participle bought , and applying to one thing
Subject the buying action, object as "Buy"
Subject the specification of the buying action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject singing, object with past participle sung and applying to nothing
Subject the singing action, object as "Sing"
Subject the specification of the singing action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject climbing, object applying to one thing
Subject the climbing action, object as "Climb"
Subject the specification of the climbing action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject sleeping, object past participle slept and applying to nothing
Subject the sleeping action, object as "Sleep"
Subject the specification of the sleeping action, object "The Standard Rules define this action in only a minimal way, blocking it
with a check rule which stops it in all cases. It exists so that before
or instead rules can be written to make it do interesting things in special
cases. (Or to reconstruct the action as something more substantial, unlist
the block rule and supply carry out and report rules, together perhaps
with some further check rules.)"
Subject quitting the game, object out of world and applying to nothing
Subject the quitting the game action, object as "Quit"
Subject the quit the game rule, object in the carry out quitting the game rulebook
Subject the quit the game rule, object as "QUIT_THE_GAME_R"
Subject saving the game, object out of world and applying to nothing
Subject the saving the game action, object as "Save"
Subject the save the game rule, object in the carry out saving the game rulebook
Subject the save the game rule, object as "SAVE_THE_GAME_R"
Subject restoring the game, object out of world and applying to nothing
Subject the restoring the game action, object as "Restore"
Subject the restore the game rule, object in the carry out restoring the game rulebook
Subject the restore the game rule, object as "RESTORE_THE_GAME_R"
Subject restarting the game, object out of world and applying to nothing
Subject the restarting the game action, object as "Restart"
Subject the restart the game rule, object in the carry out restarting the game rulebook
Subject the restart the game rule, object as "RESTART_THE_GAME_R"
Subject verifying the story file, object out of world , with past participle verified and applying to nothing
Subject the verifying the story file action, object as "Verify"
Subject the verify the story file rule, object in the carry out verifying the story file rulebook
Subject the verify the story file rule, object as "VERIFY_THE_STORY_FILE_R"
Subject switching the story transcript on, object out of world and applying to nothing
Subject the switching the story transcript on action, object as "ScriptOn"
Subject the switch the story transcript on rule, object in the carry out switching the story transcript on rulebook
Subject the switch the story transcript on rule, object as "SWITCH_TRANSCRIPT_ON_R"
Subject switching the story transcript off, object out of world and applying to nothing
Subject the switching the story transcript off action, object as "ScriptOff"
Subject the switch the story transcript off rule, object in the carry out switching the story transcript off rulebook
Subject the switch the story transcript off rule, object as "SWITCH_TRANSCRIPT_OFF_R"
Subject requesting the story file version, object out of world and applying to nothing
Subject the requesting the story file version action, object as "Version"
Subject the announce the story file version rule, object in the carry out requesting the story file version rulebook
Subject the announce the story file version rule, object as "ANNOUNCE_STORY_FILE_VERSION_R"
Subject requesting the score, object out of world and applying to nothing
Subject the requesting the score action, object as "Score"
Subject the announce the score rule, object in the carry out requesting the score rulebook
Subject the announce the score rule, object as "ANNOUNCE_SCORE_R"
Subject preferring abbreviated room descriptions, object out of world and applying to nothing
Subject the preferring abbreviated room descriptions action, object as "LMode3"
Subject the prefer abbreviated room descriptions rule, object in the carry out preferring abbreviated room descriptions rulebook
Subject the prefer abbreviated room descriptions rule, object as "PREFER_ABBREVIATED_R"
Subject preferring unabbreviated room descriptions, object out of world and applying to nothing
Subject the preferring unabbreviated room descriptions action, object as "LMode2"
Subject the prefer unabbreviated room descriptions rule, object in the carry out preferring unabbreviated room descriptions rulebook
Subject the prefer unabbreviated room descriptions rule, object as "PREFER_UNABBREVIATED_R"
Subject preferring sometimes abbreviated room descriptions, object out of world and applying to nothing
Subject the preferring sometimes abbreviated room descriptions action, object as "LMode1"
Subject the prefer sometimes abbreviated room descriptions rule, object in the carry out preferring sometimes abbreviated room descriptions rulebook
Subject the prefer sometimes abbreviated room descriptions rule, object as "PREFER_SOMETIMES_ABBREVIATED_R"
Subject switching score notification on, object out of world and applying to nothing
Subject the switching score notification on action, object as "NotifyOn"
Subject the switch score notification on rule, object in the carry out switching score notification on rulebook
Subject the switch score notification on rule, object as "SWITCH_SCORE_NOTIFY_ON_R"
Subject switching score notification off, object out of world and applying to nothing
Subject the switching score notification off action, object as "NotifyOff"
Subject the switch score notification off rule, object in the carry out switching score notification off rulebook
Subject the switch score notification off rule, object as "SWITCH_SCORE_NOTIFY_OFF_R"
Subject requesting the pronoun meanings, object out of world and applying to nothing
Subject the requesting the pronoun meanings action, object as "Pronouns"
Subject the announce the pronoun meanings rule, object in the carry out requesting the pronoun meanings rulebook
Subject the announce the pronoun meanings rule, object as "ANNOUNCE_PRONOUN_MEANINGS_R"
Subject the understand token a time period, object as "RELATIVE_TIME_TOKEN"
Subject understand "take [things]", object taking
Subject understand "take off [something]", object taking off
Subject understand "take [things inside] from [something]", object removing it from
Subject understand "take [things inside] off [something]", object removing it from
Subject understand "take inventory", object taking inventory
Subject understand the commands "carry" and "hold", object "take"
Subject understand "get out/off/up", object exiting
Subject understand "get [things]", object taking
Subject understand "get in/into/on/onto [something]", object entering
Subject understand "get off [something]", object getting off
Subject understand "get [things inside] from [something]", object removing it from
Subject understand "pick up [things]" or "pick [things] up", object taking
Subject understand "stand" or "stand up", object exiting
Subject understand "stand on [something]", object entering
Subject understand "remove [something preferably held]", object taking off
Subject understand "remove [things inside] from [something]", object removing it from
Subject understand "shed [something preferably held]", object taking off
Subject understand the commands "doff" and "disrobe", object "shed"
Subject understand "wear [something preferably held]", object wearing
Subject understand the command "don", object "wear"
Subject understand "put [other things] in/inside/into [something]", object inserting it into
Subject understand "put [other things] on/onto [something]", object putting it on
Subject understand "put on [something preferably held]", object wearing
Subject understand "put down [things preferably held]" or "put [things preferably held] down", object dropping
Subject understand "insert [other things] in/into [something]", object inserting it into
Subject understand "drop [things preferably held]", object dropping
Subject understand "drop [other things] in/into/down [something]", object inserting it into
Subject understand "drop [other things] on/onto [something]", object putting it on
Subject understand "drop [something preferably held] at/against/on/onto [something]", object throwing it at
Subject understand the commands "throw" and "discard", object "drop"
Subject understand "give [something preferably held] to [someone]", object giving it to
Subject understand "give [someone] [something preferably held]", object giving it to ( with nouns reversed )
Subject understand the commands "pay" and "offer" and "feed", object "give"
Subject understand "show [someone] [something preferably held]", object showing it to ( with nouns reversed )
Subject understand "show [something preferably held] to [someone]", object showing it to
Subject understand the commands "present" and "display", object "show"
Subject understand "go", object going
Subject understand "go [direction]", object going
Subject understand "go [something]", object entering
Subject understand "go into/in/inside/through [something]", object entering
Subject understand the commands "walk" , "leave" and "run", object "go"
Subject understand "inventory", object taking inventory
Subject understand the commands "i" and "inv", object "inventory"
Subject understand "look", object looking
Subject understand "look at [something]", object examining
Subject understand "look inside/in/into/through [something]", object searching
Subject understand "look under [something]", object looking under
Subject understand "look up [text] in [something]", object consulting it about ( with nouns reversed )
Subject understand the command "l", object "look"
Subject understand "consult [something] on/about [text]", object consulting it about
Subject understand "open [something]", object opening
Subject understand "open [something] with [something preferably held]", object unlocking it with
Subject understand the commands "unwrap" , "uncover", object "open"
Subject understand "close [something]", object closing
Subject understand "close up [something]", object closing
Subject understand "close off [something]", object switching off
Subject understand the commands "shut" and "cover", object "close"
Subject understand "enter [something]", object entering
Subject understand the command "cross", object "enter"
Subject understand "sit on top of [something]", object entering
Subject understand "sit on/in/inside [something]", object entering
Subject understand "exit", object exiting
Subject understand the command "out", object "exit"
Subject understand "examine [something]", object examining
Subject understand the commands "x" , "watch" , "describe" and "check", object "examine"
Subject understand "read [something]", object examining
Subject understand "read about [text] in [something]", object consulting it about ( with nouns reversed )
Subject understand "read [text] in [something]", object consulting it about ( with nouns reversed )
Subject understand "yes", object saying yes
Subject understand the command "y", object "yes"
Subject understand "no", object saying no
Subject understand "sorry", object saying sorry
Subject understand "bother", object swearing mildly
Subject understand the commands "curses" , "drat" and "darn", object "bother"
Subject understand "shit", object swearing obscenely
Subject understand the commands "fuck" and "damn", object "shit"
Subject understand "search [something]", object searching
Subject understand "wave", object waving hands
Subject understand "wave [something]", object waving
Subject understand "set [something] to [text]", object setting it to
Subject understand the command "adjust", object "set"
Subject understand "pull [something]", object pulling
Subject understand the command "drag", object "pull"
Subject understand "push [something]", object pushing
Subject understand "push [something] [direction]" or "push [something] to [direction]", object pushing it to
Subject understand the commands "move" , "shift" , "clear" and "press", object "push"
Subject understand "turn [something]", object turning
Subject understand "turn [something] on" or "turn on [something]", object switching on
Subject understand "turn [something] off" or "turn off [something]", object switching off
Subject understand the commands "rotate" , "twist" , "unscrew" and "screw", object "turn"
Subject understand "switch [something]" or "switch on [something]" or "switch [something] on", object switching on
Subject understand "switch [something] off" or "switch off [something]", object switching off
Subject understand "lock [something] with [something preferably held]", object locking it with
Subject understand "unlock [something] with [something preferably held]", object unlocking it with
Subject understand "attack [something]", object attacking
Subject understand the commands "break" , "smash" , "hit" , "fight" , "torture" , "wreck" , "crack" , "destroy" , "murder" , "kill" , "punch" and "thump", object "attack"
Subject understand "wait", object waiting
Subject understand the command "z", object "wait"
Subject understand "answer [text] to [someone]", object answering it that ( with nouns reversed )
Subject understand the commands "say" , "shout" and "speak", object "answer"
Subject understand "tell [someone] about [text]", object telling it about
Subject understand "ask [someone] about [text]", object asking it about
Subject understand "ask [someone] for [something]", object asking it for
Subject understand "eat [something preferably held]", object eating
Subject understand "sleep", object sleeping
Subject understand the command "nap", object "sleep"
Subject understand "sing", object singing
Subject understand "climb [something]" or "climb up/over [something]", object climbing
Subject understand the command "scale", object "climb"
Subject understand "buy [something]", object buying
Subject understand the command "purchase", object "buy"
Subject understand "squeeze [something]", object squeezing
Subject understand the command "squash", object "squeeze"
Subject understand "swing [something]" or "swing on [something]", object swinging
Subject understand "wake" or "wake up", object waking up
Subject understand "wake [someone]" or "wake [someone] up" or "wake up [someone]", object waking
Subject understand the commands "awake" and "awaken", object "wake"
Subject understand "kiss [someone]", object kissing
Subject understand the commands "embrace" and "hug", object "kiss"
Subject understand "think", object thinking
Subject understand "smell", object smelling
Subject understand "smell [something]", object smelling
Subject understand the command "sniff", object "smell"
Subject understand "listen", object listening
Subject understand "hear [something]", object listening
Subject understand "listen to [something]", object listening
Subject understand "taste [something]", object tasting
Subject understand "touch [something]", object touching
Subject understand the command "feel", object "touch"
Subject understand "rub [something]", object rubbing
Subject understand the commands "shine" , "polish" , "sweep" , "clean" , "dust" , "wipe" and "scrub", object "rub"
Subject understand "tie [something] to [something]", object tying it to
Subject understand the commands "attach" , "fix" and "fasten", object "tie"
Subject understand "burn [something]", object burning
Subject understand the command "light", object "burn"
Subject understand "drink [something]", object drinking
Subject understand the commands "swallow" and "sip", object "drink"
Subject understand "cut [something]", object cutting
Subject understand the commands "slice" , "prune" and "chop", object "cut"
Subject understand "jump", object jumping
Subject understand the commands "skip" and "hop", object "jump"
Subject understand "score", object requesting the score
Subject understand "quit" or "q", object quitting the game
Subject understand "save", object saving the game
Subject understand "restart", object restarting the game
Subject understand "restore", object restoring the game
Subject understand "verify", object verifying the story file
Subject understand "version", object requesting the story file version
Subject understand "script" or "script on" or "transcript" or "transcript on", object switching the story transcript on
Subject understand "script off" or "transcript off", object switching the story transcript off
Subject understand "superbrief" or "short", object preferring abbreviated room descriptions
Subject understand "verbose" or "long", object preferring unabbreviated room descriptions
Subject understand "brief" or "normal", object preferring sometimes abbreviated room descriptions
Subject understand "nouns" or "pronouns", object requesting the pronoun meanings
Subject understand "notify" or "notify on", object switching score notification on
Subject understand "notify off", object switching score notification off
Subject the pronoun reference object, object an object that varies
Subject the pronoun reference object variable, object as "pronoun_obj"
Subject the library message action, object an action-name that varies
Subject the library message action variable, object as "lm_act"
Subject the library message number, object a number that varies
Subject the library message number variable, object as "lm_n"
Subject the library message amount, object a number that varies
Subject the library message amount variable, object as "lm_o"
Subject the library message object, object an object that varies
Subject the library message object variable, object as "lm_o"
Subject the library message actor, object an object that varies
Subject the library message actor variable, object as "actor"
Subject the second library message object, object an object that varies
Subject the second library message object variable, object as "lm_o2"
Subject the gate, object a room
Subject a man called a monk, object in the gate
Subject a bell, object here
Subject ringing, object applying to one thing
Subject understand "ring [something]", object ringing
Subject talking to, object applying to one visible thing
Subject understand "talk to [someone]" or "converse with
[someone]", object talking to
[Registering plural of person as people]
[Registering plural of person as persons]
[Registering plural of man as men]
[Registering plural of woman as women]
Created property: p0_description (ubyi6 = 0)
Created property: p1_printed_name (ubyi6 = 0)
Created property: p2_map_region (ubyi6 = 0)
Created property: p3_indefinite_article (ubyi6 = 0)
Created property: p4_initial_appearance (ubyi6 = 0)
Created property: p5_printed_plural_name (ubyi6 = 0)
Created property: p6_opposite (ubyi6 = 0)
Created property: p7_other_side (ubyi6 = 0)
Created property: p8_carrying_capacity (ubyi6 = 0)
Created property: with_key (ubyi6 = 0)


-----------------------------------------------------
Phase III ... Semantic analysis II
-----------------------------------------------------

[Verifying initial parse tree]
[Initial parse tree has 6865 nodes, width 1983 and depth 6.]
[Initial parse tree correct.]


-----------------------------------------------------
Phase IV ... Semantic analysis III
-----------------------------------------------------

Created adjectival phrase: A0'visible'
Created adjectival phrase: A1'invisible'
Created adjectival phrase: A2'touchable'
Created adjectival phrase: A3'untouchable'
Created adjectival phrase: A4'concealed'
Created adjectival phrase: A5'unconcealed'
Created adjectival phrase: A6'on-stage'
Created adjectival phrase: A7'off-stage'
Created adjectival phrase: A8'adjacent'
Created adjectival phrase: A9'even'
Created adjectival phrase: A10'odd'
Created adjectival phrase: A11'positive'
Created adjectival phrase: A12'negative'
Created adjectival phrase: A13'empty'
Created adjectival phrase: A14'non-empty'
Created adjectival phrase: A15'happening'
Created adjectival phrase: A16'full'
Created adjectival phrase: A17'non-full'
Created adjectival phrase: A18'going on'
Created adjectival phrase: A19'locale-supportable'
New table table of final question options: j=-1: with text: table[sp] of[sp] final[sp] question[sp] options[sp] final[cr] question[sp] wording[sp] only[tab] if[sp] victorious[sp] topic[tab] final[tab] response[sp] rule[sp] final[tab] response[sp] activity[sp] "RESTART"[cr] false[tab] "restart"[tab] immediately[tab] restart[sp] the[sp] vm[sp] rule[sp] --[tab] "RESTORE a saved game"[cr] false[tab] "restore"[tab] immediately[tab] restore[sp] saved[sp] game[sp] rule[sp] --[tab] "see some suggestions for AMUSING things to do"[cr] true[tab] "amusing"[tab] --[tab] amusing[tab] a[sp] victorious[sp] player[sp] "QUIT"[cr] false[tab] "quit"[tab] immediately[tab] quit[sp] rule[sp] --[tab] --[cr] false[tab] "undo"[tab] immediately[tab] undo[sp] rule[sp] --[tab]

Table no , name final question options
Logging table name: table of final question options
Created: {T0_final_question_options}
Row 0 is final question wording only if victorious topic final response rule final response activity
Row 0 col 0 is final question wording
Table column name final question wording initial kov NULL-KOV
Row 0 col 1 is only if victorious
Table column name only if victorious initial kov NULL-KOV
Row 0 col 2 is topic
Table column name topic initial kov NULL-KOV
Table column 'topic'/UNDERSTANDING_TY-KOV has type UNDERSTANDING_TY-KOV, according to {T0_final_question_options}
Row 0 col 3 is final response rule
Table column name final response rule initial kov NULL-KOV
Row 0 col 4 is final response activity
Table column name final response activity initial kov NULL-KOV
Row 1 is "RESTART" false "restart" immediately restart the vm rule --
Row 1 col 0 is "RESTART"
Row 1 col 1 is false
Row 1 col 2 is "restart"
Row 1 col 3 is immediately restart the vm rule
Row 1 col 4 is --
Row 2 is "RESTORE a saved game" false "restore" immediately restore saved game rule --
Row 2 col 0 is "RESTORE a saved game"
Row 2 col 1 is false
Row 2 col 2 is "restore"
Row 2 col 3 is immediately restore saved game rule
Row 2 col 4 is --
Row 3 is "see some suggestions for AMUSING things to do" true "amusing" -- amusing a victorious player
Row 3 col 0 is "see some suggestions for AMUSING things to do"
Row 3 col 1 is true
Row 3 col 2 is "amusing"
Row 3 col 3 is --
Row 3 col 4 is amusing a victorious player
Row 4 is "QUIT" false "quit" immediately quit rule --
Row 4 col 0 is "QUIT"
Row 4 col 1 is false
Row 4 col 2 is "quit"
Row 4 col 3 is immediately quit rule
Row 4 col 4 is --
Row 5 is -- false "undo" immediately undo rule --
Row 5 col 0 is --
Row 5 col 1 is false
Row 5 col 2 is "undo"
Row 5 col 3 is immediately undo rule
Row 5 col 4 is --
New table table of locale priorities: j=-1: with text: table[sp] of[sp] locale[sp] priorities[sp] notable-object[cr] ([sp] an[sp] object[sp] )[sp] locale[tab] description[sp] priority[sp] ([sp] a[sp] number[sp] )[sp] --[cr] --[tab] with[cr] blank[sp] rows[sp] for[sp] each[sp] thing[sp]

Table no , name locale priorities
Logging table name: table of locale priorities
Created: {T1_locale_priorities}
Row 0 is notable-object ( an object ) locale description priority ( a number )
Row 0 col 0 is notable-object ( an object )
Table column name notable-object initial kov OBJECT_TY-KOV
Row 0 col 1 is locale description priority ( a number )
Table column name locale description priority initial kov NUMBER_TY-KOV
Row 1 is -- --
Row 1 col 0 is --
Row 1 col 1 is --


-----------------------------------------------------
Phase V ... First pass through assertions
-----------------------------------------------------


start of assertion traverse (asterisked areas only):
[Constructing plural of room as rooms]
(1) Reading plural of <room> as <rooms>
(1) Setting plural of <room> as <rooms>
Created object: O1'room'
Setting kind of K1'room' to K0
[Changed subject of sentences to K1'room']
[Changed object of sentences to K1'room']
[Constructing plural of thing as things]
(1) Reading plural of <thing> as <things>
(1) Setting plural of <thing> as <things>
Created object: O2'thing'
Setting kind of K2'thing' to K0
[Changed subject of sentences to K2'thing']
[Changed object of sentences to K2'thing']
[Constructing plural of direction as directions]
(1) Reading plural of <direction> as <directions>
(1) Setting plural of <direction> as <directions>
Created object: O3'direction'
Setting kind of K3'direction' to K0
[Changed subject of sentences to K3'direction']
[Changed object of sentences to K3'direction']
[Constructing plural of door as doors]
(1) Reading plural of <door> as <doors>
(1) Setting plural of <door> as <doors>
Created object: O4'door'
Setting kind of K4'door' to K2'thing'
[Changed subject of sentences to K4'door']
[Changed object of sentences to K4'door']
[Constructing plural of container as containers]
(1) Reading plural of <container> as <containers>
(1) Setting plural of <container> as <containers>
Created object: O5'container'
Setting kind of K5'container' to K2'thing'
[Changed subject of sentences to K5'container']
[Changed object of sentences to K5'container']
[Constructing plural of supporter as supporters]
(1) Reading plural of <supporter> as <supporters>
(1) Setting plural of <supporter> as <supporters>
Created object: O6'supporter'
Setting kind of K6'supporter' to K2'thing'
[Changed subject of sentences to K6'supporter']
[Changed object of sentences to K6'supporter']
[Constructing plural of backdrop as backdrops]
(1) Reading plural of <backdrop> as <backdrops>
(1) Setting plural of <backdrop> as <backdrops>
Created object: O7'backdrop'
Setting kind of K7'backdrop' to K2'thing'
[Changed subject of sentences to K7'backdrop']
[Changed object of sentences to K7'backdrop']
(1) Reading plural of <person> as <people>
(1) Setting plural of <person> as <people>
(2) Reading plural of <person> as <persons>
[Constructing plural of person as persons]
(3) Reading plural of <person> as <persons>
Created object: O8'person'
Setting kind of K8'person' to K2'thing'
[Changed subject of sentences to K8'person']
[Changed object of sentences to K8'person']
[Constructing plural of region as regions]
(1) Reading plural of <region> as <regions>
(1) Setting plural of <region> as <regions>
Created object: O9'region'
Setting kind of K9'region' to K0
[Changed subject of sentences to K9'region']
[Changed object of sentences to K9'region']
YYZ a room can be privately-named or publically-named
        node:SENTENCE_NT  <a room can be privately-named or publically-named>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <room> (indefinite)
            node:NOUNPHRASE_NT  <privately-named or publically-named> (no article)

    Checking new either/or name privately-named: NULL-PROPERTY (count 2)
    Meaning as type: (A)'privately-named'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym publically-named
    Meaning as type: (A)'publically-named'/UNKNOWN_TY/UNKNOWN_TY
Created property: p10_privately_named (ubyi6 = 1)
Created adjectival phrase: A20'privately-named'
    Allowing K1'room' to provide 'privately-named' - CONDITION_MTY -> p10_privately_named
Created property: p11_publically_named (ubyi6 = 1)
Created adjectival phrase: A21'publically-named'
    Allowing K1'room' to provide 'publically-named' - CONDITION_MTY -> p11_publically_named
[Changed subject of sentences to K1'room']
[Changed object of sentences to K1'room']
YYZ a room can be lighted or dark
        node:SENTENCE_NT  <a room can be lighted or dark>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <room> (indefinite)
            node:NOUNPHRASE_NT  <lighted or dark> (no article)

    Checking new either/or name lighted: NULL-PROPERTY (count 2)
    Meaning as type: (A)'lighted'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym dark
    Meaning as type: (A)'dark'/UNKNOWN_TY/UNKNOWN_TY
Created property: p12_lighted (ubyi6 = 0)
Created adjectival phrase: A22'lighted'
    Allowing K1'room' to provide 'lighted' - CONDITION_MTY -> p12_lighted
Created property: p13_dark (ubyi6 = 0)
Created adjectival phrase: A23'dark'
    Allowing K1'room' to provide 'dark' - CONDITION_MTY -> p13_dark
YYZ a room can be visited or unvisited
        node:SENTENCE_NT  <a room can be visited or unvisited>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <room> (indefinite)
            node:NOUNPHRASE_NT  <visited or unvisited> (no article)

    Checking new either/or name visited: NULL-PROPERTY (count 2)
    Meaning as type: (A)'visited'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym unvisited
    Meaning as type: (A)'unvisited'/UNKNOWN_TY/UNKNOWN_TY
Created property: p14_visited (ubyi6 = 0)
Created adjectival phrase: A24'visited'
    Allowing K1'room' to provide 'visited' - CONDITION_MTY -> p14_visited
Created property: p15_unvisited (ubyi6 = 0)
Created adjectival phrase: A25'unvisited'
    Allowing K1'room' to provide 'unvisited' - CONDITION_MTY -> p15_unvisited
    Allowing K1'room' to provide 'description' - NULL-KOV -> p0_description
    Allowing K1'room' to provide 'printed name' - NULL-KOV -> p1_printed_name
    Allowing K1'room' to provide 'map region' - NULL-KOV -> p2_map_region
YYZ a thing can be lit or unlit
        node:SENTENCE_NT  <a thing can be lit or unlit>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <lit or unlit> (no article)

    Checking new either/or name lit: NULL-PROPERTY (count 2)
    Meaning as type: (A)'lit'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym unlit
    Meaning as type: (A)'unlit'/UNKNOWN_TY/UNKNOWN_TY
Created property: p16_lit (ubyi6 = 0)
Created adjectival phrase: A26'lit'
    Allowing K2'thing' to provide 'lit' - CONDITION_MTY -> p16_lit
Created property: p17_unlit (ubyi6 = 0)
Created adjectival phrase: A27'unlit'
    Allowing K2'thing' to provide 'unlit' - CONDITION_MTY -> p17_unlit
[Changed subject of sentences to K2'thing']
[Changed object of sentences to K2'thing']
YYZ a thing can be edible or inedible
        node:SENTENCE_NT  <a thing can be edible or inedible>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <edible or inedible> (no article)

    Checking new either/or name edible: NULL-PROPERTY (count 2)
    Meaning as type: (A)'edible'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym inedible
    Meaning as type: (A)'inedible'/UNKNOWN_TY/UNKNOWN_TY
Created property: p18_edible (ubyi6 = 0)
Created adjectival phrase: A28'edible'
    Allowing K2'thing' to provide 'edible' - CONDITION_MTY -> p18_edible
Created property: p19_inedible (ubyi6 = 0)
Created adjectival phrase: A29'inedible'
    Allowing K2'thing' to provide 'inedible' - CONDITION_MTY -> p19_inedible
YYZ a thing can be fixed in place or portable
        node:SENTENCE_NT  <a thing can be fixed in place or portable>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <fixed in place or portable> (no article)

    Checking new either/or name fixed in place: NULL-PROPERTY (count 2)
    Meaning as type: (A)'fixed in place'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym portable
    Meaning as type: (A)'portable'/UNKNOWN_TY/UNKNOWN_TY
Created property: p20_fixed_in_place (ubyi6 = 0)
Created adjectival phrase: A30'fixed in place'
    Allowing K2'thing' to provide 'fixed in place' - CONDITION_MTY -> p20_fixed_in_place
Created property: p21_portable (ubyi6 = 0)
Created adjectival phrase: A31'portable'
    Allowing K2'thing' to provide 'portable' - CONDITION_MTY -> p21_portable
YYZ a thing can be scenery
        node:SENTENCE_NT  <a thing can be scenery>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <scenery> (no article)

    Checking new either/or name scenery: NULL-PROPERTY (count 1)
    Meaning as type: (A)'scenery'/UNKNOWN_TY/UNKNOWN_TY
Created property: p22_scenery (ubyi6 = 0)
Created adjectival phrase: A32'scenery'
    Allowing K2'thing' to provide 'scenery' - CONDITION_MTY -> p22_scenery
YYZ a thing can be wearable
        node:SENTENCE_NT  <a thing can be wearable>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <wearable> (no article)

    Checking new either/or name wearable: NULL-PROPERTY (count 1)
    Meaning as type: (A)'wearable'/UNKNOWN_TY/UNKNOWN_TY
Created property: p23_wearable (ubyi6 = 0)
Created adjectival phrase: A33'wearable'
    Allowing K2'thing' to provide 'wearable' - CONDITION_MTY -> p23_wearable
YYZ a thing can be pushable between rooms
        node:SENTENCE_NT  <a thing can be pushable between rooms>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <pushable between rooms> (no article)

    Checking new either/or name pushable between rooms: NULL-PROPERTY (count 1)
    Meaning as type: (A)'pushable between rooms'/UNKNOWN_TY/UNKNOWN_TY
Created property: p24_pushable_between_rooms (ubyi6 = 0)
Created adjectival phrase: A34'pushable between rooms'
    Allowing K2'thing' to provide 'pushable between rooms' - CONDITION_MTY -> p24_pushable_between_rooms
YYZ a thing can be handled
        node:SENTENCE_NT  <a thing can be handled>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <handled> (no article)

    Checking new either/or name handled: NULL-PROPERTY (count 1)
    Meaning as type: (A)'handled'/UNKNOWN_TY/UNKNOWN_TY
Created property: p25_handled (ubyi6 = 0)
Created adjectival phrase: A35'handled'
    Allowing K2'thing' to provide 'handled' - CONDITION_MTY -> p25_handled
YYZ a thing can be initially carried
        node:SENTENCE_NT  <a thing can be initially carried>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <initially carried> (no article)

    Checking new either/or name initially carried: NULL-PROPERTY (count 1)
    Meaning as type: (A)'initially carried'/UNKNOWN_TY/UNKNOWN_TY
Created property: p26_initially_carried (ubyi6 = 0)
Created adjectival phrase: A36'initially carried'
    Allowing K2'thing' to provide 'initially carried' - CONDITION_MTY -> p26_initially_carried
YYZ a thing can be privately-named or publically-named
        node:SENTENCE_NT  <a thing can be privately-named or publically-named>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <privately-named or publically-named> (no article)

    Checking new either/or name privately-named: 'privately-named' - CONDITION_MTY/~'publically-named' -> p10_privately_named (count 2)
    Checking new antonym publically-named
    Allowing K2'thing' to provide 'privately-named' - CONDITION_MTY/~'publically-named' -> p10_privately_named
    Allowing K2'thing' to provide 'publically-named' - CONDITION_MTY/~'privately-named' -> p11_publically_named
YYZ a thing can be plural-named or singular-named
        node:SENTENCE_NT  <a thing can be plural-named or singular-named>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <plural-named or singular-named> (no article)

    Checking new either/or name plural-named: NULL-PROPERTY (count 2)
    Meaning as type: (A)'plural-named'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym singular-named
    Meaning as type: (A)'singular-named'/UNKNOWN_TY/UNKNOWN_TY
Created property: p27_plural_named (ubyi6 = 0)
Created adjectival phrase: A37'plural-named'
    Allowing K2'thing' to provide 'plural-named' - CONDITION_MTY -> p27_plural_named
Created property: p28_singular_named (ubyi6 = 0)
Created adjectival phrase: A38'singular-named'
    Allowing K2'thing' to provide 'singular-named' - CONDITION_MTY -> p28_singular_named
YYZ a thing can be proper-named or improper-named
        node:SENTENCE_NT  <a thing can be proper-named or improper-named>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <proper-named or improper-named> (no article)

    Checking new either/or name proper-named: NULL-PROPERTY (count 2)
    Meaning as type: (A)'proper-named'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym improper-named
    Meaning as type: (A)'improper-named'/UNKNOWN_TY/UNKNOWN_TY
Created property: p29_proper_named (ubyi6 = 0)
Created adjectival phrase: A39'proper-named'
    Allowing K2'thing' to provide 'proper-named' - CONDITION_MTY -> p29_proper_named
Created property: p30_improper_named (ubyi6 = 0)
Created adjectival phrase: A40'improper-named'
    Allowing K2'thing' to provide 'improper-named' - CONDITION_MTY -> p30_improper_named
YYZ a thing can be described or undescribed
        node:SENTENCE_NT  <a thing can be described or undescribed>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <described or undescribed> (no article)

    Checking new either/or name described: NULL-PROPERTY (count 2)
    Meaning as type: (A)'described'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym undescribed
    Meaning as type: (A)'undescribed'/UNKNOWN_TY/UNKNOWN_TY
Created property: p31_described (ubyi6 = 0)
Created adjectival phrase: A41'described'
    Allowing K2'thing' to provide 'described' - CONDITION_MTY -> p31_described
Created property: p32_undescribed (ubyi6 = 0)
Created adjectival phrase: A42'undescribed'
    Allowing K2'thing' to provide 'undescribed' - CONDITION_MTY -> p32_undescribed
YYZ a thing can be marked for listing or unmarked for listing
        node:SENTENCE_NT  <a thing can be marked for listing or unmarked for listing>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <marked for listing or unmarked for listing> (no article)

    Checking new either/or name marked for listing: NULL-PROPERTY (count 2)
    Meaning as type: (A)'marked for listing'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym unmarked for listing
    Meaning as type: (A)'unmarked for listing'/UNKNOWN_TY/UNKNOWN_TY
Created property: p33_marked_for_listing (ubyi6 = 0)
Created adjectival phrase: A43'marked for listing'
    Allowing K2'thing' to provide 'marked for listing' - CONDITION_MTY -> p33_marked_for_listing
Created property: p34_unmarked_for_listing (ubyi6 = 0)
Created adjectival phrase: A44'unmarked for listing'
    Allowing K2'thing' to provide 'unmarked for listing' - CONDITION_MTY -> p34_unmarked_for_listing
YYZ a thing can be mentioned or unmentioned
        node:SENTENCE_NT  <a thing can be mentioned or unmentioned>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <thing> (indefinite)
            node:NOUNPHRASE_NT  <mentioned or unmentioned> (no article)

    Checking new either/or name mentioned: NULL-PROPERTY (count 2)
    Meaning as type: (A)'mentioned'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym unmentioned
    Meaning as type: (A)'unmentioned'/UNKNOWN_TY/UNKNOWN_TY
Created property: p35_mentioned (ubyi6 = 0)
Created adjectival phrase: A45'mentioned'
    Allowing K2'thing' to provide 'mentioned' - CONDITION_MTY -> p35_mentioned
Created property: p36_unmentioned (ubyi6 = 0)
Created adjectival phrase: A46'unmentioned'
    Allowing K2'thing' to provide 'unmentioned' - CONDITION_MTY -> p36_unmentioned
    Allowing K2'thing' to provide 'indefinite article' - NULL-KOV -> p3_indefinite_article
    Allowing K2'thing' to provide 'description' - TEXT_TY-KOV -> p0_description
    Allowing K2'thing' to provide 'initial appearance' - NULL-KOV -> p4_initial_appearance
    Allowing K2'thing' to provide 'printed name' - TEXT_TY-KOV -> p1_printed_name
    Allowing K2'thing' to provide 'printed plural name' - NULL-KOV -> p5_printed_plural_name
YYZ a direction can be privately-named or publically-named
        node:SENTENCE_NT  <a direction can be privately-named or publically-named>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <direction> (indefinite)
            node:NOUNPHRASE_NT  <privately-named or publically-named> (no article)

    Checking new either/or name privately-named: 'privately-named' - CONDITION_MTY/~'publically-named' -> p10_privately_named (count 2)
    Checking new antonym publically-named
    Allowing K3'direction' to provide 'privately-named' - CONDITION_MTY/~'publically-named' -> p10_privately_named
    Allowing K3'direction' to provide 'publically-named' - CONDITION_MTY/~'privately-named' -> p11_publically_named
[Changed subject of sentences to K3'direction']
[Changed object of sentences to K3'direction']
YYZ a direction can be marked for listing or unmarked for listing
        node:SENTENCE_NT  <a direction can be marked for listing or unmarked for listing>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <direction> (indefinite)
            node:NOUNPHRASE_NT  <marked for listing or unmarked for listing> (no article)

    Checking new either/or name marked for listing: 'marked for listing' - CONDITION_MTY/~'unmarked for listing' -> p33_marked_for_listing (count 2)
    Checking new antonym unmarked for listing
    Allowing K3'direction' to provide 'marked for listing' - CONDITION_MTY/~'unmarked for listing' -> p33_marked_for_listing
    Allowing K3'direction' to provide 'unmarked for listing' - CONDITION_MTY/~'marked for listing' -> p34_unmarked_for_listing
    Allowing K3'direction' to provide 'opposite' - NULL-KOV -> p6_opposite
[Constructing plural of north as norths]
(1) Reading plural of <north> as <norths>
(1) Setting plural of <north> as <norths>
Created object: O10'north'
Setting kind of O10'north' to K3'direction'
[Constructing plural of northeast as northeasts]
(1) Reading plural of <northeast> as <northeasts>
(1) Setting plural of <northeast> as <northeasts>
Created object: O11'northeast'
Setting kind of O11'northeast' to K3'direction'
[Constructing plural of northwest as northwests]
(1) Reading plural of <northwest> as <northwests>
(1) Setting plural of <northwest> as <northwests>
Created object: O12'northwest'
Setting kind of O12'northwest' to K3'direction'
[Constructing plural of south as souths]
(1) Reading plural of <south> as <souths>
(1) Setting plural of <south> as <souths>
Created object: O13'south'
Setting kind of O13'south' to K3'direction'
[Constructing plural of southeast as southeasts]
(1) Reading plural of <southeast> as <southeasts>
(1) Setting plural of <southeast> as <southeasts>
Created object: O14'southeast'
Setting kind of O14'southeast' to K3'direction'
[Constructing plural of southwest as southwests]
(1) Reading plural of <southwest> as <southwests>
(1) Setting plural of <southwest> as <southwests>
Created object: O15'southwest'
Setting kind of O15'southwest' to K3'direction'
[Constructing plural of east as easts]
(1) Reading plural of <east> as <easts>
(1) Setting plural of <east> as <easts>
Created object: O16'east'
Setting kind of O16'east' to K3'direction'
[Constructing plural of west as wests]
(1) Reading plural of <west> as <wests>
(1) Setting plural of <west> as <wests>
Created object: O17'west'
Setting kind of O17'west' to K3'direction'
[Constructing plural of up as ups]
(1) Reading plural of <up> as <ups>
(1) Setting plural of <up> as <ups>
Created object: O18'up'
Setting kind of O18'up' to K3'direction'
[Constructing plural of down as downs]
(1) Reading plural of <down> as <downs>
(1) Setting plural of <down> as <downs>
Created object: O19'down'
Setting kind of O19'down' to K3'direction'
[Constructing plural of inside as insides]
(1) Reading plural of <inside> as <insides>
(1) Setting plural of <inside> as <insides>
Created object: O20'inside'
Setting kind of O20'inside' to K3'direction'
[Constructing plural of outside as outsides]
(1) Reading plural of <outside> as <outsides>
(1) Setting plural of <outside> as <outsides>
Created object: O21'outside'
Setting kind of O21'outside' to K3'direction'
[Changed subject of sentences to K4'door']
[Changed object of sentences to K4'door']
    Allowing K4'door' to provide 'other side' - NULL-KOV -> p7_other_side
Relation definition of leading-through: left term: 'one room ( called the other side )', right term: 'various doors'
    Allowing K4'door' to provide 'other side' - OBJECT_TY-KOV -> p7_other_side
Defined the binary predicate:
BP59 <leading-through> - right way round - Relation_OtoV
  function(0): <schema: (*1.p7_other_side)>
  term 0 is 'other side'
  term 0 implies kind K1'room'
  function(1): <null schema>
  term 1 implies kind K4'door'
  test: <null schema>
  make true: <schema: *2.p7_other_side = *1>
  make false: <schema: Relation_NowN1toV(*2,p7_other_side,*1)>
  storage property: 'other side' - OBJECT_TY-KOV -> p7_other_side

YYZ a container can be enterable
        node:SENTENCE_NT  <a container can be enterable>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <container> (indefinite)
            node:NOUNPHRASE_NT  <enterable> (no article)

    Checking new either/or name enterable: NULL-PROPERTY (count 1)
    Meaning as type: (A)'enterable'/UNKNOWN_TY/UNKNOWN_TY
Created property: p37_enterable (ubyi6 = 0)
Created adjectival phrase: A47'enterable'
    Allowing K5'container' to provide 'enterable' - CONDITION_MTY -> p37_enterable
YYZ a container can be opaque or transparent
        node:SENTENCE_NT  <a container can be opaque or transparent>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <container> (indefinite)
            node:NOUNPHRASE_NT  <opaque or transparent> (no article)

    Checking new either/or name opaque: NULL-PROPERTY (count 2)
    Meaning as type: (A)'opaque'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym transparent
    Meaning as type: (A)'transparent'/UNKNOWN_TY/UNKNOWN_TY
Created property: p38_opaque (ubyi6 = 0)
Created adjectival phrase: A48'opaque'
    Allowing K5'container' to provide 'opaque' - CONDITION_MTY -> p38_opaque
Created property: p39_transparent (ubyi6 = 0)
Created adjectival phrase: A49'transparent'
    Allowing K5'container' to provide 'transparent' - CONDITION_MTY -> p39_transparent
[Changed subject of sentences to K5'container']
[Changed object of sentences to K5'container']
    Allowing K5'container' to provide 'carrying capacity' - NULL-KOV -> p8_carrying_capacity
YYZ a supporter can be enterable
        node:SENTENCE_NT  <a supporter can be enterable>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <supporter> (indefinite)
            node:NOUNPHRASE_NT  <enterable> (no article)

    Checking new either/or name enterable: 'enterable' - CONDITION_MTY -> p37_enterable (count 1)
    Allowing K6'supporter' to provide 'enterable' - CONDITION_MTY -> p37_enterable
    Allowing K6'supporter' to provide 'carrying capacity' - NUMBER_TY-KOV -> p8_carrying_capacity
[Changed subject of sentences to K6'supporter']
[Changed object of sentences to K6'supporter']
YYZ a door can be open or closed
        node:SENTENCE_NT  <a door can be open or closed>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <door> (indefinite)
            node:NOUNPHRASE_NT  <open or closed> (no article)

    Checking new either/or name open: NULL-PROPERTY (count 2)
    Meaning as type: (A)'open'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym closed
    Meaning as type: (A)'closed'/UNKNOWN_TY/UNKNOWN_TY
Created property: p40_open (ubyi6 = 0)
Created adjectival phrase: A50'open'
    Allowing K4'door' to provide 'open' - CONDITION_MTY -> p40_open
Created property: p41_closed (ubyi6 = 0)
Created adjectival phrase: A51'closed'
    Allowing K4'door' to provide 'closed' - CONDITION_MTY -> p41_closed
[Changed subject of sentences to K4'door']
[Changed object of sentences to K4'door']
YYZ a door can be openable or unopenable
        node:SENTENCE_NT  <a door can be openable or unopenable>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <door> (indefinite)
            node:NOUNPHRASE_NT  <openable or unopenable> (no article)

    Checking new either/or name openable: NULL-PROPERTY (count 2)
    Meaning as type: (A)'openable'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym unopenable
    Meaning as type: (A)'unopenable'/UNKNOWN_TY/UNKNOWN_TY
Created property: p42_openable (ubyi6 = 0)
Created adjectival phrase: A52'openable'
    Allowing K4'door' to provide 'openable' - CONDITION_MTY -> p42_openable
Created property: p43_unopenable (ubyi6 = 0)
Created adjectival phrase: A53'unopenable'
    Allowing K4'door' to provide 'unopenable' - CONDITION_MTY -> p43_unopenable
YYZ a container can be open or closed
        node:SENTENCE_NT  <a container can be open or closed>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <container> (indefinite)
            node:NOUNPHRASE_NT  <open or closed> (no article)

    Checking new either/or name open: 'open' - CONDITION_MTY/~'closed' -> p40_open (count 2)
    Checking new antonym closed
    Allowing K5'container' to provide 'open' - CONDITION_MTY/~'closed' -> p40_open
    Allowing K5'container' to provide 'closed' - CONDITION_MTY/~'open' -> p41_closed
[Changed subject of sentences to K5'container']
[Changed object of sentences to K5'container']
YYZ a container can be openable or unopenable
        node:SENTENCE_NT  <a container can be openable or unopenable>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <container> (indefinite)
            node:NOUNPHRASE_NT  <openable or unopenable> (no article)

    Checking new either/or name openable: 'openable' - CONDITION_MTY/~'unopenable' -> p42_openable (count 2)
    Checking new antonym unopenable
    Allowing K5'container' to provide 'openable' - CONDITION_MTY/~'unopenable' -> p42_openable
    Allowing K5'container' to provide 'unopenable' - CONDITION_MTY/~'openable' -> p43_unopenable
YYZ a door can be lockable
        node:SENTENCE_NT  <a door can be lockable>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <door> (indefinite)
            node:NOUNPHRASE_NT  <lockable> (no article)

    Checking new either/or name lockable: NULL-PROPERTY (count 1)
    Meaning as type: (A)'lockable'/UNKNOWN_TY/UNKNOWN_TY
Created property: p44_lockable (ubyi6 = 0)
Created adjectival phrase: A54'lockable'
    Allowing K4'door' to provide 'lockable' - CONDITION_MTY -> p44_lockable
[Changed subject of sentences to K4'door']
[Changed object of sentences to K4'door']
YYZ a door can be locked or unlocked
        node:SENTENCE_NT  <a door can be locked or unlocked>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <door> (indefinite)
            node:NOUNPHRASE_NT  <locked or unlocked> (no article)

    Checking new either/or name locked: NULL-PROPERTY (count 2)
    Meaning as type: (A)'locked'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym unlocked
    Meaning as type: (A)'unlocked'/UNKNOWN_TY/UNKNOWN_TY
Created property: p45_locked (ubyi6 = 0)
Created adjectival phrase: A55'locked'
    Allowing K4'door' to provide 'locked' - CONDITION_MTY -> p45_locked
Created property: p46_unlocked (ubyi6 = 0)
Created adjectival phrase: A56'unlocked'
    Allowing K4'door' to provide 'unlocked' - CONDITION_MTY -> p46_unlocked
    Allowing K4'door' to provide 'matching key' - NULL-KOV -> with_key
grow_as_NP_with_adjectives:
        node:WITH_NT  <locked door>
            node:INSTANCE_NT  <locked door> refers:K4'door' evaluation:(A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K4'door')
            node:ADJECTIVE_NT 
Forming implication for K4'door': type (A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K4'door') implies
          node:ADJECTIVE_NT  <lockable>
grow_as_NP_with_adjectives:
        node:WITH_NT  <locked door>
            node:INSTANCE_NT  <locked door> refers:K4'door' evaluation:(A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K4'door')
            node:ADJECTIVE_NT 
Forming implication for K4'door': type (A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K4'door') implies
          node:ADJECTIVE_NT  <closed>
grow_as_NP_with_adjectives:
        node:WITH_NT  <lockable door>
            node:INSTANCE_NT  <lockable door> refers:K4'door' evaluation:(A)'lockable'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:lockable>)(kind K4'door')
            node:ADJECTIVE_NT 
Forming implication for K4'door': type (A)'lockable'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:lockable>)(kind K4'door') implies
          node:ADJECTIVE_NT  <openable>
YYZ a container can be lockable
        node:SENTENCE_NT  <a container can be lockable>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <container> (indefinite)
            node:NOUNPHRASE_NT  <lockable> (no article)

    Checking new either/or name lockable: 'lockable' - CONDITION_MTY -> p44_lockable (count 1)
    Allowing K5'container' to provide 'lockable' - CONDITION_MTY -> p44_lockable
[Changed subject of sentences to K5'container']
[Changed object of sentences to K5'container']
YYZ a container can be locked or unlocked
        node:SENTENCE_NT  <a container can be locked or unlocked>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <container> (indefinite)
            node:NOUNPHRASE_NT  <locked or unlocked> (no article)

    Checking new either/or name locked: 'locked' - CONDITION_MTY/~'unlocked' -> p45_locked (count 2)
    Checking new antonym unlocked
    Allowing K5'container' to provide 'locked' - CONDITION_MTY/~'unlocked' -> p45_locked
    Allowing K5'container' to provide 'unlocked' - CONDITION_MTY/~'locked' -> p46_unlocked
    Allowing K5'container' to provide 'matching key' - OBJECT_TY-KOV -> with_key
grow_as_NP_with_adjectives:
        node:WITH_NT  <locked container>
            node:INSTANCE_NT  <locked container> refers:K5'container' evaluation:(A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K5'container')
            node:ADJECTIVE_NT 
Forming implication for K5'container': type (A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K5'container') implies
          node:ADJECTIVE_NT  <lockable>
grow_as_NP_with_adjectives:
        node:WITH_NT  <locked container>
            node:INSTANCE_NT  <locked container> refers:K5'container' evaluation:(A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K5'container')
            node:ADJECTIVE_NT 
Forming implication for K5'container': type (A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K5'container') implies
          node:ADJECTIVE_NT  <closed>
grow_as_NP_with_adjectives:
        node:WITH_NT  <lockable container>
            node:INSTANCE_NT  <lockable container> refers:K5'container' evaluation:(A)'lockable'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:lockable>)(kind K5'container')
            node:ADJECTIVE_NT 
Forming implication for K5'container': type (A)'lockable'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:lockable>)(kind K5'container') implies
          node:ADJECTIVE_NT  <openable>
Relation definition of lock-fitting: left term: 'one thing ( called the matching key )', right term: 'various things'
    Allowing K2'thing' to provide 'matching key' - OBJECT_TY-KOV -> with_key
Defined the binary predicate:
BP61 <lock-fitting> - right way round - Relation_OtoV
  function(0): <schema: (*1.with_key)>
  term 0 is 'matching key'
  term 0 implies kind K2'thing'
  function(1): <null schema>
  term 1 implies kind K2'thing'
  test: <null schema>
  make true: <schema: *2.with_key = *1>
  make false: <schema: Relation_NowN1toV(*2,with_key,*1)>
  storage property: 'matching key' - OBJECT_TY-KOV -> with_key

[Changed subject of sentences to K7'backdrop']
[Changed object of sentences to K7'backdrop']
YYZ a person can be female or male
        node:SENTENCE_NT  <a person can be female or male>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <person> (indefinite)
            node:NOUNPHRASE_NT  <female or male> (no article)

    Checking new either/or name female: NULL-PROPERTY (count 2)
    Meaning as type: (A)'female'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym male
    Meaning as type: (A)'male'/UNKNOWN_TY/UNKNOWN_TY
Created property: p47_female (ubyi6 = 0)
Created adjectival phrase: A57'female'
    Allowing K8'person' to provide 'female' - CONDITION_MTY -> p47_female
Created property: p48_male (ubyi6 = 0)
Created adjectival phrase: A58'male'
    Allowing K8'person' to provide 'male' - CONDITION_MTY -> p48_male
[Changed subject of sentences to K8'person']
[Changed object of sentences to K8'person']
YYZ a person can be neuter
        node:SENTENCE_NT  <a person can be neuter>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <person> (indefinite)
            node:NOUNPHRASE_NT  <neuter> (no article)

    Checking new either/or name neuter: NULL-PROPERTY (count 1)
    Meaning as type: (A)'neuter'/UNKNOWN_TY/UNKNOWN_TY
Created property: p49_neuter (ubyi6 = 0)
Created adjectival phrase: A59'neuter'
    Allowing K8'person' to provide 'neuter' - CONDITION_MTY -> p49_neuter
    Allowing K8'person' to provide 'carrying capacity' - NUMBER_TY-KOV -> p8_carrying_capacity
[Constructing plural of yourself as yourselfs]
(1) Reading plural of <yourself> as <yourselfs>
(1) Setting plural of <yourself> as <yourselfs>
Created object: O22'yourself'
grow_as_NP_with_adjectives:
        node:WITH_NT  <undescribed person>
            node:INSTANCE_NT  <undescribed person> refers:K8'person' evaluation:(A)'undescribed'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:undescribed>)(kind K8'person')
            node:ADJECTIVE_NT 
Setting kind of O22'yourself' to K8'person'
[Changed subject of sentences to O22'yourself']
[Changed object of sentences to O22'yourself']
(1) Reading plural of <man> as <men>
(1) Setting plural of <man> as <men>
[Constructing plural of man as mans]
(2) Reading plural of <man> as <mans>
Created object: O23'man'
Setting kind of K23'man' to K8'person'
[Changed subject of sentences to K23'man']
[Changed object of sentences to K23'man']
(1) Reading plural of <woman> as <women>
(1) Setting plural of <woman> as <women>
[Constructing plural of woman as womans]
(2) Reading plural of <woman> as <womans>
Created object: O24'woman'
Setting kind of K24'woman' to K8'person'
[Changed subject of sentences to K24'woman']
[Changed object of sentences to K24'woman']
[Constructing plural of animal as animals]
(1) Reading plural of <animal> as <animals>
(1) Setting plural of <animal> as <animals>
Created object: O25'animal'
Setting kind of K25'animal' to K8'person'
[Changed subject of sentences to K25'animal']
[Changed object of sentences to K25'animal']
[Constructing plural of device as devices]
(1) Reading plural of <device> as <devices>
(1) Setting plural of <device> as <devices>
Created object: O26'device'
Setting kind of K26'device' to K2'thing'
[Changed subject of sentences to K26'device']
[Changed object of sentences to K26'device']
YYZ a device can be switched on or switched off
        node:SENTENCE_NT  <a device can be switched on or switched off>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <device> (indefinite)
            node:NOUNPHRASE_NT  <switched on or switched off> (no article)

    Checking new either/or name switched on: NULL-PROPERTY (count 2)
    Meaning as type: (A)'switched on'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym switched off
    Meaning as type: (A)'switched off'/UNKNOWN_TY/UNKNOWN_TY
Created property: p50_switched_on (ubyi6 = 0)
Created adjectival phrase: A60'switched on'
    Allowing K26'device' to provide 'switched on' - CONDITION_MTY -> p50_switched_on
Created property: p51_switched_off (ubyi6 = 0)
Created adjectival phrase: A61'switched off'
    Allowing K26'device' to provide 'switched off' - CONDITION_MTY -> p51_switched_off
[Constructing plural of vehicle as vehicles]
(1) Reading plural of <vehicle> as <vehicles>
(1) Setting plural of <vehicle> as <vehicles>
Created object: O27'vehicle'
Setting kind of K27'vehicle' to K5'container'
[Changed subject of sentences to K27'vehicle']
[Changed object of sentences to K27'vehicle']
[Constructing plural of player's holdall as player's holdalls]
(1) Reading plural of <player's holdall> as <player's holdalls>
(1) Setting plural of <player's holdall> as <player's holdalls>
Created object: O28'player's holdall'
Setting kind of K28'player's holdall' to K5'container'
[Changed subject of sentences to K28'player's holdall']
[Changed object of sentences to K28'player's holdall']
[Constructing plural of player as players]
(1) Reading plural of <player> as <players>
(1) Setting plural of <player> as <players>
Created object: O29'player'
Uncreated object: O29'player'
Created non-library quantity: Quantity Q0_player believed variable 'player' = OBJECT_TY-K8'person'-KOV

[Constructing plural of location -- documented at var_location -- as location -- documented at var_location --s]
(1) Reading plural of <location -- documented at var_location --> as <location -- documented at var_location --s>
(1) Setting plural of <location -- documented at var_location --> as <location -- documented at var_location --s>
Created object: O30'location -- documented at var_location --'
Uncreated object: O30'location -- documented at var_location --'
Created non-library quantity: Quantity Q1_location believed variable 'location' = OBJECT_TY-KOV

[Constructing plural of score -- documented at var_score -- as score -- documented at var_score --s]
(1) Reading plural of <score -- documented at var_score --> as <score -- documented at var_score --s>
(1) Setting plural of <score -- documented at var_score --> as <score -- documented at var_score --s>
Created object: O31'score -- documented at var_score --'
Uncreated object: O31'score -- documented at var_score --'
Created non-library quantity: Quantity Q2_score believed variable 'score' = NUMBER_TY-KOV

[Constructing plural of last notified score as last notified scores]
(1) Reading plural of <last notified score> as <last notified scores>
(1) Setting plural of <last notified score> as <last notified scores>
Created object: O32'last notified score'
Uncreated object: O32'last notified score'
Created non-library quantity: Quantity Q3_last_notified_score believed variable 'last notified score' = NUMBER_TY-KOV

[Constructing plural of maximum score as maximum scores]
(1) Reading plural of <maximum score> as <maximum scores>
(1) Setting plural of <maximum score> as <maximum scores>
Created object: O33'maximum score'
Uncreated object: O33'maximum score'
Created non-library quantity: Quantity Q4_maximum_score believed variable 'maximum score' = NUMBER_TY-KOV

[Constructing plural of turn count as turn counts]
(1) Reading plural of <turn count> as <turn counts>
(1) Setting plural of <turn count> as <turn counts>
Created object: O34'turn count'
Uncreated object: O34'turn count'
Created non-library quantity: Quantity Q5_turn_count believed variable 'turn count' = NUMBER_TY-KOV

[Constructing plural of time of day -- documented at var_time -- as time of day -- documented at var_time --s]
(1) Reading plural of <time of day -- documented at var_time --> as <time of day -- documented at var_time --s>
(1) Setting plural of <time of day -- documented at var_time --> as <time of day -- documented at var_time --s>
Created object: O35'time of day -- documented at var_time --'
Uncreated object: O35'time of day -- documented at var_time --'
Created non-library quantity: Quantity Q6_time_of_day believed variable 'time of day' = TIME_TY-KOV

[Constructing plural of darkness witnessed as darkness witnesseds]
(1) Reading plural of <darkness witnessed> as <darkness witnesseds>
(1) Setting plural of <darkness witnessed> as <darkness witnesseds>
Created object: O36'darkness witnessed'
Uncreated object: O36'darkness witnessed'
Created non-library quantity: Quantity Q7_darkness_witnessed believed variable 'darkness witnessed' = TRUTH_STATE_TY-KOV

[Constructing plural of noun -- documented at var_noun -- as noun -- documented at var_noun --s]
(1) Reading plural of <noun -- documented at var_noun --> as <noun -- documented at var_noun --s>
(1) Setting plural of <noun -- documented at var_noun --> as <noun -- documented at var_noun --s>
Created object: O37'noun -- documented at var_noun --'
Uncreated object: O37'noun -- documented at var_noun --'
Created non-library quantity: Quantity Q8_noun believed variable 'noun' = OBJECT_TY-KOV

[Constructing plural of second noun as second nouns]
(1) Reading plural of <second noun> as <second nouns>
(1) Setting plural of <second noun> as <second nouns>
Created object: O38'second noun'
Uncreated object: O38'second noun'
Created non-library quantity: Quantity Q9_second_noun believed variable 'second noun' = OBJECT_TY-KOV

[Constructing plural of person asked -- documented at var_person_asked -- as person asked -- documented at var_person_asked --s]
(1) Reading plural of <person asked -- documented at var_person_asked --> as <person asked -- documented at var_person_asked --s>
(1) Setting plural of <person asked -- documented at var_person_asked --> as <person asked -- documented at var_person_asked --s>
Created object: O39'person asked -- documented at var_person_asked --'
Uncreated object: O39'person asked -- documented at var_person_asked --'
Created non-library quantity: Quantity Q10_person_asked believed variable 'person asked' = OBJECT_TY-KOV

[Constructing plural of reason the action failed -- documented at var_reason -- as reason the action failed -- documented at var_reason --s]
(1) Reading plural of <reason the action failed -- documented at var_reason --> as <reason the action failed -- documented at var_reason --s>
(1) Setting plural of <reason the action failed -- documented at var_reason --> as <reason the action failed -- documented at var_reason --s>
Created object: O40'reason the action failed -- documented at var_reason --'
Uncreated object: O40'reason the action failed -- documented at var_reason --'
Created non-library quantity: Quantity Q11_reason_the_action_failed believed variable 'reason the action failed' = RULE_TY-KOV

[Constructing plural of item described as item describeds]
(1) Reading plural of <item described> as <item describeds>
(1) Setting plural of <item described> as <item describeds>
Created object: O41'item described'
Uncreated object: O41'item described'
Created non-library quantity: Quantity Q12_item_described believed variable 'item described' = OBJECT_TY-KOV

[Constructing plural of person reaching -- documented at var_person_reaching -- as person reaching -- documented at var_person_reaching --s]
(1) Reading plural of <person reaching -- documented at var_person_reaching --> as <person reaching -- documented at var_person_reaching --s>
(1) Setting plural of <person reaching -- documented at var_person_reaching --> as <person reaching -- documented at var_person_reaching --s>
Created object: O42'person reaching -- documented at var_person_reaching --'
Uncreated object: O42'person reaching -- documented at var_person_reaching --'
Created non-library quantity: Quantity Q13_person_reaching believed variable 'person reaching' = OBJECT_TY-KOV

[Constructing plural of container in question as container in questions]
(1) Reading plural of <container in question> as <container in questions>
(1) Setting plural of <container in question> as <container in questions>
Created object: O43'container in question'
Uncreated object: O43'container in question'
Created non-library quantity: Quantity Q14_container_in_question believed variable 'container in question' = OBJECT_TY-KOV

[Constructing plural of supporter in question as supporter in questions]
(1) Reading plural of <supporter in question> as <supporter in questions>
(1) Setting plural of <supporter in question> as <supporter in questions>
Created object: O44'supporter in question'
Uncreated object: O44'supporter in question'
Created non-library quantity: Quantity Q15_supporter_in_question believed variable 'supporter in question' = OBJECT_TY-KOV

[Constructing plural of particular possession -- documented at var_particular -- as particular possession -- documented at var_particular --s]
(1) Reading plural of <particular possession -- documented at var_particular --> as <particular possession -- documented at var_particular --s>
(1) Setting plural of <particular possession -- documented at var_particular --> as <particular possession -- documented at var_particular --s>
Created object: O45'particular possession -- documented at var_particular --'
Uncreated object: O45'particular possession -- documented at var_particular --'
Created non-library quantity: Quantity Q16_particular_possession believed variable 'particular possession' = OBJECT_TY-K2'thing'-KOV

[Constructing plural of player's command -- documented at var_command -- as player's command -- documented at var_command --s]
(1) Reading plural of <player's command -- documented at var_command --> as <player's command -- documented at var_command --s>
(1) Setting plural of <player's command -- documented at var_command --> as <player's command -- documented at var_command --s>
Created object: O46'player's command -- documented at var_command --'
Uncreated object: O46'player's command -- documented at var_command --'
Created non-library quantity: Quantity Q17_player_s_command believed variable 'player's command' = SNIPPET_TY-KOV

[Constructing plural of matched text as matched texts]
(1) Reading plural of <matched text> as <matched texts>
(1) Setting plural of <matched text> as <matched texts>
Created object: O47'matched text'
Uncreated object: O47'matched text'
Created non-library quantity: Quantity Q18_matched_text believed variable 'matched text' = SNIPPET_TY-KOV

[Constructing plural of number understood -- documented at var_understood -- as number understood -- documented at var_understood --s]
(1) Reading plural of <number understood -- documented at var_understood --> as <number understood -- documented at var_understood --s>
(1) Setting plural of <number understood -- documented at var_understood --> as <number understood -- documented at var_understood --s>
Created object: O48'number understood -- documented at var_understood --'
Uncreated object: O48'number understood -- documented at var_understood --'
[Constructing plural of time understood as time understoods]
(1) Reading plural of <time understood> as <time understoods>
(1) Setting plural of <time understood> as <time understoods>
Created object: O49'time understood'
Uncreated object: O49'time understood'
[Constructing plural of topic understood as topic understoods]
(1) Reading plural of <topic understood> as <topic understoods>
(1) Setting plural of <topic understood> as <topic understoods>
Created object: O50'topic understood'
Uncreated object: O50'topic understood'
Created non-library quantity: Quantity Q21_topic_understood believed variable 'topic understood' = SNIPPET_TY-KOV

[Constructing plural of truth state understood as truth state understoods]
(1) Reading plural of <truth state understood> as <truth state understoods>
(1) Setting plural of <truth state understood> as <truth state understoods>
Created object: O51'truth state understood'
Uncreated object: O51'truth state understood'
Created non-library quantity: Quantity Q22_truth_state_understood believed variable 'truth state understood' = TRUTH_STATE_TY-KOV

[Constructing plural of current item from the multiple object list as current item from the multiple object lists]
(1) Reading plural of <current item from the multiple object list> as <current item from the multiple object lists>
(1) Setting plural of <current item from the multiple object list> as <current item from the multiple object lists>
Created object: O52'current item from the multiple object list'
Uncreated object: O52'current item from the multiple object list'
Created non-library quantity: Quantity Q23_current_item_from_the_mu believed variable 'current item from the multiple object list' = OBJECT_TY-KOV

[Constructing plural of command prompt -- documented at var_prompt -- as command prompt -- documented at var_prompt --s]
(1) Reading plural of <command prompt -- documented at var_prompt --> as <command prompt -- documented at var_prompt --s>
(1) Setting plural of <command prompt -- documented at var_prompt --> as <command prompt -- documented at var_prompt --s>
Created object: O53'command prompt -- documented at var_prompt --'
Uncreated object: O53'command prompt -- documented at var_prompt --'
Created non-library quantity: Quantity Q24_command_prompt believed variable 'command prompt' = TEXT_TY-KOV

Set initial value of Quantity Q24_command_prompt believed variable 'command prompt' = TEXT_TY-KOV
 to (A)'">"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
[Constructing plural of left hand status line -- documented at var_sl -- as left hand status line -- documented at var_sl --s]
(1) Reading plural of <left hand status line -- documented at var_sl --> as <left hand status line -- documented at var_sl --s>
(1) Setting plural of <left hand status line -- documented at var_sl --> as <left hand status line -- documented at var_sl --s>
Created object: O54'left hand status line -- documented at var_sl --'
Uncreated object: O54'left hand status line -- documented at var_sl --'
Created non-library quantity: Quantity Q25_left_hand_status_line believed variable 'left hand status line' = TEXT_TY-KOV

[Constructing plural of right hand status line as right hand status lines]
(1) Reading plural of <right hand status line> as <right hand status lines>
(1) Setting plural of <right hand status line> as <right hand status lines>
Created object: O55'right hand status line'
Uncreated object: O55'right hand status line'
Created non-library quantity: Quantity Q26_right_hand_status_line believed variable 'right hand status line' = TEXT_TY-KOV

[Constructing plural of listing group size as listing group sizes]
(1) Reading plural of <listing group size> as <listing group sizes>
(1) Setting plural of <listing group size> as <listing group sizes>
Created object: O56'listing group size'
Uncreated object: O56'listing group size'
Created non-library quantity: Quantity Q27_listing_group_size believed variable 'listing group size' = NUMBER_TY-KOV

[Constructing plural of story title as story titles]
(1) Reading plural of <story title> as <story titles>
(1) Setting plural of <story title> as <story titles>
Created object: O57'story title'
[Constructing plural of story author as story authors]
(1) Reading plural of <story author> as <story authors>
(1) Setting plural of <story author> as <story authors>
Created object: O58'story author'
[Constructing plural of story headline as story headlines]
(1) Reading plural of <story headline> as <story headlines>
(1) Setting plural of <story headline> as <story headlines>
Created object: O59'story headline'
[Constructing plural of story genre as story genres]
(1) Reading plural of <story genre> as <story genres>
(1) Setting plural of <story genre> as <story genres>
Created object: O60'story genre'
[Constructing plural of story description as story descriptions]
(1) Reading plural of <story description> as <story descriptions>
(1) Setting plural of <story description> as <story descriptions>
Created object: O61'story description'
Uncreated object: O57'story title'
Created non-library quantity: Quantity Q28_story_title believed variable 'story title' = TEXT_TY-KOV

Uncreated object: O58'story author'
Created non-library quantity: Quantity Q29_story_author believed variable 'story author' = TEXT_TY-KOV

Uncreated object: O59'story headline'
Created non-library quantity: Quantity Q30_story_headline believed variable 'story headline' = TEXT_TY-KOV

Uncreated object: O60'story genre'
Created non-library quantity: Quantity Q31_story_genre believed variable 'story genre' = TEXT_TY-KOV

Uncreated object: O61'story description'
Created non-library quantity: Quantity Q32_story_description believed variable 'story description' = TEXT_TY-KOV

[Constructing plural of release number as release numbers]
(1) Reading plural of <release number> as <release numbers>
(1) Setting plural of <release number> as <release numbers>
Created object: O62'release number'
[Constructing plural of story creation year as story creation years]
(1) Reading plural of <story creation year> as <story creation years>
(1) Setting plural of <story creation year> as <story creation years>
Created object: O63'story creation year'
Uncreated object: O62'release number'
Created non-library quantity: Quantity Q33_release_number believed variable 'release number' = NUMBER_TY-KOV

Uncreated object: O63'story creation year'
Created non-library quantity: Quantity Q34_story_creation_year believed variable 'story creation year' = NUMBER_TY-KOV

[Constructing plural of substitution-variable as substitution-variables]
(1) Reading plural of <substitution-variable> as <substitution-variables>
(1) Setting plural of <substitution-variable> as <substitution-variables>
Created object: O64'substitution-variable'
Uncreated object: O64'substitution-variable'
Created non-library quantity: Quantity Q35_substitution_variable believed variable 'substitution-variable' = OBJECT_TY-KOV

[Constructing plural of i6-nothing-constant as i6-nothing-constants]
(1) Reading plural of <i6-nothing-constant> as <i6-nothing-constants>
(1) Setting plural of <i6-nothing-constant> as <i6-nothing-constants>
Created object: O65'i6-nothing-constant'
Uncreated object: O65'i6-nothing-constant'
Created non-library quantity: Quantity Q36_i6_nothing_constant believed variable 'i6-nothing-constant' = OBJECT_TY-KOV

[Constructing plural of i6-varying-global as i6-varying-globals]
(1) Reading plural of <i6-varying-global> as <i6-varying-globals>
(1) Setting plural of <i6-varying-global> as <i6-varying-globals>
Created object: O66'i6-varying-global'
Uncreated object: O66'i6-varying-global'
Created non-library quantity: Quantity Q37_i6_varying_global believed variable 'i6-varying-global' = OBJECT_TY-KOV

[Constructing plural of item-pushed-between-rooms as item-pushed-between-roomses]
(1) Reading plural of <item-pushed-between-rooms> as <item-pushed-between-roomses>
(1) Setting plural of <item-pushed-between-rooms> as <item-pushed-between-roomses>
Created object: O67'item-pushed-between-rooms'
Uncreated object: O67'item-pushed-between-rooms'
Created non-library quantity: Quantity Q38_item_pushed_between_room believed variable 'item-pushed-between-rooms' = OBJECT_TY-KOV

[Constructing plural of actor-location as actor-locations]
(1) Reading plural of <actor-location> as <actor-locations>
(1) Setting plural of <actor-location> as <actor-locations>
Created object: O68'actor-location'
Uncreated object: O68'actor-location'
Created non-library quantity: Quantity Q39_actor_location believed variable 'actor-location' = OBJECT_TY-KOV

[Constructing plural of parameter-object as parameter-objects]
(1) Reading plural of <parameter-object> as <parameter-objects>
(1) Setting plural of <parameter-object> as <parameter-objects>
Created object: O69'parameter-object'
Uncreated object: O69'parameter-object'
Created non-library quantity: Quantity Q40_parameter_object believed variable 'parameter-object' = OBJECT_TY-KOV

[Constructing plural of procedural rules as procedural ruleses]
(1) Reading plural of <procedural rules> as <procedural ruleses>
(1) Setting plural of <procedural rules> as <procedural ruleses>
Created object: O70'procedural rules'
Uncreated object: O70'procedural rules'
[Constructing plural of startup rules as startup ruleses]
(1) Reading plural of <startup rules> as <startup ruleses>
(1) Setting plural of <startup rules> as <startup ruleses>
Created object: O71'startup rules'
Uncreated object: O71'startup rules'
[Constructing plural of turn sequence rules as turn sequence ruleses]
(1) Reading plural of <turn sequence rules> as <turn sequence ruleses>
(1) Setting plural of <turn sequence rules> as <turn sequence ruleses>
Created object: O72'turn sequence rules'
Uncreated object: O72'turn sequence rules'
[Constructing plural of shutdown rules as shutdown ruleses]
(1) Reading plural of <shutdown rules> as <shutdown ruleses>
(1) Setting plural of <shutdown rules> as <shutdown ruleses>
Created object: O73'shutdown rules'
Uncreated object: O73'shutdown rules'
[Constructing plural of scene changing rules as scene changing ruleses]
(1) Reading plural of <scene changing rules> as <scene changing ruleses>
(1) Setting plural of <scene changing rules> as <scene changing ruleses>
Created object: O74'scene changing rules'
Uncreated object: O74'scene changing rules'
[Constructing plural of when play begins as when play beginses]
(1) Reading plural of <when play begins> as <when play beginses>
(1) Setting plural of <when play begins> as <when play beginses>
Created object: O75'when play begins'
Uncreated object: O75'when play begins'
[Constructing plural of when play ends as when play endses]
(1) Reading plural of <when play ends> as <when play endses>
(1) Setting plural of <when play ends> as <when play endses>
Created object: O76'when play ends'
Uncreated object: O76'when play ends'
[Constructing plural of every turn rules as every turn ruleses]
(1) Reading plural of <every turn rules> as <every turn ruleses>
(1) Setting plural of <every turn rules> as <every turn ruleses>
Created object: O77'every turn rules'
Uncreated object: O77'every turn rules'
[Constructing plural of action-processing rules as action-processing ruleses]
(1) Reading plural of <action-processing rules> as <action-processing ruleses>
(1) Setting plural of <action-processing rules> as <action-processing ruleses>
Created object: O78'action-processing rules'
Uncreated object: O78'action-processing rules'
[Constructing plural of setting action variables as setting action variableses]
(1) Reading plural of <setting action variables> as <setting action variableses>
(1) Setting plural of <setting action variables> as <setting action variableses>
Created object: O79'setting action variables'
Uncreated object: O79'setting action variables'
[Constructing plural of specific action-processing rules as specific action-processing ruleses]
(1) Reading plural of <specific action-processing rules> as <specific action-processing ruleses>
(1) Setting plural of <specific action-processing rules> as <specific action-processing ruleses>
Created object: O80'specific action-processing rules'
Uncreated object: O80'specific action-processing rules'
[Constructing plural of player's action awareness rules as player's action awareness ruleses]
(1) Reading plural of <player's action awareness rules> as <player's action awareness ruleses>
(1) Setting plural of <player's action awareness rules> as <player's action awareness ruleses>
Created object: O81'player's action awareness rules'
Uncreated object: O81'player's action awareness rules'
[Constructing plural of accessibility rules as accessibility ruleses]
(1) Reading plural of <accessibility rules> as <accessibility ruleses>
(1) Setting plural of <accessibility rules> as <accessibility ruleses>
Created object: O82'accessibility rules'
Uncreated object: O82'accessibility rules'
[Constructing plural of reaching inside rules as reaching inside ruleses]
(1) Reading plural of <reaching inside rules> as <reaching inside ruleses>
(1) Setting plural of <reaching inside rules> as <reaching inside ruleses>
Created object: O83'reaching inside rules'
Uncreated object: O83'reaching inside rules'
[Constructing plural of reaching outside rules as reaching outside ruleses]
(1) Reading plural of <reaching outside rules> as <reaching outside ruleses>
(1) Setting plural of <reaching outside rules> as <reaching outside ruleses>
Created object: O84'reaching outside rules'
Uncreated object: O84'reaching outside rules'
[Constructing plural of visibility rules as visibility ruleses]
(1) Reading plural of <visibility rules> as <visibility ruleses>
(1) Setting plural of <visibility rules> as <visibility ruleses>
Created object: O85'visibility rules'
Uncreated object: O85'visibility rules'
[Constructing plural of persuasion rules as persuasion ruleses]
(1) Reading plural of <persuasion rules> as <persuasion ruleses>
(1) Setting plural of <persuasion rules> as <persuasion ruleses>
Created object: O86'persuasion rules'
Uncreated object: O86'persuasion rules'
[Constructing plural of unsuccessful attempt by as unsuccessful attempt bies]
(1) Reading plural of <unsuccessful attempt by> as <unsuccessful attempt bies>
(1) Setting plural of <unsuccessful attempt by> as <unsuccessful attempt bies>
Created object: O87'unsuccessful attempt by'
Uncreated object: O87'unsuccessful attempt by'
[Constructing plural of before rules as before ruleses]
(1) Reading plural of <before rules> as <before ruleses>
(1) Setting plural of <before rules> as <before ruleses>
Created object: O88'before rules'
Uncreated object: O88'before rules'
[Constructing plural of instead rules as instead ruleses]
(1) Reading plural of <instead rules> as <instead ruleses>
(1) Setting plural of <instead rules> as <instead ruleses>
Created object: O89'instead rules'
Uncreated object: O89'instead rules'
[Constructing plural of check rules as check ruleses]
(1) Reading plural of <check rules> as <check ruleses>
(1) Setting plural of <check rules> as <check ruleses>
Created object: O90'check rules'
Uncreated object: O90'check rules'
[Constructing plural of carry out rules as carry out ruleses]
(1) Reading plural of <carry out rules> as <carry out ruleses>
(1) Setting plural of <carry out rules> as <carry out ruleses>
Created object: O91'carry out rules'
Uncreated object: O91'carry out rules'
[Constructing plural of after rules as after ruleses]
(1) Reading plural of <after rules> as <after ruleses>
(1) Setting plural of <after rules> as <after ruleses>
Created object: O92'after rules'
Uncreated object: O92'after rules'
[Constructing plural of report rules as report ruleses]
(1) Reading plural of <report rules> as <report ruleses>
(1) Setting plural of <report rules> as <report ruleses>
Created object: O93'report rules'
Uncreated object: O93'report rules'
[Constructing plural of does the player mean rules as does the player mean ruleses]
(1) Reading plural of <does the player mean rules> as <does the player mean ruleses>
(1) Setting plural of <does the player mean rules> as <does the player mean ruleses>
Created object: O94'does the player mean rules'
Uncreated object: O94'does the player mean rules'
[Constructing plural of entire game as entire games]
(1) Reading plural of <entire game> as <entire games>
(1) Setting plural of <entire game> as <entire games>
Created object: O95'entire game'
Uncreated object: O95'entire game'
Created non-library quantity: Quantity Q41_entire_game believed constant 'entire game' = SCENE_TY-KOV

YYZ a scene can be recurring or non-recurring
        node:SENTENCE_NT  <a scene can be recurring or non-recurring>
            node:VERB_NT  <can be> (CANBE_VB)
            node:NOUNPHRASE_NT  <scene> (indefinite)
            node:NOUNPHRASE_NT  <recurring or non-recurring> (no article)

    Checking new either/or name recurring: NULL-PROPERTY (count 2)
    Meaning as type: (A)'recurring'/UNKNOWN_TY/UNKNOWN_TY
    Checking new antonym non-recurring
    Meaning as type: (A)'non-recurring'/UNKNOWN_TY/UNKNOWN_TY
Created property: p52_recurring (ubyi6 = 0)
Created adjectival phrase: A62'recurring'
    Allowing SCENE_TY-KOV to provide 'recurring' - CONDITION_MTY -> p52_recurring
Created property: p53_non_recurring (ubyi6 = 0)
Created adjectival phrase: A63'non-recurring'
    Allowing SCENE_TY-KOV to provide 'non-recurring' - CONDITION_MTY -> p53_non_recurring
Created activity: printing the name of something
Created activity: printing the plural name of something
Created activity: printing a number of something
Created activity: printing room description details of something
Created activity: listing contents of something
Created activity: grouping together something
Created activity: writing a paragraph about something
Created activity: listing nondescript items of something
Created activity: printing the name of a dark room
Created activity: printing the description of a dark room
Created activity: printing the announcement of darkness
Created activity: printing the announcement of light
Created activity: printing a refusal to act in the dark
Created activity: constructing the status line
Created activity: printing the banner text
Created activity: reading a command
Created activity: deciding the scope of something
Created activity: deciding the concealed possessions of something
Created activity: deciding whether all includes something
Created activity: clarifying the parser's choice of something
Created activity: asking which do you mean
Created activity: printing a parser error
Created activity: supplying a missing noun
Created activity: supplying a missing second noun
Created activity: implicitly taking something
Created activity: starting the virtual machine
Created activity: amusing a victorious player
Created activity: printing the player's obituary
Created activity: handling the final question
Created activity: printing the locale description of something
[Constructing plural of locale paragraph count as locale paragraph counts]
(1) Reading plural of <locale paragraph count> as <locale paragraph counts>
(1) Setting plural of <locale paragraph count> as <locale paragraph counts>
Created object: O96'locale paragraph count'
Uncreated object: O96'locale paragraph count'
Created non-library quantity: Quantity Q42_locale_paragraph_count believed variable 'locale paragraph count' = NUMBER_TY-KOV

Created activity: choosing notable locale objects of something
Created activity: printing a locale paragraph about something
Created action: taking inventory
Created action: taking
Created action: removing it from
Created action: dropping
Created action: putting it on
Created action: inserting it into
Created action: eating
Created action: going
Created action: entering
Created action: exiting
Created action: getting off
Created action: looking
Created action: examining
Created action: looking under
Created action: searching
Created action: consulting it about
Created action: locking it with
Created action: unlocking it with
Created action: switching on
Created action: switching off
Created action: opening
Created action: closing
Created action: wearing
Created action: taking off
Created action: giving it to
Created action: showing it to
Created action: waking
Created action: throwing it at
Created action: attacking
Created action: kissing
Created action: answering it that
Created action: telling it about
Created action: asking it about
Created action: asking it for
Created action: waiting
Created action: touching
Created action: waving
Created action: pulling
Created action: pushing
Created action: turning
Created action: pushing it to
Created action: squeezing
Created action: saying yes
Created action: saying no
Created action: burning
Created action: waking up
Created action: thinking
Created action: smelling
Created action: listening to
Created action: tasting
Created action: cutting
Created action: jumping
Created action: tying it to
Created action: drinking
Created action: saying sorry
Created action: swearing obscenely
Created action: swearing mildly
Created action: swinging
Created action: rubbing
Created action: setting it to
Created action: waving hands
Created action: buying
Created action: singing
Created action: climbing
Created action: sleeping
Created action: quitting the game
Created action: saving the game
Created action: restoring the game
Created action: restarting the game
Created action: verifying the story file
Created action: switching the story transcript on
Created action: switching the story transcript off
Created action: requesting the story file version
Created action: requesting the score
Created action: preferring abbreviated room descriptions
Created action: preferring unabbreviated room descriptions
Created action: preferring sometimes abbreviated room descriptions
Created action: switching score notification on
Created action: switching score notification off
Created action: requesting the pronoun meanings
[Constructing plural of pronoun reference object as pronoun reference objects]
(1) Reading plural of <pronoun reference object> as <pronoun reference objects>
(1) Setting plural of <pronoun reference object> as <pronoun reference objects>
Created object: O97'pronoun reference object'
Uncreated object: O97'pronoun reference object'
Created non-library quantity: Quantity Q43_pronoun_reference_object believed variable 'pronoun reference object' = OBJECT_TY-KOV

[Constructing plural of library message action as library message actions]
(1) Reading plural of <library message action> as <library message actions>
(1) Setting plural of <library message action> as <library message actions>
Created object: O98'library message action'
Uncreated object: O98'library message action'
Created non-library quantity: Quantity Q44_library_message_action believed variable 'library message action' = ACTION_NAME_TY-KOV

[Constructing plural of library message number as library message numbers]
(1) Reading plural of <library message number> as <library message numbers>
(1) Setting plural of <library message number> as <library message numbers>
Created object: O99'library message number'
Uncreated object: O99'library message number'
Created non-library quantity: Quantity Q45_library_message_number believed variable 'library message number' = NUMBER_TY-KOV

[Constructing plural of library message amount as library message amounts]
(1) Reading plural of <library message amount> as <library message amounts>
(1) Setting plural of <library message amount> as <library message amounts>
Created object: O100'library message amount'
Uncreated object: O100'library message amount'
Created non-library quantity: Quantity Q46_library_message_amount believed variable 'library message amount' = NUMBER_TY-KOV

[Constructing plural of library message object as library message objects]
(1) Reading plural of <library message object> as <library message objects>
(1) Setting plural of <library message object> as <library message objects>
Created object: O101'library message object'
Uncreated object: O101'library message object'
Created non-library quantity: Quantity Q47_library_message_object believed variable 'library message object' = OBJECT_TY-KOV

[Constructing plural of library message actor as library message actors]
(1) Reading plural of <library message actor> as <library message actors>
(1) Setting plural of <library message actor> as <library message actors>
Created object: O102'library message actor'
Uncreated object: O102'library message actor'
Created non-library quantity: Quantity Q48_library_message_actor believed variable 'library message actor' = OBJECT_TY-KOV

[Constructing plural of second library message object as second library message objects]
(1) Reading plural of <second library message object> as <second library message objects>
(1) Setting plural of <second library message object> as <second library message objects>
Created object: O103'second library message object'
Uncreated object: O103'second library message object'
Created non-library quantity: Quantity Q49_second_library_message_o believed variable 'second library message object' = OBJECT_TY-KOV

[Constructing plural of gate as gates]
(1) Reading plural of <gate> as <gates>
(1) Setting plural of <gate> as <gates>
Created object: O104'gate'
Setting kind of O104'gate' to K1'room'
[Changed subject of sentences to O104'gate']
[Changed object of sentences to O104'gate']
[Constructing plural of monk as monks]
(1) Reading plural of <monk> as <monks>
(1) Setting plural of <monk> as <monks>
Created object: O105'monk'
Setting kind of O105'monk' to K23'man'
[Changed subject of sentences to O105'monk']
[Changed object of sentences to O105'monk']
[Constructing plural of bell as bells]
(1) Reading plural of <bell> as <bells>
(1) Setting plural of <bell> as <bells>
Created object: O106'bell'
[Changed subject of sentences to O106'bell']
[Changed object of sentences to O106'bell']
Created action: ringing
Created action: talking to


-----------------------------------------------------
Phase VI ... All objects and properties now created
-----------------------------------------------------

K0   K1'room'   K2'thing'   K3'direction'
K4'door'   K5'container'   K6'supporter'   K7'backdrop'
K8'person'   K9'region'   O10'north'   O11'northeast'
O12'northwest'   O13'south'   O14'southeast'   O15'southwest'
O16'east'   O17'west'   O18'up'   O19'down'
O20'inside'   O21'outside'   O22'yourself'   K23'man'
K24'woman'   K25'animal'   K26'device'   K27'vehicle'
K28'player's holdall'   O104'gate'   O105'monk'   O106'bell'


'description' - TEXT_TY-KOV -> p0_description
'printed name' - TEXT_TY-KOV -> p1_printed_name
'map region' - OBJECT_TY-KOV -> p2_map_region
'indefinite article' - TEXT_TY-KOV -> p3_indefinite_article
'initial appearance' - TEXT_TY-KOV -> p4_initial_appearance
'printed plural name' - TEXT_TY-KOV -> p5_printed_plural_name
'opposite' - OBJECT_TY-K3'direction'-KOV -> p6_opposite
'other side' - OBJECT_TY-KOV -> p7_other_side
'carrying capacity' - NUMBER_TY-KOV -> p8_carrying_capacity
'matching key' - OBJECT_TY-KOV -> with_key
'privately-named' - CONDITION_MTY/~'publically-named' -> p10_privately_named
'publically-named' - CONDITION_MTY/~'privately-named' -> p11_publically_named
'lighted' - CONDITION_MTY/~'dark' -> p12_lighted
'dark' - CONDITION_MTY/~'lighted' -> p13_dark
'visited' - CONDITION_MTY/~'unvisited' -> p14_visited
'unvisited' - CONDITION_MTY/~'visited' -> p15_unvisited
'lit' - CONDITION_MTY/~'unlit' -> p16_lit
'unlit' - CONDITION_MTY/~'lit' -> p17_unlit
'edible' - CONDITION_MTY/~'inedible' -> p18_edible
'inedible' - CONDITION_MTY/~'edible' -> p19_inedible
'fixed in place' - CONDITION_MTY/~'portable' -> p20_fixed_in_place
'portable' - CONDITION_MTY/~'fixed in place' -> p21_portable
'scenery' - CONDITION_MTY -> p22_scenery
'wearable' - CONDITION_MTY -> p23_wearable
'pushable between rooms' - CONDITION_MTY -> p24_pushable_between_rooms
'handled' - CONDITION_MTY -> p25_handled
'initially carried' - CONDITION_MTY -> p26_initially_carried
'plural-named' - CONDITION_MTY/~'singular-named' -> p27_plural_named
'singular-named' - CONDITION_MTY/~'plural-named' -> p28_singular_named
'proper-named' - CONDITION_MTY/~'improper-named' -> p29_proper_named
'improper-named' - CONDITION_MTY/~'proper-named' -> p30_improper_named
'described' - CONDITION_MTY/~'undescribed' -> p31_described
'undescribed' - CONDITION_MTY/~'described' -> p32_undescribed
'marked for listing' - CONDITION_MTY/~'unmarked for listing' -> p33_marked_for_listing
'unmarked for listing' - CONDITION_MTY/~'marked for listing' -> p34_unmarked_for_listing
'mentioned' - CONDITION_MTY/~'unmentioned' -> p35_mentioned
'unmentioned' - CONDITION_MTY/~'mentioned' -> p36_unmentioned
'enterable' - CONDITION_MTY -> p37_enterable
'opaque' - CONDITION_MTY/~'transparent' -> p38_opaque
'transparent' - CONDITION_MTY/~'opaque' -> p39_transparent
'open' - CONDITION_MTY/~'closed' -> p40_open
'closed' - CONDITION_MTY/~'open' -> p41_closed
'openable' - CONDITION_MTY/~'unopenable' -> p42_openable
'unopenable' - CONDITION_MTY/~'openable' -> p43_unopenable
'lockable' - CONDITION_MTY -> p44_lockable
'locked' - CONDITION_MTY/~'unlocked' -> p45_locked
'unlocked' - CONDITION_MTY/~'locked' -> p46_unlocked
'female' - CONDITION_MTY/~'male' -> p47_female
'male' - CONDITION_MTY/~'female' -> p48_male
'neuter' - CONDITION_MTY -> p49_neuter
'switched on' - CONDITION_MTY/~'switched off' -> p50_switched_on
'switched off' - CONDITION_MTY/~'switched on' -> p51_switched_off
'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
'non-recurring' - CONDITION_MTY/~'recurring' -> p53_non_recurring


-----------------------------------------------------
Phase VII ... Second pass through assertions
-----------------------------------------------------


start of assertion traverse (asterisked areas only):
[Changed subject of sentences to K1'room']
[Changed object of sentences to K1'room']
[Changed subject of sentences to K2'thing']
[Changed object of sentences to K2'thing']
[Changed subject of sentences to K3'direction']
[Changed object of sentences to K3'direction']
[Changed subject of sentences to K4'door']
[Changed object of sentences to K4'door']
[Changed subject of sentences to K5'container']
[Changed object of sentences to K5'container']
[Changed subject of sentences to K6'supporter']
[Changed object of sentences to K6'supporter']
[Changed subject of sentences to K7'backdrop']
[Changed object of sentences to K7'backdrop']
[Changed subject of sentences to K8'person']
[Changed object of sentences to K8'person']
[Changed subject of sentences to K9'region']
[Changed object of sentences to K9'region']
Created property: p54_specification (ubyi6 = 0)
[Changed subject of sentences to K1'room']
[Changed object of sentences to K1'room']
[Changed subject of sentences to K2'thing']
[Changed object of sentences to K2'thing']
Forming implication for K2'thing': type (A)'scenery'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:scenery>) implies
          node:ADJECTIVE_NT  <fixed in place>
[Changed subject of sentences to K3'direction']
[Changed object of sentences to K3'direction']
Setting kind of O10'north' to K3'direction'
Setting kind of O11'northeast' to K3'direction'
Setting kind of O12'northwest' to K3'direction'
Setting kind of O13'south' to K3'direction'
Setting kind of O14'southeast' to K3'direction'
Setting kind of O15'southwest' to K3'direction'
Setting kind of O16'east' to K3'direction'
Setting kind of O17'west' to K3'direction'
Setting kind of O18'up' to K3'direction'
Setting kind of O19'down' to K3'direction'
Setting kind of O20'inside' to K3'direction'
Setting kind of O21'outside' to K3'direction'
[Changed subject of sentences to K4'door']
[Changed object of sentences to K4'door']
[Changed subject of sentences to K5'container']
[Changed object of sentences to K5'container']
[Changed subject of sentences to K6'supporter']
[Changed object of sentences to K6'supporter']
[Changed subject of sentences to K4'door']
[Changed object of sentences to K4'door']
[Changed subject of sentences to K5'container']
[Changed object of sentences to K5'container']
[Changed subject of sentences to K4'door']
[Changed object of sentences to K4'door']
Forming implication for K4'door': type (A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K4'door') implies
          node:ADJECTIVE_NT  <lockable>
Forming implication for K4'door': type (A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K4'door') implies
          node:ADJECTIVE_NT  <closed>
Forming implication for K4'door': type (A)'lockable'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:lockable>)(kind K4'door') implies
          node:ADJECTIVE_NT  <openable>
[Changed subject of sentences to K5'container']
[Changed object of sentences to K5'container']
Forming implication for K5'container': type (A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K5'container') implies
          node:ADJECTIVE_NT  <lockable>
Forming implication for K5'container': type (A)'locked'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:locked>)(kind K5'container') implies
          node:ADJECTIVE_NT  <closed>
Forming implication for K5'container': type (A)'lockable'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:lockable>)(kind K5'container') implies
          node:ADJECTIVE_NT  <openable>
[Changed subject of sentences to K7'backdrop']
[Changed object of sentences to K7'backdrop']
[Changed subject of sentences to K8'person']
[Changed object of sentences to K8'person']
Setting kind of O22'yourself' to K8'person'
[Changed subject of sentences to O22'yourself']
[Changed object of sentences to O22'yourself']
[Changed subject of sentences to K23'man']
[Changed object of sentences to K23'man']
[Changed subject of sentences to K24'woman']
[Changed object of sentences to K24'woman']
[Changed subject of sentences to K25'animal']
[Changed object of sentences to K25'animal']
[Changed subject of sentences to K26'device']
[Changed object of sentences to K26'device']
[Changed subject of sentences to K27'vehicle']
[Changed object of sentences to K27'vehicle']
[Changed subject of sentences to K28'player's holdall']
[Changed object of sentences to K28'player's holdall']
Translated quantity: Quantity player believed variable 'player' = OBJECT_TY-K8'person'-KOV
 as player
Translated quantity: Quantity real_location believed variable 'location' = OBJECT_TY-KOV
 as real_location
Translated quantity: Quantity score believed variable 'score' = NUMBER_TY-KOV
 as score
Translated quantity: Quantity last_score believed variable 'last notified score' = NUMBER_TY-KOV
 as last_score
Translated quantity: Quantity MAX_SCORE believed variable 'maximum score' = NUMBER_TY-KOV
 as MAX_SCORE
Translated quantity: Quantity turns believed variable 'turn count' = NUMBER_TY-KOV
 as turns
Translated quantity: Quantity the_time believed variable 'time of day' = TIME_TY-KOV
 as the_time
Translated quantity: Quantity noun believed variable 'noun' = OBJECT_TY-KOV
 as noun
Translated quantity: Quantity second believed variable 'second noun' = OBJECT_TY-KOV
 as second
Translated quantity: Quantity actor believed variable 'person asked' = OBJECT_TY-KOV
 as actor
Translated quantity: Quantity reason_the_action_failed believed variable 'reason the action failed' = RULE_TY-KOV
 as reason_the_action_failed
Translated quantity: Quantity self believed variable 'item described' = OBJECT_TY-KOV
 as self
Translated quantity: Quantity actor believed variable 'person reaching' = OBJECT_TY-KOV
 as actor
Translated quantity: Quantity parameter_object believed variable 'container in question' = OBJECT_TY-KOV
 as parameter_object
Translated quantity: Quantity parameter_object believed variable 'supporter in question' = OBJECT_TY-KOV
 as parameter_object
Translated quantity: Quantity particular_possession believed variable 'particular possession' = OBJECT_TY-K2'thing'-KOV
 as particular_possession
Translated quantity: Quantity players_command believed variable 'player's command' = SNIPPET_TY-KOV
 as players_command
Translated quantity: Quantity matched_text believed variable 'matched text' = SNIPPET_TY-KOV
 as matched_text
Translated quantity: Quantity parsed_number believed variable 'topic understood' = SNIPPET_TY-KOV
 as parsed_number
Translated quantity: Quantity parsed_number believed variable 'truth state understood' = TRUTH_STATE_TY-KOV
 as parsed_number
Translated quantity: Quantity multiple_object_item believed variable 'current item from the multiple object list' = OBJECT_TY-KOV
 as multiple_object_item
Translated quantity: Quantity left_hand_status_line believed variable 'left hand status line' = TEXT_TY-KOV
 as left_hand_status_line
Translated quantity: Quantity right_hand_status_line believed variable 'right hand status line' = TEXT_TY-KOV
 as right_hand_status_line
Translated quantity: Quantity listing_size believed variable 'listing group size' = NUMBER_TY-KOV
 as listing_size
Translated quantity: Quantity Story believed variable 'story title' = TEXT_TY-KOV
 as Story
Translated quantity: Quantity subst__v believed variable 'substitution-variable' = OBJECT_TY-KOV
 as subst__v
Translated quantity: Quantity nothing believed variable 'i6-nothing-constant' = OBJECT_TY-KOV
 as nothing
Translated quantity: Quantity nothing believed variable 'i6-varying-global' = OBJECT_TY-KOV
 as nothing
Translated quantity: Quantity move_pushing believed variable 'item-pushed-between-rooms' = OBJECT_TY-KOV
 as move_pushing
Translated quantity: Quantity actor_location believed variable 'actor-location' = OBJECT_TY-KOV
 as actor_location
Translated quantity: Quantity parameter_object believed variable 'parameter-object' = OBJECT_TY-KOV
 as parameter_object
Created non-library quantity: Quantity Q50_actor believed variable 'actor' = OBJECT_TY-K8'person'-KOV

Created non-library quantity: Quantity Q51_action_in_world believed variable 'action in world' = TRUTH_STATE_TY-KOV

Created non-library quantity: Quantity Q52_action_keeping_silent believed variable 'action keeping silent' = TRUTH_STATE_TY-KOV

Created non-library quantity: Quantity Q53_specific_check_rulebook believed variable 'specific check rulebook' = RULEBOOK_TY-KOV

Created non-library quantity: Quantity Q54_specific_carry_out_ruleb believed variable 'specific carry out rulebook' = RULEBOOK_TY-KOV

Created non-library quantity: Quantity Q55_specific_report_rulebook believed variable 'specific report rulebook' = RULEBOOK_TY-KOV

Created non-library quantity: Quantity Q56_within_the_player_s_sigh believed variable 'within the player's sight' = TRUTH_STATE_TY-KOV

EORP_KADJ_assert trying to assert 'non-recurring' - CONDITION_MTY/~'recurring' -> p53_non_recurring for TS (G)VALUE_MTY/CONSTANT_STY-SCENE_TY-KOV
Translated action: taking inventory as Inv
Translated action: taking as Take
Translated action: removing it from as Remove
Translated action: dropping as Drop
Translated action: putting it on as PutOn
Translated action: inserting it into as Insert
Translated action: eating as Eat
Translated action: going as Go
Created non-library quantity: Quantity Q57_room_gone_from believed variable 'room gone from' = OBJECT_TY-K1'room'-KOV

Created action variable for going: room gone from (OBJECT_TY-K1'room'-KOV/<null>)
Match with text: from + TS
Created non-library quantity: Quantity Q58_room_gone_to believed variable 'room gone to' = OBJECT_TY-KOV

Created action variable for going: room gone to (OBJECT_TY-KOV/<null>)
Match with text: to + TS
Created non-library quantity: Quantity Q59_door_gone_through believed variable 'door gone through' = OBJECT_TY-KOV

Created action variable for going: door gone through (OBJECT_TY-KOV/<null>)
Match with text: through + TS
Created non-library quantity: Quantity Q60_vehicle_gone_by believed variable 'vehicle gone by' = OBJECT_TY-KOV

Created action variable for going: vehicle gone by (OBJECT_TY-KOV/<null>)
Match with text: by + TS
Created non-library quantity: Quantity Q61_thing_gone_with believed variable 'thing gone with' = OBJECT_TY-KOV

Created action variable for going: thing gone with (OBJECT_TY-KOV/<null>)
Match with text: with + TS
Translated action: entering as Enter
Translated action: exiting as Exit
Created non-library quantity: Quantity Q62_container_exited_from believed variable 'container exited from' = OBJECT_TY-KOV

Created action variable for exiting: container exited from (OBJECT_TY-KOV/<null>)
Translated action: getting off as GetOff
Translated action: looking as Look
Created non-library quantity: Quantity Q63_room_describing_action believed variable 'room-describing action' = ACTION_NAME_TY-KOV

Created action variable for looking: room-describing action (ACTION_NAME_TY-KOV/<null>)
Created non-library quantity: Quantity Q64_abbreviated_form_allowed believed variable 'abbreviated form allowed' = TRUTH_STATE_TY-KOV

Created action variable for looking: abbreviated form allowed (TRUTH_STATE_TY-KOV/<null>)
Created non-library quantity: Quantity Q65_visibility_level_count believed variable 'visibility level count' = NUMBER_TY-KOV

Created action variable for looking: visibility level count (NUMBER_TY-KOV/<null>)
Created non-library quantity: Quantity Q66_visibility_ceiling believed variable 'visibility ceiling' = OBJECT_TY-KOV

Created action variable for looking: visibility ceiling (OBJECT_TY-KOV/<null>)
Translated action: examining as Examine
Translated action: looking under as LookUnder
Translated action: searching as Search
Translated action: consulting it about as Consult
Translated action: locking it with as Lock
Translated action: unlocking it with as Unlock
Translated action: switching on as SwitchOn
Translated action: switching off as SwitchOff
Translated action: opening as Open
Translated action: closing as Close
Translated action: wearing as Wear
Translated action: taking off as Disrobe
Translated action: giving it to as Give
Translated action: showing it to as Show
Translated action: waking as WakeOther
Translated action: throwing it at as ThrowAt
Translated action: attacking as Attack
Translated action: kissing as Kiss
Translated action: answering it that as Answer
Translated action: telling it about as Tell
Translated action: asking it about as Ask
Translated action: asking it for as AskFor
Translated action: waiting as Wait
Translated action: touching as Touch
Translated action: waving as Wave
Translated action: pulling as Pull
Translated action: pushing as Push
Translated action: turning as Turn
Translated action: pushing it to as PushDir
Translated action: squeezing as Squeeze
Translated action: saying yes as Yes
Translated action: saying no as No
Translated action: burning as Burn
Translated action: waking up as Wake
Translated action: thinking as Think
Translated action: smelling as Smell
Translated action: listening to as Listen
Translated action: tasting as Taste
Translated action: cutting as Cut
Translated action: jumping as Jump
Translated action: tying it to as Tie
Translated action: drinking as Drink
Translated action: saying sorry as Sorry
Translated action: swearing obscenely as Strong
Translated action: swearing mildly as Mild
Translated action: swinging as Swing
Translated action: rubbing as Rub
Translated action: setting it to as SetTo
Translated action: waving hands as WaveHands
Translated action: buying as Buy
Translated action: singing as Sing
Translated action: climbing as Climb
Translated action: sleeping as Sleep
Translated action: quitting the game as Quit
Translated action: saving the game as Save
Translated action: restoring the game as Restore
Translated action: restarting the game as Restart
Translated action: verifying the story file as Verify
Translated action: switching the story transcript on as ScriptOn
Translated action: switching the story transcript off as ScriptOff
Translated action: requesting the story file version as Version
Translated action: requesting the score as Score
Translated action: preferring abbreviated room descriptions as LMode3
Translated action: preferring unabbreviated room descriptions as LMode2
Translated action: preferring sometimes abbreviated room descriptions as LMode1
Translated action: switching score notification on as NotifyOn
Translated action: switching score notification off as NotifyOff
Translated action: requesting the pronoun meanings as Pronouns
Translated quantity: Quantity pronoun_obj believed variable 'pronoun reference object' = OBJECT_TY-KOV
 as pronoun_obj
Translated quantity: Quantity lm_act believed variable 'library message action' = ACTION_NAME_TY-KOV
 as lm_act
Translated quantity: Quantity lm_n believed variable 'library message number' = NUMBER_TY-KOV
 as lm_n
Translated quantity: Quantity lm_o believed variable 'library message amount' = NUMBER_TY-KOV
 as lm_o
Translated quantity: Quantity lm_o believed variable 'library message object' = OBJECT_TY-KOV
 as lm_o
Translated quantity: Quantity actor believed variable 'library message actor' = OBJECT_TY-KOV
 as actor
Translated quantity: Quantity lm_o2 believed variable 'second library message object' = OBJECT_TY-KOV
 as lm_o2
Set initial value of Quantity Story believed variable 'story title' = TEXT_TY-KOV
 to (A)'"Castalia"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Set initial value of Quantity Q29_story_author believed variable 'story author' = TEXT_TY-KOV
 to (A)'"Stephen Rowley"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Setting kind of O104'gate' to K1'room'
[Changed subject of sentences to O104'gate']
[Changed object of sentences to O104'gate']
[Changed subject of sentences to O105'monk']
[Changed object of sentences to O105'monk']
[Changed subject of sentences to O106'bell']
[Changed object of sentences to O106'bell']


-----------------------------------------------------
Phase VIII ... Making the model world
-----------------------------------------------------

Considering implication of K2'thing' for O22'yourself':
(A)'scenery'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:scenery>) =>         node:ADJECTIVE_NT  <fixed in place>
 (certainty 1; changed state 1)
Possession marker has (certainty 1; possessed state 0)
FAIL: take no action
Considering implication of K2'thing' for O105'monk':
(A)'scenery'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:scenery>) =>         node:ADJECTIVE_NT  <fixed in place>
 (certainty 1; changed state 1)
Possession marker has (certainty 1; possessed state 0)
FAIL: take no action
Setting kind of O106'bell' to K2'thing'
Considering implication of K2'thing' for O106'bell':
(A)'scenery'/CONDITION_MTY/DESCRIPTION_STY(properties:A<adj:scenery>) =>         node:ADJECTIVE_NT  <fixed in place>
 (certainty 1; changed state 1)
Possession marker has (certainty 1; possessed state 0)
FAIL: take no action
IOS for O106'bell' needed at         node:SENTENCE_NT  <a bell is here>
            node:VERB_NT  <is> (ASSERT_VB)
            node:NOUNPHRASE_NT  <bell> (indefinite) refers:O106'bell'
            node:RELATIONSHIP_NT  <here> (PARENTAGE_HERE_INF)

IOS is O104'gate' at         node:SENTENCE_NT  <a man called a monk is in the gate>
            node:VERB_NT  <is> (ASSERT_VB)
            node:NOUNPHRASE_NT  <monk> refers:O105'monk'
            node:RELATIONSHIP_NT  <in> (<unknown-inference-type>)
                node:NOUNPHRASE_NT  <the gate> (no article) refers:O104'gate'

IOS for O106'bell' resolved to O104'gate'
Deducing 'here' as parent of O106'bell' means O104'gate'
K1'room' has creator text <room>
Word 1755 <room> ex <room>
K2'thing' has creator text <thing>
Word 1761 <thing> ex <thing>
K3'direction' has creator text <direction>
Word 1767 <direction> ex <direction>
K4'door' has creator text <door>
Word 1773 <door> ex <door>
K5'container' has creator text <container>
Word 1781 <container> ex <container>
K6'supporter' has creator text <supporter>
Word 1789 <supporter> ex <supporter>
K7'backdrop' has creator text <backdrop>
Word 1797 <backdrop> ex <backdrop>
K8'person' has creator text <person>
Word 1819 <person> ex <person>
K9'region' has creator text <region>
Word 1827 <region> ex <region>
O10'north' has creator text <north>
Word 2291 <north> ex <north>
O11'northeast' has creator text <northeast>
Word 2297 <northeast> ex <northeast>
O12'northwest' has creator text <northwest>
Word 2303 <northwest> ex <northwest>
O13'south' has creator text <south>
Word 2309 <south> ex <south>
O14'southeast' has creator text <southeast>
Word 2315 <southeast> ex <southeast>
O15'southwest' has creator text <southwest>
Word 2321 <southwest> ex <southwest>
O16'east' has creator text <east>
Word 2327 <east> ex <east>
O17'west' has creator text <west>
Word 2333 <west> ex <west>
O18'up' has creator text <up>
Word 2339 <up> ex <up>
O19'down' has creator text <down>
Word 2345 <down> ex <down>
O20'inside' has creator text <inside>
Word 2351 <inside> ex <inside>
O21'outside' has creator text <outside>
Word 2357 <outside> ex <outside>
O22'yourself' has creator text <yourself>
Word 3072 <yourself> ex <yourself>
K23'man' has creator text <man>
Word 3134 <man> ex <man>
K24'woman' has creator text <woman>
Word 3161 <woman> ex <woman>
K25'animal' has creator text <animal>
Word 3188 <animal> ex <animal>
K26'device' has creator text <device>
Word 3209 <device> ex <device>
K27'vehicle' has creator text <vehicle>
Word 3256 <vehicle> ex <vehicle>
K28'player's holdall' has creator text <player's holdall>
Word 3293 <player's> ex <player's>
Word 3294 <holdall> ex <holdall>
O104'gate' has creator text <gate>
Word 22 <gate> ex <gate>
O105'monk' has creator text <monk>
Word 32 <monk> ex <monk>
O106'bell' has creator text <bell>
Word 39 <bell> ex <bell>
Grafting O105'monk' to be child of O104'gate'
Grafting O106'bell' to be child of O104'gate'
K0
K1'room'
K2'thing'
K3'direction'
K4'door'
K5'container'
K6'supporter'
K7'backdrop'
K8'person'
K9'region'
O10'north'
O11'northeast'
O12'northwest'
O13'south'
O14'southeast'
O15'southwest'
O16'east'
O17'west'
O18'up'
O19'down'
O20'inside'
O21'outside'
O22'yourself'
K23'man'
K24'woman'
K25'animal'
K26'device'
K27'vehicle'
K28'player's holdall'
O104'gate'
  O105'monk'
  O106'bell'


-----------------------------------------------------
Phase IX ... Tables and grammar
-----------------------------------------------------

Cell in col 0 has type (A)'"RESTART"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Table column 'final question wording'/TEXT_TY-KOV has type TEXT_TY-KOV, according to {T0_final_question_options}
Cell in col 0 has type (A)'"RESTORE a saved game"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Cell in col 0 has type (A)'"see some suggestions for AMUSING things to do"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Cell in col 0 has type (A)'"QUIT"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Cell in col 1 has type (A)'false'/VALUE_MTY/CONSTANT_STY-TRUTH_STATE_TY-KOV
Table column 'only if victorious'/TRUTH_STATE_TY-KOV has type TRUTH_STATE_TY-KOV, according to {T0_final_question_options}
Cell in col 1 has type (A)'false'/VALUE_MTY/CONSTANT_STY-TRUTH_STATE_TY-KOV
Cell in col 1 has type (A)'true'/VALUE_MTY/CONSTANT_STY-TRUTH_STATE_TY-KOV
Cell in col 1 has type (A)'false'/VALUE_MTY/CONSTANT_STY-TRUTH_STATE_TY-KOV
Cell in col 1 has type (A)'false'/VALUE_MTY/CONSTANT_STY-TRUTH_STATE_TY-KOV
Cell in col 2 has type (A)'"restart"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Cell in col 2 has type (A)'"restore"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Cell in col 2 has type (A)'"amusing"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Cell in col 2 has type (A)'"quit"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Cell in col 2 has type (A)'"undo"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Cell in col 3 has type (A)'immediately restart the vm rule'/VALUE_MTY/CONSTANT_STY-RULE_TY-KOV
Table column 'final response rule'/RULE_TY-KOV has type RULE_TY-KOV, according to {T0_final_question_options}
Cell in col 3 has type (A)'immediately restore saved game rule'/VALUE_MTY/CONSTANT_STY-RULE_TY-KOV
Cell in col 3 has type (A)'immediately quit rule'/VALUE_MTY/CONSTANT_STY-RULE_TY-KOV
Cell in col 3 has type (A)'immediately undo rule'/VALUE_MTY/CONSTANT_STY-RULE_TY-KOV
Cell in col 4 has type (A)'amusing a victorious player'/VALUE_MTY/CONSTANT_STY-ACTIVITY_TY-KOV
Table column 'final response activity'/ACTIVITY_TY-KOV has type ACTIVITY_TY-KOV, according to {T0_final_question_options}
Table data is:
Column 0 'final question wording' kov TEXT_TY with data:
        node:NOUNPHRASE_NT  <final question wording> (no article)
            node:NOUNPHRASE_NT  <"RESTART"> (no article)
            node:NOUNPHRASE_NT  <"RESTORE a saved game"> (no article)
            node:NOUNPHRASE_NT  <"see some suggestions for AMUSING things to do"> (no article)
            node:NOUNPHRASE_NT  <"QUIT"> (no article)
            node:NOUNPHRASE_NT  <--> (no article)
Column 1 'only if victorious' kov TRUTH_STATE_TY with data:
        node:NOUNPHRASE_NT  <only if victorious> (no article)
            node:NOUNPHRASE_NT  <false> (no article)
            node:NOUNPHRASE_NT  <false> (no article)
            node:NOUNPHRASE_NT  <true> (no article)
            node:NOUNPHRASE_NT  <false> (no article)
            node:NOUNPHRASE_NT  <false> (no article)
Column 2 'topic' kov UNDERSTANDING_TY with data:
        node:NOUNPHRASE_NT  <topic> (no article)
            node:NOUNPHRASE_NT  <"restart"> (no article)
            node:NOUNPHRASE_NT  <"restore"> (no article)
            node:NOUNPHRASE_NT  <"amusing"> (no article)
            node:NOUNPHRASE_NT  <"quit"> (no article)
            node:NOUNPHRASE_NT  <"undo"> (no article)
Column 3 'final response rule' kov RULE_TY with data:
        node:NOUNPHRASE_NT  <final response rule> (no article)
            node:NOUNPHRASE_NT  <immediately restart the vm rule> (no article)
            node:NOUNPHRASE_NT  <immediately restore saved game rule> (no article)
            node:NOUNPHRASE_NT  <--> (no article)
            node:NOUNPHRASE_NT  <immediately quit rule> (no article)
            node:NOUNPHRASE_NT  <immediately undo rule> (no article)
Column 4 'final response activity' kov ACTIVITY_TY with data:
        node:NOUNPHRASE_NT  <final response activity> (no article)
            node:NOUNPHRASE_NT  <--> (no article)
            node:NOUNPHRASE_NT  <--> (no article)
            node:NOUNPHRASE_NT  <amusing a victorious player> (no article)
            node:NOUNPHRASE_NT  <--> (no article)
            node:NOUNPHRASE_NT  <--> (no article)
Table data is:
Column 0 'notable-object' kov OBJECT_TY with data:
        node:NOUNPHRASE_NT  <notable-object ( an object )> (no article)
            node:NOUNPHRASE_NT  <--> (no article)
Column 1 'locale description priority' kov NUMBER_TY with data:
        node:NOUNPHRASE_NT  <locale description priority ( a number )> (no article)
            node:NOUNPHRASE_NT  <--> (no article)


-----------------------------------------------------
Phase X ... Phrases and rules
-----------------------------------------------------

Lower case form: 008c0810-00000064-a
Upper case form: 0a44c68c-00000064-a
Lower case form: 008c6664-00000106-the
Upper case form: 0a44c6c0-00000106-the
Lower case form: 008c0d8c-000003a9-an
Upper case form: 0a44c7c4-000003a9-an
[1] subject NP: x such that: [ K2'thing'(x) ]
[1] object NP: (A)'player'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(player) conjunction: [ K2'thing'(x) ]
[1] VP conjunction: [ K2'thing'(x) ^ is-carried-by(x,(A)'player'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(player)) ]

result of sentence conversion for <something which is carried by the player>:
basic representation:               [ K2'thing'(x) ^ is-carried-by(x,(A)'player'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(player)) ]
simp_make_kinds_explicit:           [ K2'thing'(x) ^ is-carried-by(x,(A)'player'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(player)) ]
simp_turn_right_way_round:          [ K2'thing'(x) ^ carries((A)'player'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(player),x) ]
simp_reduce_predicates:             [ K2'thing'(x) ^ is((A)'player'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(player),{<schema: CarrierOf(*1)>:x}) ]

Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV
Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV
Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV
Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV
Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV
Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV
Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV
Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV
Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV
Calling on (A)c/CONDITION_MTY/DESCRIPTION_STY(kind K2'thing'); kov NULL-KOV


-----------------------------------------------------
Phase XI ... Code generation
-----------------------------------------------------

Compiling initial value of quantity: Quantity Story believed variable 'story title' = TEXT_TY-KOV

From initial value (A)'"Castalia"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Compiling initial value of quantity: Quantity Q29_story_author believed variable 'story author' = TEXT_TY-KOV

From initial value (A)'"Stephen Rowley"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Compiling initial value of quantity: Quantity player believed variable 'player' = OBJECT_TY-K8'person'-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-K8'person'-KOV
Compiling initial value of quantity: Quantity the_time believed variable 'time of day' = TIME_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TIME_TY-KOV
Compiling quantity declarations
Not declaring Quantity player believed variable 'player' = OBJECT_TY-K8'person'-KOV

Not declaring Quantity real_location believed variable 'location' = OBJECT_TY-KOV

Not declaring Quantity score believed variable 'score' = NUMBER_TY-KOV

Not declaring Quantity last_score believed variable 'last notified score' = NUMBER_TY-KOV

Not declaring Quantity MAX_SCORE believed variable 'maximum score' = NUMBER_TY-KOV

Not declaring Quantity turns believed variable 'turn count' = NUMBER_TY-KOV

Not declaring Quantity the_time believed variable 'time of day' = TIME_TY-KOV

Not declaring Quantity Q7_darkness_witnessed believed variable 'darkness witnessed' = TRUTH_STATE_TY-KOV

Not declaring Quantity noun believed variable 'noun' = OBJECT_TY-KOV

Not declaring Quantity second believed variable 'second noun' = OBJECT_TY-KOV

Not declaring Quantity actor believed variable 'person asked' = OBJECT_TY-KOV

Not declaring Quantity reason_the_action_failed believed variable 'reason the action failed' = RULE_TY-KOV

Not declaring Quantity self believed variable 'item described' = OBJECT_TY-KOV

Not declaring Quantity actor believed variable 'person reaching' = OBJECT_TY-KOV

Not declaring Quantity parameter_object believed variable 'container in question' = OBJECT_TY-KOV

Not declaring Quantity parameter_object believed variable 'supporter in question' = OBJECT_TY-KOV

Not declaring Quantity particular_possession believed variable 'particular possession' = OBJECT_TY-K2'thing'-KOV

Not declaring Quantity players_command believed variable 'player's command' = SNIPPET_TY-KOV

Not declaring Quantity matched_text believed variable 'matched text' = SNIPPET_TY-KOV

Not declaring Quantity parsed_number believed variable 'number understood' = NUMBER_TY-KOV

Not declaring Quantity parsed_number believed variable 'time understood' = TIME_TY-KOV

Not declaring Quantity parsed_number believed variable 'topic understood' = SNIPPET_TY-KOV

Not declaring Quantity parsed_number believed variable 'truth state understood' = TRUTH_STATE_TY-KOV

Not declaring Quantity multiple_object_item believed variable 'current item from the multiple object list' = OBJECT_TY-KOV

Not declaring Quantity Q24_command_prompt believed variable 'command prompt' = TEXT_TY-KOV

Not declaring Quantity left_hand_status_line believed variable 'left hand status line' = TEXT_TY-KOV

Not declaring Quantity right_hand_status_line believed variable 'right hand status line' = TEXT_TY-KOV

Not declaring Quantity listing_size believed variable 'listing group size' = NUMBER_TY-KOV

Not declaring Quantity Story believed variable 'story title' = TEXT_TY-KOV

Not declaring Quantity Q29_story_author believed variable 'story author' = TEXT_TY-KOV

Not declaring Quantity Q30_story_headline believed variable 'story headline' = TEXT_TY-KOV

Not declaring Quantity Q31_story_genre believed variable 'story genre' = TEXT_TY-KOV

Not declaring Quantity Q32_story_description believed variable 'story description' = TEXT_TY-KOV

Not declaring Quantity Q33_release_number believed variable 'release number' = NUMBER_TY-KOV

Not declaring Quantity Q34_story_creation_year believed variable 'story creation year' = NUMBER_TY-KOV

Not declaring Quantity subst__v believed variable 'substitution-variable' = OBJECT_TY-KOV

Not declaring Quantity nothing believed variable 'i6-nothing-constant' = OBJECT_TY-KOV

Not declaring Quantity nothing believed variable 'i6-varying-global' = OBJECT_TY-KOV

Not declaring Quantity move_pushing believed variable 'item-pushed-between-rooms' = OBJECT_TY-KOV

Not declaring Quantity actor_location believed variable 'actor-location' = OBJECT_TY-KOV

Not declaring Quantity parameter_object believed variable 'parameter-object' = OBJECT_TY-KOV

Declaring Quantity Q41_entire_game believed constant 'entire game' = SCENE_TY-KOV

Not declaring Quantity Q42_locale_paragraph_count believed variable 'locale paragraph count' = NUMBER_TY-KOV

Not declaring Quantity pronoun_obj believed variable 'pronoun reference object' = OBJECT_TY-KOV

Not declaring Quantity lm_act believed variable 'library message action' = ACTION_NAME_TY-KOV

Not declaring Quantity lm_n believed variable 'library message number' = NUMBER_TY-KOV

Not declaring Quantity lm_o believed variable 'library message amount' = NUMBER_TY-KOV

Not declaring Quantity lm_o believed variable 'library message object' = OBJECT_TY-KOV

Not declaring Quantity actor believed variable 'library message actor' = OBJECT_TY-KOV

Not declaring Quantity lm_o2 believed variable 'second library message object' = OBJECT_TY-KOV

Not declaring Quantity Q50_actor believed variable 'actor' = OBJECT_TY-K8'person'-KOV

Not declaring Quantity Q51_action_in_world believed variable 'action in world' = TRUTH_STATE_TY-KOV

Not declaring Quantity Q52_action_keeping_silent believed variable 'action keeping silent' = TRUTH_STATE_TY-KOV

Not declaring Quantity Q53_specific_check_rulebook believed variable 'specific check rulebook' = RULEBOOK_TY-KOV

Not declaring Quantity Q54_specific_carry_out_ruleb believed variable 'specific carry out rulebook' = RULEBOOK_TY-KOV

Not declaring Quantity Q55_specific_report_rulebook believed variable 'specific report rulebook' = RULEBOOK_TY-KOV

Not declaring Quantity Q56_within_the_player_s_sigh believed variable 'within the player's sight' = TRUTH_STATE_TY-KOV

Not declaring Quantity Q57_room_gone_from believed variable 'room gone from' = OBJECT_TY-K1'room'-KOV

Not declaring Quantity Q58_room_gone_to believed variable 'room gone to' = OBJECT_TY-KOV

Not declaring Quantity Q59_door_gone_through believed variable 'door gone through' = OBJECT_TY-KOV

Not declaring Quantity Q60_vehicle_gone_by believed variable 'vehicle gone by' = OBJECT_TY-KOV

Not declaring Quantity Q61_thing_gone_with believed variable 'thing gone with' = OBJECT_TY-KOV

Not declaring Quantity Q62_container_exited_from believed variable 'container exited from' = OBJECT_TY-KOV

Not declaring Quantity Q63_room_describing_action believed variable 'room-describing action' = ACTION_NAME_TY-KOV

Not declaring Quantity Q64_abbreviated_form_allowed believed variable 'abbreviated form allowed' = TRUTH_STATE_TY-KOV

Not declaring Quantity Q65_visibility_level_count believed variable 'visibility level count' = NUMBER_TY-KOV

Not declaring Quantity Q66_visibility_ceiling believed variable 'visibility ceiling' = OBJECT_TY-KOV

Compiling initial value of quantity: Quantity Q7_darkness_witnessed believed variable 'darkness witnessed' = TRUTH_STATE_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TRUTH_STATE_TY-KOV
Compiling initial value of quantity: Quantity Q24_command_prompt believed variable 'command prompt' = TEXT_TY-KOV

From initial value (A)'">"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Compiling initial value of quantity: Quantity Q29_story_author believed variable 'story author' = TEXT_TY-KOV

From initial value (A)'"Stephen Rowley"'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Compiling initial value of quantity: Quantity Q30_story_headline believed variable 'story headline' = TEXT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TEXT_TY-KOV
Compiling initial value of quantity: Quantity Q31_story_genre believed variable 'story genre' = TEXT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TEXT_TY-KOV
Compiling initial value of quantity: Quantity Q32_story_description believed variable 'story description' = TEXT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TEXT_TY-KOV
Compiling initial value of quantity: Quantity Q33_release_number believed variable 'release number' = NUMBER_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: NUMBER_TY-KOV
Compiling initial value of quantity: Quantity Q34_story_creation_year believed variable 'story creation year' = NUMBER_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: NUMBER_TY-KOV
Compiling initial value of quantity: Quantity Q42_locale_paragraph_count believed variable 'locale paragraph count' = NUMBER_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: NUMBER_TY-KOV
Compiling initial value of quantity: Quantity Q50_actor believed variable 'actor' = OBJECT_TY-K8'person'-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-K8'person'-KOV
Compiling initial value of quantity: Quantity Q51_action_in_world believed variable 'action in world' = TRUTH_STATE_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TRUTH_STATE_TY-KOV
Compiling initial value of quantity: Quantity Q52_action_keeping_silent believed variable 'action keeping silent' = TRUTH_STATE_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TRUTH_STATE_TY-KOV
Compiling initial value of quantity: Quantity Q53_specific_check_rulebook believed variable 'specific check rulebook' = RULEBOOK_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: RULEBOOK_TY-KOV
Compiling initial value of quantity: Quantity Q54_specific_carry_out_ruleb believed variable 'specific carry out rulebook' = RULEBOOK_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: RULEBOOK_TY-KOV
Compiling initial value of quantity: Quantity Q55_specific_report_rulebook believed variable 'specific report rulebook' = RULEBOOK_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: RULEBOOK_TY-KOV
Compiling initial value of quantity: Quantity Q56_within_the_player_s_sigh believed variable 'within the player's sight' = TRUTH_STATE_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TRUTH_STATE_TY-KOV
Compiling initial value of quantity: Quantity Q57_room_gone_from believed variable 'room gone from' = OBJECT_TY-K1'room'-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-K1'room'-KOV
Compiling initial value of quantity: Quantity Q58_room_gone_to believed variable 'room gone to' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q59_door_gone_through believed variable 'door gone through' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q60_vehicle_gone_by believed variable 'vehicle gone by' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q61_thing_gone_with believed variable 'thing gone with' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q62_container_exited_from believed variable 'container exited from' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q63_room_describing_action believed variable 'room-describing action' = ACTION_NAME_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: ACTION_NAME_TY-KOV
Compiling initial value of quantity: Quantity Q64_abbreviated_form_allowed believed variable 'abbreviated form allowed' = TRUTH_STATE_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TRUTH_STATE_TY-KOV
Compiling initial value of quantity: Quantity Q65_visibility_level_count believed variable 'visibility level count' = NUMBER_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: NUMBER_TY-KOV
Compiling initial value of quantity: Quantity Q66_visibility_ceiling believed variable 'visibility ceiling' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
Found 0: 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring
CKP sees range 1 in ID 70
Offset 0 = 'recurring' - CONDITION_MTY/~'non-recurring' -> p52_recurring


==== Phase XI.1 ... Compiling the object tree ====

Instance counting K0
Kind K0 has 0
Kind K1'room' has 1
Kind K2'thing' has 2
Kind K3'direction' has 3
Kind K4'door' has 4
Kind K5'container' has 5
Kind K6'supporter' has 6
Kind K7'backdrop' has 7
Kind K8'person' has 8
Kind K9'region' has 9
Kind K23'man' has 10
Kind K24'woman' has 11
Kind K25'animal' has 12
Kind K26'device' has 13
Kind K27'vehicle' has 14
Kind K28'player's holdall' has 15
Instance counting K1'room'
O104'gate' has 0
Instance counting K2'thing'
O22'yourself' has 0
O105'monk' has 1
O106'bell' has 2
Instance counting K3'direction'
O10'north' has 0
O11'northeast' has 1
O12'northwest' has 2
O13'south' has 3
O14'southeast' has 4
O15'southwest' has 5
O16'east' has 6
O17'west' has 7
O18'up' has 8
O19'down' has 9
O20'inside' has 10
O21'outside' has 11
Instance counting K4'door'
Instance counting K5'container'
Instance counting K6'supporter'
Instance counting K7'backdrop'
Instance counting K8'person'
O22'yourself' has 0
O105'monk' has 1
Instance counting K9'region'
Instance counting K23'man'
O105'monk' has 0
Instance counting K24'woman'
Instance counting K25'animal'
Instance counting K26'device'
Instance counting K27'vehicle'
Instance counting K28'player's holdall'
O10'north' has K3'direction' has 0
O11'northeast' has K3'direction' has 1
O12'northwest' has K3'direction' has 2
O13'south' has K3'direction' has 3
O14'southeast' has K3'direction' has 4
O15'southwest' has K3'direction' has 5
O16'east' has K3'direction' has 6
O17'west' has K3'direction' has 7
O18'up' has K3'direction' has 8
O19'down' has K3'direction' has 9
O20'inside' has K3'direction' has 10
O21'outside' has K3'direction' has 11
Compiling object definition for K0
Compilation of K0 complete
Compiling object definition for K1'room'
PROPERTY_INF - Likely (map region)- nothing- literal:(A)'nothing'/VALUE_MTY/CONSTANT_STY(<null>)-OBJECT_TY-KOV
Compilation of K1'room' complete
Compiling object definition for K2'thing'
Compilation of K2'thing' complete
Compiling object definition for K3'direction'
Initialising: 'opposite' - OBJECT_TY-K3'direction'-KOV -> p6_opposite
Compilation of K3'direction' complete
Compiling object definition for K4'door'
Compilation of K4'door' complete
Compiling object definition for K5'container'
PROPERTY_INF - Likely (carrying capacity)- 100- literal:(A)'100'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV
Compilation of K5'container' complete
Compiling object definition for K6'supporter'
PROPERTY_INF - Likely (carrying capacity)- 100- literal:(A)'100'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV
Compilation of K6'supporter' complete
Compiling object definition for K7'backdrop'
Compilation of K7'backdrop' complete
Compiling object definition for K8'person'
PROPERTY_INF - Likely (carrying capacity)- 100- literal:(A)'100'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV
Compilation of K8'person' complete
Compiling object definition for K9'region'
Compilation of K9'region' complete
Compiling object definition for K23'man'
Compilation of K23'man' complete
Compiling object definition for K24'woman'
Compilation of K24'woman' complete
Compiling object definition for K25'animal'
Compilation of K25'animal' complete
Compiling object definition for K26'device'
Compilation of K26'device' complete
Compiling object definition for K27'vehicle'
Compilation of K27'vehicle' complete
Compiling object definition for K28'player's holdall'
Compilation of K28'player's holdall' complete
Compiling object definition for O10'north'
Object O10'north': wo->creator 1, wo->kind->creator 1, w = <north>
Object O10'north': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <norths>
PROPERTY_INF - Certain (opposite)- south- 1:O13'south'
Compilation of O10'north' complete
Compiling object definition for O11'northeast'
Object O11'northeast': wo->creator 1, wo->kind->creator 1, w = <northeast>
Object O11'northeast': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <northeasts>
PROPERTY_INF - Certain (opposite)- southwest- 1:O15'southwest'
Compilation of O11'northeast' complete
Compiling object definition for O12'northwest'
Object O12'northwest': wo->creator 1, wo->kind->creator 1, w = <northwest>
Object O12'northwest': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <northwests>
PROPERTY_INF - Certain (opposite)- southeast- 1:O14'southeast'
Compilation of O12'northwest' complete
Compiling object definition for O13'south'
Object O13'south': wo->creator 1, wo->kind->creator 1, w = <south>
Object O13'south': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <souths>
PROPERTY_INF - Certain (opposite)- north- 1:O10'north'
Compilation of O13'south' complete
Compiling object definition for O14'southeast'
Object O14'southeast': wo->creator 1, wo->kind->creator 1, w = <southeast>
Object O14'southeast': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <southeasts>
PROPERTY_INF - Certain (opposite)- northwest- 1:O12'northwest'
Compilation of O14'southeast' complete
Compiling object definition for O15'southwest'
Object O15'southwest': wo->creator 1, wo->kind->creator 1, w = <southwest>
Object O15'southwest': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <southwests>
PROPERTY_INF - Certain (opposite)- northeast- 1:O11'northeast'
Compilation of O15'southwest' complete
Compiling object definition for O16'east'
Object O16'east': wo->creator 1, wo->kind->creator 1, w = <east>
Object O16'east': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <easts>
PROPERTY_INF - Certain (opposite)- west- 1:O17'west'
Compilation of O16'east' complete
Compiling object definition for O17'west'
Object O17'west': wo->creator 1, wo->kind->creator 1, w = <west>
Object O17'west': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <wests>
PROPERTY_INF - Certain (opposite)- east- 1:O16'east'
Compilation of O17'west' complete
Compiling object definition for O18'up'
Object O18'up': wo->creator 1, wo->kind->creator 1, w = <up>
Object O18'up': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <ups>
PROPERTY_INF - Certain (opposite)- down- 1:O19'down'
Compilation of O18'up' complete
Compiling object definition for O19'down'
Object O19'down': wo->creator 1, wo->kind->creator 1, w = <down>
Object O19'down': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <downs>
PROPERTY_INF - Certain (opposite)- up- 1:O18'up'
Compilation of O19'down' complete
Compiling object definition for O20'inside'
Object O20'inside': wo->creator 1, wo->kind->creator 1, w = <inside>
Object O20'inside': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <insides>
PROPERTY_INF - Certain (opposite)- outside- 1:O21'outside'
Compilation of O20'inside' complete
Compiling object definition for O21'outside'
Object O21'outside': wo->creator 1, wo->kind->creator 1, w = <outside>
Object O21'outside': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <outsides>
PROPERTY_INF - Certain (opposite)- inside- 1:O20'inside'
Compilation of O21'outside' complete
Compiling object definition for O22'yourself'
Object O22'yourself': wo->creator 1, wo->kind->creator 1, w = <yourself>
Object O22'yourself': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <yourselfs>
PROPERTY_INF - Likely (description)- "As good-looking as ever."- literal:(A)'"As good-looking as ever."'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Compilation of O22'yourself' complete
Compiling object definition for O104'gate'
Object O104'gate': wo->creator 1, wo->kind->creator 1, w = <gate>
Object O104'gate': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <gates>
PROPERTY_INF - Certain (description)- "You approach the gate of the monastery. The gates and the surrounding walls tower over you. there is a wooden birdhouse attached to the wall beside the gate. Within the birdhouse is a small tin bell.  Carved into wood is a command 'ring bell'."- literal:(A)'"You approach the gate of the monastery. The gates and the surrounding walls tower over you. there is a wooden birdhouse attached to the wall beside the gate. Within the birdhouse is a small tin bell.  Carved into wood is a command 'ring bell'."'/VALUE_MTY/CONSTANT_STY-TEXT_TY-KOV
Compilation of O104'gate' complete
Compiling object definition for O105'monk'
Object O105'monk': wo->creator 1, wo->kind->creator 1, w = <monk>
Object O105'monk': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <monks>
Compilation of O105'monk' complete
Compiling object definition for O106'bell'
Object O106'bell': wo->creator 1, wo->kind->creator 1, w = <bell>
Object O106'bell': wo->creator_plural 1, wo->kind->creator_plural 1, pw = <bells>
Compilation of O106'bell' complete


==== Phase XI.2 ... Compiling the tables ====

Compiling column: 'final question wording'/TEXT_TY-KOV
Compiling column: 'only if victorious'/TRUTH_STATE_TY-KOV
Compiling column: 'topic'/UNDERSTANDING_TY-KOV
Compiling column: 'final response rule'/RULE_TY-KOV
Compiling column: 'final response activity'/ACTIVITY_TY-KOV
Compiling column: 'notable-object'/OBJECT_TY-KOV
Compiling column: 'locale description priority'/NUMBER_TY-KOV


==== Phase XI.3 ... Compiling the named action patterns ====



==== Phase XI.4 ... Compiling the action routines ====

Compiling initial value of quantity: Quantity Q57_room_gone_from believed variable 'room gone from' = OBJECT_TY-K1'room'-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-K1'room'-KOV
Compiling initial value of quantity: Quantity Q58_room_gone_to believed variable 'room gone to' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q59_door_gone_through believed variable 'door gone through' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q60_vehicle_gone_by believed variable 'vehicle gone by' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q61_thing_gone_with believed variable 'thing gone with' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q62_container_exited_from believed variable 'container exited from' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV
Compiling initial value of quantity: Quantity Q63_room_describing_action believed variable 'room-describing action' = ACTION_NAME_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: ACTION_NAME_TY-KOV
Compiling initial value of quantity: Quantity Q64_abbreviated_form_allowed believed variable 'abbreviated form allowed' = TRUTH_STATE_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: TRUTH_STATE_TY-KOV
Compiling initial value of quantity: Quantity Q65_visibility_level_count believed variable 'visibility level count' = NUMBER_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: NUMBER_TY-KOV
Compiling initial value of quantity: Quantity Q66_visibility_ceiling believed variable 'visibility ceiling' = OBJECT_TY-KOV

From initial value (A)UNKNOWN_TY/UNKNOWN_TY
Initialising missing initial type: OBJECT_TY-KOV


==== Phase XI.5 ... Compiling the phrases ====

[1] subject NP: (A)'o'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_0;OBJECT_TY-KOV) such that: []
[1] object NP: x conjunction: [ K2'thing'(x) ]
[1] VP conjunction: [ K2'thing'(x) ^ is((A)'o'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_0;OBJECT_TY-KOV),x) ]

result of sentence conversion for <o is a thing>:
basic representation:               [ Exists x: K2'thing'(x) ^ is((A)'o'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_0;OBJECT_TY-KOV),x) ]
simp_eliminate_redundant_variables: [ K2'thing'((A)'o'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_0;OBJECT_TY-KOV)) ]

[1] subject NP: (A)'n'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_1;NUMBER_TY-KOV) such that: []
[1] object NP: (A)'0'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV conjunction: []
[1] VP conjunction: [ at-most((A)'n'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_1;NUMBER_TY-KOV),(A)'0'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV) ]

result of sentence conversion for <n <= 0>:
basic representation:               [ at-most((A)'n'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_1;NUMBER_TY-KOV),(A)'0'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV) ]

[1] subject NP: (A)'o'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_0;OBJECT_TY-KOV) such that: []
[1] object NP: x conjunction: [ mentioned(x) ]
[1] VP conjunction: [ mentioned(x) ^ is((A)'o'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_0;OBJECT_TY-KOV),x) ]

result of sentence conversion for <o is mentioned>:
basic representation:               [ Exists x: mentioned(x) ^ is((A)'o'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_0;OBJECT_TY-KOV),x) ]
simp_eliminate_redundant_variables: [ mentioned((A)'o'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_0;OBJECT_TY-KOV)) ]

[1] subject NP: (A)'n'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_1;NUMBER_TY-KOV) such that: []
[1] object NP: (A)'0'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV conjunction: []
[1] VP conjunction: [ at-most((A)'n'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_1;NUMBER_TY-KOV),(A)'0'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV) ]

result of sentence conversion for <n <= 0>:
basic representation:               [ at-most((A)'n'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_1;NUMBER_TY-KOV),(A)'0'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV) ]

[1] subject NP: (A)'n'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_1;NUMBER_TY-KOV) such that: []
[1] object NP: (A)'0'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV conjunction: []
[1] VP conjunction: [ greater-than((A)'n'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_1;NUMBER_TY-KOV),(A)'0'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV) ]

result of sentence conversion for <n is greater than 0>:
basic representation:               [ greater-than((A)'n'/STORAGE_MTY/LOCAL_VARIABLE_STY(t_1;NUMBER_TY-KOV),(A)'0'/VALUE_MTY/CONSTANT_STY-NUMBER_TY-KOV) ]

[1] subject NP: (A)'last notified score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(last_score) such that: []
[1] object NP: (A)'score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(score) conjunction: []
[1] VP conjunction: [ is((A)'last notified score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(last_score),(A)'score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(score)) ]

result of sentence conversion for <last notified score is the score>:
basic representation:               [ is((A)'last notified score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(last_score),(A)'score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(score)) ]

[1] subject NP: (A)'score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(score) such that: []
[1] object NP: (A)'last notified score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(last_score) conjunction: [  NOT  [  ]
[1] VP conjunction: [  NOT  [ is((A)'score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(score),(A)'last notified score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(last_score)) ]  ]

result of sentence conversion for <score is not the last notified score>:
basic representation:               [  NOT  [ is((A)'score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(score),(A)'last notified score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(last_score)) ]  ]

[1] subject NP: (A)'last notified score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(last_score) such that: []
[1] object NP: (A)'score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(score) conjunction: []
[1] VP conjunction: [ is((A)'last notified score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(last_score),(A)'score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(score)) ]

result of sentence conversion for <last notified score is the score>:
basic representation:               [ is((A)'last notified score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(last_score),(A)'score'/STORAGE_MTY/NONLOCAL_VARIABLE_STY(score)) ]

